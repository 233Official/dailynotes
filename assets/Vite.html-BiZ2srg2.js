import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,a,o as n}from"./app-CFt4SMiv.js";const t={};function l(r,i){return n(),s("div",null,i[0]||(i[0]=[a(`<h1 id="vite" tabindex="-1"><a class="header-anchor" href="#vite"><span>Vite</span></a></h1><ul><li><a href="#vite">Vite</a><ul><li><a href="#%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84">目录结构</a></li><li><a href="#%E8%B7%AF%E5%BE%84%E5%88%AB%E5%90%8D%E9%85%8D%E7%BD%AE">路径别名配置</a></li><li><a href="#%E5%8D%95%E9%A1%B5%E9%9D%A2%E5%BA%94%E7%94%A8%E4%B8%8E%E5%A4%9A%E9%A1%B5%E9%9D%A2%E5%BA%94%E7%94%A8">单页面应用与多页面应用</a></li><li><a href="#%E5%BC%80%E5%A7%8B">开始</a></li><li><a href="#%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA-vite-%E9%A1%B9%E7%9B%AE">搭建一个 <code>Vite</code> 项目</a></li><li><a href="#%E9%83%A8%E7%BD%B2%E9%9D%99%E6%80%81%E7%AB%99%E7%82%B9">部署静态站点</a></li><li><a href="#%E6%9E%84%E5%BB%BA%E5%BA%94%E7%94%A8">构建应用</a></li><li><a href="#%E6%9C%AC%E5%9C%B0%E6%B5%8B%E8%AF%95%E5%BA%94%E7%94%A8">本地测试应用</a></li><li><a href="#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E4%B8%8E%E6%A8%A1%E5%BC%8F">环境变量与模式</a></li><li><a href="#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F">环境变量</a><ul><li><a href="#%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E6%9B%BF%E6%8D%A2">生产环境替换</a></li></ul></li><li><a href="#env-%E6%96%87%E4%BB%B6">.env 文件</a><ul><li><a href="#typescript-%E6%99%BA%E8%83%BD%E6%8F%90%E7%A4%BA">TypeScript 智能提示</a></li></ul></li><li><a href="#%E6%A8%A1%E5%BC%8F">模式</a></li><li><a href="#%E6%8A%A5%E9%94%99%E6%94%B6%E9%9B%86">报错收集</a><ul><li><a href="#listen-eacces-permission-denied-1270013000"><code>listen EACCES: permission denied 127.0.0.1:3000</code></a></li><li><a href="#%E6%89%BE%E4%B8%8D%E5%88%B0%E6%A8%A1%E5%9D%97vue%E6%88%96%E5%85%B6%E7%9B%B8%E5%BA%94%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%A3%B0%E6%98%8Ets2307"><code>找不到模块“vue”或其相应的类型声明。ts(2307)</code></a></li></ul></li></ul></li></ul><hr><blockquote><p><a href="https://cn.vitejs.dev/guide/" target="_blank" rel="noopener noreferrer">开始 | Vite 官方中文文档 (vitejs.dev)</a></p><p>Vite 是一种新型前端构建工具，能够显著提升前端开发体验。它主要由两部分组成：</p><ul><li>一个开发服务器，它基于 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules" target="_blank" rel="noopener noreferrer">原生 ES 模块</a> 提供了 <a href="https://cn.vitejs.dev/guide/features.html" target="_blank" rel="noopener noreferrer">丰富的内建功能</a>，如速度快到惊人的 <a href="https://cn.vitejs.dev/guide/features.html#hot-module-replacement" target="_blank" rel="noopener noreferrer">模块热更新(HMR) </a>。</li><li>一套构建指令，它使用 <a href="https://rollupjs.org/" target="_blank" rel="noopener noreferrer">Rollup</a> 打包你的代码，并且它是预配置的，可输出用于生产环境的高度优化过的静态资源。</li></ul><p>Vite 意在提供开箱即用的配置，同时它的 <a href="https://cn.vitejs.dev/guide/api-plugin.html" target="_blank" rel="noopener noreferrer">插件 API</a> 和 <a href="https://cn.vitejs.dev/guide/api-javascript.html" target="_blank" rel="noopener noreferrer">JavaScript API</a> 带来了高度的可扩展性，并有完整的类型支持。</p><p>你可以在 <a href="https://cn.vitejs.dev/guide/why.html" target="_blank" rel="noopener noreferrer">为什么选 Vite</a> 中了解更多关于项目的设计初衷。</p></blockquote><blockquote><p><a href="https://blog.csdn.net/qq1195566313/article/details/122769982" target="_blank" rel="noopener noreferrer">学习 Vue3 第二章(配置环境) _qq1195566313 的博客-CSDN 博客</a></p></blockquote><ul><li><p><code>vite</code> 的优势</p><p><code>冷服务</code>: 默认的构建目标浏览器是能 <a href="https://caniuse.com/es6-module" target="_blank" rel="noopener noreferrer">在 script 标签上支持原生 ESM</a> 和 <a href="https://caniuse.com/es6-module-dynamic-import" target="_blank" rel="noopener noreferrer">原生 ESM 动态导入</a></p><p>HMR 速度快到惊人的 <a href="https://vitejs.cn/guide/features.html#hot-module-replacement" target="_blank" rel="noopener noreferrer">模块热更新(HMR) </a></p><p>Rollup 打包 它使用 <a href="https://rollupjs.org/" target="_blank" rel="noopener noreferrer">Rollup</a> 打包你的代码，并且它是预配置的 并且支持大部分 rollup 插件</p></li></ul><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">pnpm create v</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="目录结构" tabindex="-1"><a class="header-anchor" href="#目录结构"><span>目录结构</span></a></h2><blockquote><p><a href="https://blog.csdn.net/qq1195566313/article/details/122771007" target="_blank" rel="noopener noreferrer">学习 Vue3 第三章(Vite 目录 &amp; Vue 单文件组件) _qq1195566313 的博客-CSDN 博客</a></p></blockquote><ul><li><p><code>public</code> - 不会被编译, 放置静态资源</p></li><li><p><code>assets</code> - 存放可编译的静态资源</p></li><li><p><code>components</code> - 存放组件</p></li><li><p><code>App.vue</code> - 全局组件</p></li><li><p><code>main.ts</code> - 全局 ts 文件</p></li><li><p><code>index.html</code> - 非常重要的入口文件**(webpack，rollup 他们的入口文件都是 enrty input 是一个 js 文件 而 Vite 的入口文件是一个 html 文件，他刚开始不会编译这些 js 文件 只有当你用到的时候 如 script src=&quot;xxxxx.js&quot; 会发起一个请求被 vite 拦截这时候才会解析 js 文件) **</p></li><li><p><code>vite.config.ts</code> - vite 配置项</p></li><li><p><code>tsconfig.json</code> - TS 编译器配置</p><blockquote><p><a href="https://www.jianshu.com/p/0383bbd61a6b" target="_blank" rel="noopener noreferrer">详解 TypeScript 项目中的 tsconfig.json 配置 - 简书 (jianshu.com)</a></p></blockquote></li></ul><hr><h2 id="路径别名配置" tabindex="-1"><a class="header-anchor" href="#路径别名配置"><span>路径别名配置</span></a></h2><blockquote><p><a href="https://segmentfault.com/a/1190000041417219" target="_blank" rel="noopener noreferrer">(32) vite 配置项目路径别名 - SegmentFault 思否</a></p></blockquote><p><code>vite.config.ts</code>:</p><div class="language-typescript line-numbers-mode" data-highlighter="shiki" data-ext="typescript" data-title="typescript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// vite.config.js/ts</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;path&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">defineConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;vite&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// https://vitejs.dev/config/</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;"> default</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> defineConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  resolve</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    alias</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &quot;@&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">__dirname</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;src&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>tsconfig.json</code></p><div class="language-typescript line-numbers-mode" data-highlighter="shiki" data-ext="typescript" data-title="typescript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   // ...</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;compilerOptions&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // ...其他配置</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;baseUrl&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;.&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;paths&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &quot;@/*&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;src/*&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你是刚创建的 TypeScript 项目，有可能会遇到<code>找不到模块“path”或其相应的类型声明</code>的错误提示，安装<code>@types/node</code>即可。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> @types/node</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --save-dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="单页面应用与多页面应用" tabindex="-1"><a class="header-anchor" href="#单页面应用与多页面应用"><span>单页面应用与多页面应用</span></a></h2><blockquote><p><a href="https://juejin.cn/post/6844903512107663368" target="_blank" rel="noopener noreferrer">前端：你要懂的单页面应用和多页面应用 - 掘金 (juejin.cn)</a></p></blockquote><p><img src="http://cdn.ayusummer233.top/img/202202092250005.png" alt="image-20220209225014834"></p><hr><h2 id="开始" tabindex="-1"><a class="header-anchor" href="#开始"><span>开始</span></a></h2><h2 id="搭建一个-vite-项目" tabindex="-1"><a class="header-anchor" href="#搭建一个-vite-项目"><span>搭建一个 <code>Vite</code> 项目</span></a></h2><blockquote><p><a href="https://cn.vitejs.dev/guide/#trying-vite-online" target="_blank" rel="noopener noreferrer">开始 | Vite 官方中文文档 (vitejs.dev)</a></p></blockquote><blockquote><p><strong>兼容性注意:</strong></p><p>Vite 需要 <a href="https://nodejs.org/en/" target="_blank" rel="noopener noreferrer">Node.js</a> 版本 <code>&gt;= 12.0.0</code>。然而，有些模板需要依赖更高的 <code>Node</code> 版本才能正常运行，当你的包管理器发出警告时，请注意升级你的 <code>Node</code> 版本。</p></blockquote><ul><li><p><code>npm</code></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> vite@latest</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><code>yarn</code></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">yarn</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> vite</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><code>pnpm</code></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> vite</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><hr><h2 id="部署静态站点" tabindex="-1"><a class="header-anchor" href="#部署静态站点"><span>部署静态站点</span></a></h2><blockquote><p><a href="https://cn.vitejs.dev/guide/static-deploy.html#testing-the-app-locally" target="_blank" rel="noopener noreferrer">部署静态站点 | Vite 官方中文文档 (vitejs.dev)</a></p></blockquote><h2 id="构建应用" tabindex="-1"><a class="header-anchor" href="#构建应用"><span>构建应用</span></a></h2><ul><li><p><code>npm</code></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><code>pnpm</code></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><p>默认情况下，构建会输出到 <code>dist</code> 文件夹中。你可以部署这个 <code>dist</code> 文件夹到任何你喜欢的平台。</p><blockquote><p><img src="http://cdn.ayusummer233.top/img/202203251214892.png" alt="image-20220325121425782"></p></blockquote><hr><h2 id="本地测试应用" tabindex="-1"><a class="header-anchor" href="#本地测试应用"><span>本地测试应用</span></a></h2><p>当构建完成应用后, 可以通过运行 <code>npm run preview</code> 命令, 在本地测试该应用</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># pnpm 与 npm 命令一般是相似的</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> preview</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># pnpm</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> preview</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>vite preview</code> 命令会在本地启动一个静态 Web 服务器，将 <code>dist</code> 文件夹运行在 <code>http://localhost:4173</code>。这样在本地环境下查看该构建产物是否正常可用就方便多了。</p><p>可以通过 <code>--port</code> 参数来配置服务的运行端口。</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;scripts&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;preview&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;vite preview --port 8080&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在 <code>preview</code> 命令会将服务器运行在 <code>http://localhost:8080</code>。</p><hr><h2 id="环境变量与模式" tabindex="-1"><a class="header-anchor" href="#环境变量与模式"><span>环境变量与模式</span></a></h2><blockquote><p><a href="https://cn.vitejs.dev/guide/env-and-mode.html" target="_blank" rel="noopener noreferrer">环境变量和模式 | Vite 官方中文文档 (vitejs.dev)</a></p></blockquote><hr><h2 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量"><span>环境变量</span></a></h2><p>Vite 在一个特殊的 <strong><code>import.meta.env</code></strong> 对象上暴露环境变量。这里有一些在所有情况下都可以使用的内建变量：</p><ul><li><strong><code>import.meta.env.MODE</code></strong>: {string} 应用运行的<a href="https://cn.vitejs.dev/guide/env-and-mode.html#modes" target="_blank" rel="noopener noreferrer">模式</a>。</li><li><strong><code>import.meta.env.BASE_URL</code></strong>: {string} 部署应用时的基本 URL。他由<a href="https://cn.vitejs.dev/config/#base" target="_blank" rel="noopener noreferrer"><code>base</code> 配置项</a>决定。</li><li><strong><code>import.meta.env.PROD</code></strong>: {boolean} 应用是否运行在生产环境。</li><li><strong><code>import.meta.env.DEV</code></strong>: {boolean} 应用是否运行在开发环境 (永远与 <code>import.meta.env.PROD</code>相反)</li></ul><hr><h3 id="生产环境替换" tabindex="-1"><a class="header-anchor" href="#生产环境替换"><span>生产环境替换</span></a></h3><p>在生产环境中，这些环境变量会在构建时被<strong>静态替换</strong>，因此，在引用它们时请使用<strong>完全静态的字符串</strong>。动态的 key 将无法生效。例如，动态 key 取值 <code>import.meta.env[key]</code> 是无效的。</p><p>它还将替换出现在 JavaScript 和 Vue 模板中的字符串。这本应是非常少见的，但也可能是不小心为之的。在这种情况下你可能会看到类似 <code>Missing Semicolon</code> 或 <code>Unexpected token</code> 等错误，例如当 <code>&quot;process.env.NODE_ENV&quot;</code> 被替换为 <code>&quot;development&quot;: &quot;&quot;</code>。有一些方法可以避免这个问题：</p><ul><li>对于 JavaScript 字符串，你可以使用 unicode 零宽度空格 <strong><code>\\u200b</code></strong> (一个看不见的分隔符)来分割这个字符串，例如： <code>&#39;import.meta\\u200b.env.MODE&#39;</code>。</li><li>对于 Vue 模板或其他编译到 JavaScript 字符串的 HTML，你可以使用 <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/wbr" target="_blank" rel="noopener noreferrer">&lt;wbr&gt; 标签</a>，例如：<code>import.meta.&lt;wbr&gt;env.MODE</code>。</li></ul><hr><h2 id="env-文件" tabindex="-1"><a class="header-anchor" href="#env-文件"><span>.env 文件</span></a></h2><p>Vite 使用 <a href="https://github.com/motdotla/dotenv" target="_blank" rel="noopener noreferrer">dotenv</a> 从你的 <a href="https://cn.vitejs.dev/config/#envdir" target="_blank" rel="noopener noreferrer">环境目录</a> 中的下列文件加载额外的环境变量：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>.env                # 所有情况下都会加载</span></span>
<span class="line"><span>.env.local          # 所有情况下都会加载，但会被 git 忽略</span></span>
<span class="line"><span>.env.[mode]         # 只在指定模式下加载</span></span>
<span class="line"><span>.env.[mode].local   # 只在指定模式下加载，但会被 git 忽略</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202205031751154.png" alt="image-20220503175156811"></p><blockquote><p>环境加载优先级</p><p>一份用于指定模式的文件(例如 <code>.env.production</code>) 会比通用形式的优先级更高(例如 <code>.env</code>) 。</p><p>另外，Vite 执行时已经存在的环境变量有最高的优先级，不会被 <code>.env</code> 类文件覆盖。例如当运行 <code>VITE_SOME_KEY=123 vite build</code> 的时候。</p><p><code>.env</code> 类文件会在 Vite 启动一开始时被加载，而改动会在重启服务器后生效。</p></blockquote><p>加载的环境变量也会通过 <code>import.meta.env</code> 以字符串形式暴露给客户端源码。</p><p>为了防止意外地将一些环境变量泄漏到客户端，只有以 <code>VITE_</code> 为前缀的变量才会暴露给经过 vite 处理的代码。例如下面这个文件中：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>DB_PASSWORD=foobar</span></span>
<span class="line"><span>VITE_SOME_KEY=123</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>只有 <code>VITE_SOME_KEY</code> 会被暴露为 <code>import.meta.env.VITE_SOME_KEY</code> 提供给客户端源码，而 <code>DB_PASSWORD</code> 则不会。</p><blockquote><p><img src="http://cdn.ayusummer233.top/img/202205031810991.png" alt="image-20220503181037817"></p><p>像 <code>Vben</code> 中的 <code>.env</code>, 这里所有的变量都会暴露出来</p></blockquote><p>如果你想自定义 env 变量的前缀，请参阅 <a href="https://cn.vitejs.dev/config/index.html#envprefix" target="_blank" rel="noopener noreferrer">envPrefix</a>。</p><blockquote><p>安全注意事项</p><p><code>.env.*.local</code> 文件应是本地的，可以包含敏感变量。你应该将 <code>.local</code> 添加到你的 <code>.gitignore</code> 中，以避免它们被 git 检入。</p><p>由于任何暴露给 Vite 源码的变量最终都将出现在客户端包中，<code>VITE_*</code> 变量应该不包含任何敏感信息。</p></blockquote><hr><h3 id="typescript-智能提示" tabindex="-1"><a class="header-anchor" href="#typescript-智能提示"><span>TypeScript 智能提示</span></a></h3><p>默认情况下，Vite 在 <a href="https://github.com/vitejs/vite/blob/main/packages/vite/client.d.ts" target="_blank" rel="noopener noreferrer"><code>vite/client.d.ts</code></a> 中为 <code>import.meta.env</code> 提供了类型定义。随着在 <code>.env[mode]</code> 文件中自定义了越来越多的环境变量，你可能想要在代码中获取这些以 <code>VITE_</code> 为前缀的用户自定义环境变量的 TypeScript 智能提示。</p><p>要想做到这一点，你可以在 <code>src</code> 目录下创建一个 <code>env.d.ts</code> 文件，接着按下面这样增加 <code>ImportMetaEnv</code> 的定义：</p><div class="language-typescript line-numbers-mode" data-highlighter="shiki" data-ext="typescript" data-title="typescript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/// </span><span style="--shiki-light:#383A42;--shiki-light-font-style:italic;--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic;">&lt;</span><span style="--shiki-light:#E45649;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">reference</span><span style="--shiki-light:#986801;--shiki-light-font-style:italic;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> types</span><span style="--shiki-light:#383A42;--shiki-light-font-style:italic;--shiki-dark:#56B6C2;--shiki-dark-font-style:italic;">=</span><span style="--shiki-light:#50A14F;--shiki-light-font-style:italic;--shiki-dark:#98C379;--shiki-dark-font-style:italic;">&quot;vite/client&quot;</span><span style="--shiki-light:#383A42;--shiki-light-font-style:italic;--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">interface</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> ImportMetaEnv</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  readonly</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> VITE_APP_TITLE</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 更多环境变量...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">interface</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> ImportMeta</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  readonly</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> env</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> ImportMetaEnv</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="模式" tabindex="-1"><a class="header-anchor" href="#模式"><span>模式</span></a></h2><p>默认情况下，开发服务器 (<code>dev</code> 命令) 运行在 <code>development</code> (开发) 模式，而 <code>build</code> 命令则运行在 <code>production</code> (生产) 模式。</p><p>这意味着当执行 <code>vite build</code> 时，它会自动加载 <code>.env.production</code> 中可能存在的环境变量：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># .env.production</span></span>
<span class="line"><span>VITE_APP_TITLE=My App</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>在你的应用中，你可以使用 <code>import.meta.env.VITE_APP_TITLE</code> 渲染标题。</p><p>然而，重要的是要理解 <strong>模式</strong> 是一个更广泛的概念，而不仅仅是开发和生产。一个典型的例子是，你可能希望有一个 “staging” (预发布|预上线) 模式，它应该具有类似于生产的行为，但环境变量与生产环境略有不同。</p><p>你可以通过传递 <code>--mode</code> 选项标志来覆盖命令使用的默认模式。例如，如果你想为我们假设的 staging 模式构建应用：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">vite</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --mode</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> staging</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>为了使应用实现预期行为，我们还需要一个 <code>.env.staging</code> 文件：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># .env.staging</span></span>
<span class="line"><span>NODE_ENV=production</span></span>
<span class="line"><span>VITE_APP_TITLE=My App (staging)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在，你的 staging 应用应该具有类似于生产的行为，但显示的标题与生产环境不同。</p><blockquote><p>比如 <code>Vben</code> 中的 <code>.env.test</code></p><p><img src="http://cdn.ayusummer233.top/img/202205031816937.png" alt="image-20220503181616713"></p></blockquote><hr><h2 id="报错收集" tabindex="-1"><a class="header-anchor" href="#报错收集"><span>报错收集</span></a></h2><h3 id="listen-eacces-permission-denied-127-0-0-1-3000" tabindex="-1"><a class="header-anchor" href="#listen-eacces-permission-denied-127-0-0-1-3000"><span><code>listen EACCES: permission denied 127.0.0.1:3000</code></span></a></h3><p><img src="http://cdn.ayusummer233.top/img/202202081429374.png" alt="image-20220208142918215"></p><blockquote><p><a href="https://github.com/microsoft/WSL/issues/5514" target="_blank" rel="noopener noreferrer">Too many reserved port for Hyper-V · Issue #5514 · microsoft/WSL (github.com)</a></p><p><a href="https://superuser.com/questions/1437780/how-to-fix-listen-eacces-permission-denied-on-any-port?newreg=cfbe3fc8d90b48579e87202a58f8679c" target="_blank" rel="noopener noreferrer">windows subsystem for linux - How to fix <code>listen EACCES: permission denied</code> on any port - Super User</a></p><p><a href="https://github.com/docker/for-win/issues/3171#issuecomment-554587817" target="_blank" rel="noopener noreferrer">Unable to bind ports: Docker-for-Windows &amp; Hyper-V excluding but not using important port ranges · Issue #3171 · docker/for-win (github.com)</a></p><p><a href="https://docs.microsoft.com/en-US/troubleshoot/windows-server/networking/default-dynamic-port-range-tcpip-chang" target="_blank" rel="noopener noreferrer">The default dynamic port range for TCP/IP has changed in Windows Vista and in Windows Server 2008 - Windows Server | Microsoft Docs</a></p></blockquote><p><img src="http://cdn.ayusummer233.top/img/202202081644610.png" alt="image-20220208164408408"></p><hr><h3 id="找不到模块-vue-或其相应的类型声明。ts-2307" tabindex="-1"><a class="header-anchor" href="#找不到模块-vue-或其相应的类型声明。ts-2307"><span><code>找不到模块“vue”或其相应的类型声明。ts(2307)</code></span></a></h3><blockquote><p><a href="https://www.cnblogs.com/JasmineHan/p/13673560.html" target="_blank" rel="noopener noreferrer">vue3 报错解决：找不到模块‘xxx.vue’或其相应的类型声明。(Vue 3 can not find module) - 小船二 - 博客园 (cnblogs.com)</a></p></blockquote><p>使用 vite 构建 vue-ts 项目时发现该报错</p><p><img src="http://cdn.ayusummer233.top/img/202202120031251.png" alt="image-20220212003136197"></p><p>原因在于 typescript 只能理解 .ts 文件，无法理解 .vue 文件</p><p>解决方案: 在项目根目录或 <code>src</code> 文件夹下创建一个后缀为 <code>.d.ts</code> 的文件，并写入以下内容：</p><div class="language-typescript line-numbers-mode" data-highlighter="shiki" data-ext="typescript" data-title="typescript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">declare</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> module</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;*.vue&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ComponentOptions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;vue&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> componentOptions</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> ComponentOptions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  export</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;"> default</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> componentOptions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后发现本来就已经有了(</p><p><img src="http://cdn.ayusummer233.top/img/202202120044180.png" alt="image-20220212004458873"></p><p>重启窗口后再看 <code>HelloWorld.vue</code>, 报错消失了 😅</p><p><img src="http://cdn.ayusummer233.top/img/202202120046085.png" alt="image-20220212004613823"></p><blockquote><p>PS: <code>App.vue</code> 里的错误是 <code>vuter</code> 报的, 使用 vue3 开发的话可以禁用 <code>vuter</code>, 使用 <code>volar</code></p><blockquote><p><a href="https://juejin.cn/post/6966106927990308872" target="_blank" rel="noopener noreferrer">Volar - vue 终极开发神器！ - 掘金 (juejin.cn)</a></p></blockquote></blockquote><hr>`,108)]))}const d=e(t,[["render",l],["__file","Vite.html.vue"]]),o=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF/VUE/Vue3/Vite.html","title":"Vite","lang":"zh-CN","frontmatter":{"description":"Vite Vite 目录结构 路径别名配置 单页面应用与多页面应用 开始 搭建一个 Vite 项目 部署静态站点 构建应用 本地测试应用 环境变量与模式 环境变量 生产环境替换 .env 文件 TypeScript 智能提示 模式 报错收集 listen EACCES: permission denied 127.0.0.1:3000 找不到模块“vu...","head":[["meta",{"property":"og:url","content":"https://233official.github.io/dailynotes/%E5%89%8D%E7%AB%AF/VUE/Vue3/Vite.html"}],["meta",{"property":"og:site_name","content":"DailyNotes"}],["meta",{"property":"og:title","content":"Vite"}],["meta",{"property":"og:description","content":"Vite Vite 目录结构 路径别名配置 单页面应用与多页面应用 开始 搭建一个 Vite 项目 部署静态站点 构建应用 本地测试应用 环境变量与模式 环境变量 生产环境替换 .env 文件 TypeScript 智能提示 模式 报错收集 listen EACCES: permission denied 127.0.0.1:3000 找不到模块“vu..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"http://cdn.ayusummer233.top/img/202202092250005.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-17T03:32:15.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-17T03:32:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vite\\",\\"image\\":[\\"http://cdn.ayusummer233.top/img/202202092250005.png\\",\\"http://cdn.ayusummer233.top/img/202203251214892.png\\",\\"http://cdn.ayusummer233.top/img/202205031751154.png\\",\\"http://cdn.ayusummer233.top/img/202205031810991.png\\",\\"http://cdn.ayusummer233.top/img/202205031816937.png\\",\\"http://cdn.ayusummer233.top/img/202202081429374.png\\",\\"http://cdn.ayusummer233.top/img/202202081644610.png\\",\\"http://cdn.ayusummer233.top/img/202202120031251.png\\",\\"http://cdn.ayusummer233.top/img/202202120044180.png\\",\\"http://cdn.ayusummer233.top/img/202202120046085.png\\"],\\"dateModified\\":\\"2025-04-17T03:32:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"咸鱼型233\\",\\"url\\":\\"https://233official.github.io/dailynotes/\\"}]}"]],"date":"2024-04-30T03:40:16.000Z"},"headers":[{"level":2,"title":"目录结构","slug":"目录结构","link":"#目录结构","children":[]},{"level":2,"title":"路径别名配置","slug":"路径别名配置","link":"#路径别名配置","children":[]},{"level":2,"title":"单页面应用与多页面应用","slug":"单页面应用与多页面应用","link":"#单页面应用与多页面应用","children":[]},{"level":2,"title":"开始","slug":"开始","link":"#开始","children":[]},{"level":2,"title":"搭建一个 Vite 项目","slug":"搭建一个-vite-项目","link":"#搭建一个-vite-项目","children":[]},{"level":2,"title":"部署静态站点","slug":"部署静态站点","link":"#部署静态站点","children":[]},{"level":2,"title":"构建应用","slug":"构建应用","link":"#构建应用","children":[]},{"level":2,"title":"本地测试应用","slug":"本地测试应用","link":"#本地测试应用","children":[]},{"level":2,"title":"环境变量与模式","slug":"环境变量与模式","link":"#环境变量与模式","children":[]},{"level":2,"title":"环境变量","slug":"环境变量","link":"#环境变量","children":[{"level":3,"title":"生产环境替换","slug":"生产环境替换","link":"#生产环境替换","children":[]}]},{"level":2,"title":".env 文件","slug":"env-文件","link":"#env-文件","children":[{"level":3,"title":"TypeScript 智能提示","slug":"typescript-智能提示","link":"#typescript-智能提示","children":[]}]},{"level":2,"title":"模式","slug":"模式","link":"#模式","children":[]},{"level":2,"title":"报错收集","slug":"报错收集","link":"#报错收集","children":[{"level":3,"title":"listen EACCES: permission denied 127.0.0.1:3000","slug":"listen-eacces-permission-denied-127-0-0-1-3000","link":"#listen-eacces-permission-denied-127-0-0-1-3000","children":[]},{"level":3,"title":"找不到模块“vue”或其相应的类型声明。ts(2307)","slug":"找不到模块-vue-或其相应的类型声明。ts-2307","link":"#找不到模块-vue-或其相应的类型声明。ts-2307","children":[]}]}],"git":{"createdTime":1714448416000,"updatedTime":1744860735000,"contributors":[{"name":"233Mac","username":"233Mac","email":"ayusummer233@vip.qq.com","commits":2,"url":"https://github.com/233Mac"},{"name":"233JG","username":"233JG","email":"ayusummer233@gmail.com","commits":1,"url":"https://github.com/233JG"}]},"readingTime":{"minutes":9.1,"words":2730},"filePathRelative":"前端/VUE/Vue3/Vite.md","localizedDate":"2024年4月30日","excerpt":"","autoDesc":true}');export{d as comp,o as data};
