import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,o as e}from"./app-CFt4SMiv.js";const l={};function t(h,i){return e(),a("div",null,i[0]||(i[0]=[n(`<h1 id="github" tabindex="-1"><a class="header-anchor" href="#github"><span>Github</span></a></h1><ul><li><a href="#github">Github</a><ul><li><a href="#%E5%8A%A0%E9%80%9F">加速</a><ul><li><a href="#github-%E9%95%9C%E5%83%8F">Github 镜像</a><ul><li><a href="#mirrors">Mirrors</a><ul><li><a href="#%E9%95%9C%E5%83%8F%E6%B5%8B%E9%80%9F">镜像测速</a></li></ul></li></ul></li><li><a href="#pc%E7%BD%91%E9%A1%B5%E7%AB%AF%E7%94%A8%E6%88%B7%E5%A4%B4%E5%83%8F%E5%8A%A0%E8%BD%BD%E4%B8%8D%E5%87%BA%E6%9D%A5">PC网页端用户头像加载不出来</a></li></ul></li><li><a href="#git%E9%85%8D%E7%BD%AE">Git配置</a><ul><li><a href="#ssh-key">SSH Key</a></li><li><a href="#%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E5%88%87%E6%8D%A2-https-%E5%88%B0-ssh">本地仓库切换 https 到 ssh</a></li><li><a href="#ssh-%E4%BB%A3%E7%90%86">SSH 代理</a></li></ul></li><li><a href="#%E7%AE%80%E4%BB%8B">简介</a><ul><li><a href="#commit">Commit</a><ul><li><a href="#%E8%A7%84%E8%8C%83">规范</a></li></ul></li><li><a href="#issues">Issues</a></li><li><a href="#pull-request">Pull Request</a></li></ul></li><li><a href="#actions">Actions</a><ul><li><a href="#%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5">基本概念</a></li><li><a href="#workflow">workflow</a></li></ul></li><li><a href="#markdown">Markdown</a><ul><li><a href="#%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F">数学公式</a></li></ul></li><li><a href="#webhooks">webhooks</a><ul><li><a href="#%E5%80%9F%E5%8A%A9%E9%92%89%E9%92%89%E7%9A%84github%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%B0%86%E4%BB%93%E5%BA%93%E5%8F%98%E5%8A%A8%E9%80%9A%E7%9F%A5%E5%88%B0%E9%92%89%E9%92%89%E7%BE%A4%E9%87%8C">借助钉钉的Github机器人将仓库变动通知到钉钉群里</a></li></ul></li><li><a href="#rss-%E8%AE%A2%E9%98%85">RSS 订阅</a></li><li><a href="#%E5%BC%80%E6%BA%90%E8%AE%B8%E5%8F%AF%E8%AF%81%E9%80%89%E6%8B%A9">开源许可证选择</a></li><li><a href="#copilot">Copilot</a><ul><li><a href="#copilotchatnextwebdeprecated">Copilot+ChatNextWeb(Deprecated)</a></li></ul></li><li><a href="#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98">常见问题</a><ul><li><a href="#github%E4%BB%93%E5%BA%93%E5%90%8C%E6%AD%A5%E7%BB%99-gitlab">Github仓库同步给 Gitlab</a></li><li><a href="#%E8%B4%A6%E6%88%B7-suspended">账户 suspended</a></li><li><a href="#git%E8%BF%87%E5%A4%A7">.git过大</a></li><li><a href="#%E8%85%BE%E8%AE%AF%E4%BA%91-github-%E8%BF%9E%E6%8E%A5%E8%B6%85%E6%97%B6%E9%97%AE%E9%A2%98">腾讯云 github 连接超时问题</a></li></ul></li><li><a href="#%E6%8A%A5%E9%94%99%E5%A4%84%E7%90%86">报错处理</a><ul><li><a href="#failed-to-connect-to-githubcom-port-443-after-21063-ms-timed-out"><code>Failed to connect to github.com port 443 after 21063 ms: Timed out</code></a></li><li><a href="#openssl-ssl_read-connection-was-reset-errno-10054"><code>OpenSSL SSL_read: Connection was reset, errno 10054</code></a></li></ul></li><li><a href="#codeql">CodeQL</a></li><li><a href="#%E6%9C%AA%E6%88%90%E5%8A%9F%E5%BD%92%E6%A1%A3todo">未成功归档/TODO</a><ul><li><a href="#nginx-%E5%8F%8D%E4%BB%A3-githubtodo-mark%E4%B8%8B-%E6%B2%A1%E6%88%90%E5%8A%9F%E8%B7%91%E8%B5%B7%E6%9D%A5">Nginx 反代 Github(TODO: mark下, 没成功跑起来)</a><ul><li><a href="#%E5%AE%89%E8%A3%85-nginx-%E5%92%8C-openssl">安装 Nginx 和 OpenSSL</a></li><li><a href="#%E5%88%B6%E4%BD%9C-ca-%E8%AF%81%E4%B9%A6%E4%B8%8E%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6">制作 CA 证书与签名证书</a></li><li><a href="#%E5%AE%89%E8%A3%85%E8%AF%81%E4%B9%A6">安装证书</a></li><li><a href="#%E9%85%8D%E7%BD%AE-nginx">配置 Nginx</a></li></ul></li></ul></li></ul></li></ul><hr><h2 id="加速" tabindex="-1"><a class="header-anchor" href="#加速"><span>加速</span></a></h2><p>通用的加速方案最好的措施就是用代理</p><p>对于不方便使用代理的场景, 如果是 clone 或者下载项目压缩包, releases 的场景, 可以使用镜像</p><p>除此以外, watt Toolkit 等工具也可以用</p><p>最不济可以手动改 host</p><hr><h3 id="github-镜像" tabindex="-1"><a class="header-anchor" href="#github-镜像"><span>Github 镜像</span></a></h3><blockquote><p><a href="https://github.com/eryajf/Thanks-Mirror#github" target="_blank" rel="noopener noreferrer">eryajf/Thanks-Mirror: 整理记录各个包管理器，系统镜像，以及常用软件的好用镜像，Thanks Mirror。 走过路过，如觉不错，麻烦点个赞👆🌟 (github.com)</a></p></blockquote><hr><h4 id="mirrors" tabindex="-1"><a class="header-anchor" href="#mirrors"><span>Mirrors</span></a></h4><p>GitHub 相关的国内镜像，有不同的使用方式，这里仅列出目前可用的国内镜像，具体用法请查阅镜像的官方说明。</p><ul><li><p>https://hub.fastgit.xyz/</p><p>提供了 GitHub 全站镜像，但注意不要在这个站登陆你的 GitHub 账号。详见<a href="https://doc.fastgit.org/zh-cn/" target="_blank" rel="noopener noreferrer">官方文档</a>。</p><p>类似fastgit的还有：</p><ul><li>https://hub.yzuu.cf/</li><li>https://hub.njuu.cf/</li></ul></li><li><p>https://gitclone.com/</p><p>提供了 <code>GitHub</code> 全面的加速，详见<a href="https://gitclone.com/docs/feature/gitclone_web" target="_blank" rel="noopener noreferrer">官方文档</a>。</p></li><li><p>https://ghproxy.com/</p><p><code>GitHub</code> 文件 , Releases , archive , gist , <code>raw.githubusercontent.com</code> 文件代理加速下载服务，使用细则参见官方。</p></li><li><p>https://toolwa.com/github/</p></li><li><p>https://github.91chi.fun/</p></li><li><p>https://github.abskoop.workers.dev/</p></li><li><p>https://pd.zwc365.com/</p></li><li><p>https://gh.con.sh/</p></li><li><p>https://www.7ed.net/#/raw-cdn</p></li></ul><p>也可以通过其他方式提供的加速方案。</p><ul><li><p><a href="https://greasyfork.org/zh-CN/scripts/397419-fastgithub-%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F%E8%AE%BF%E9%97%AE-%E5%85%8B%E9%9A%86%E5%92%8C%E4%B8%8B%E8%BD%BD" target="_blank" rel="noopener noreferrer">油猴脚本</a></p><p>安装之后，会直接在 <code>GitHub</code> 项目当中出现可用的国内加速克隆方式，比较方便，推荐安装。</p></li><li><p><a href="https://chrome.google.com/webstore/detail/github%E5%8A%A0%E9%80%9F/ffjjnphohkfckeplcjflmgneebafggej?hl=zh" target="_blank" rel="noopener noreferrer">chrome插件</a></p><p>与油猴脚本效果一致，只是通过插件的形式安装配置。</p></li></ul><hr><h6 id="镜像测速" tabindex="-1"><a class="header-anchor" href="#镜像测速"><span>镜像测速</span></a></h6><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 读取源列表每一行的地址, 将每个地址拆分为 [协议, 域名, 路径], 然后对每个域名 ping 4次, 按照响应时间递增排序, 输出到目的文件</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> os</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> ping_linux</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;&quot;&quot;Linux 下的 ping 命令  </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    :param host: 域名</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    :param count: ping 的次数</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    :return: 返回平均响应时长</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    output </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> os.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">popen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;ping </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">host</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -c </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">count</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">read</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        min</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, avg, </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">max</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, mdev </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> re.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">findall</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">r</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">&#39;rtt min/avg/max/mdev = </span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">\\d</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">+</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\.</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">\\d</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">+</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">\\d</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">+</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\.</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">\\d</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">+</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">\\d</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">+</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\.</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">\\d</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">+</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">/</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">\\d</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">+</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\.</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">\\d</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">+</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;"> ms&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, output)[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">host</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> {</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">avg</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ms&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 全丢包的情况下就找不到了, 此时返回一个很大的数</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    except</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;"> IndexError</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">host</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 超时&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 999999</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> float</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(avg)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> split_url_to_hosts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">source_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;&quot;&quot;将源列表每个条目拆分成 [协议, 域名, 路径] 的格式并返回所有条目拆分完后的嵌套列表  </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    :param source_path: 源文件</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    :return: 拆分后的嵌套列表</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    with</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(source_path, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;r&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> f:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        hosts </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> f.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">read</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">splitlines</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> range</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(hosts)):</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            hosts[i] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> hosts[i].</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">strip</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            # 根据 :// 进行拆分, 拆分结果作为继续拆分 协议, 域名, 路径 的依据</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            main_split </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> hosts[i].</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">split</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;://&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            # 第一片为 协议://</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            first_fragment </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> main_split[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;://&#39;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            # 第二片为 域名</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            second_fragment </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> main_split[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">].</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">split</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;/&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            # 第三片为 路径</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            third_fragment </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;/&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;/&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(main_split[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">].</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">split</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;/&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            # 将拆分后的三片组合成一个列表</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            hosts[i] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [first_fragment, second_fragment, third_fragment]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 返回拆分后的嵌套列表</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> hosts</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> sort_write_hosts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">hosts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> target_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) -&gt; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;&quot;&quot;根据对源文件拆分后的嵌套列表中的域名进行 ping 操作, 并将结果按响应时间升序输出到目的文件  </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    :param hosts: 源文件拆分后的嵌套列表  </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    :param target_path: 目标输出文件路径</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    :return: None</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 遍历 hosts 中的每个域名, 并对其进行 ping 操作, 将平均响应时间插入到 hosts 尾部</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> range</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(hosts)):</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        hosts[i].</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">ping_linux</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(hosts[i][</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]))</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 按照响应时间升序排序</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    hosts.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">sort</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">key</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">lambda</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: x[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">])</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 将排序后的 hosts 写入到目的文件</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    with</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(target_path, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;w&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> f:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> host </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> hosts:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            f.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">host[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">host[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">host[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> {</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">host[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ms </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> sort_sources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">source_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> target_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) -&gt; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;&quot;&quot;对源文件(kali 镜像列表)进行排序, 并按照响应时间升序输出到目的文件  </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    :param source_path: kali 镜像列表文件路径  </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    :param target_path: 按照相应时间升序输出的目的文件路径</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;开始拆分源文件...&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 将源文件拆分为嵌套列表</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    hosts </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> split_url_to_hosts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(source_path)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;拆分完成, 开始排序...&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 对拆分后的嵌套列表进行排序并输出到目的文件</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">    sort_write_hosts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(hosts, target_path)    </span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;排序完成, 请查看目的文件&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> __name__</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;__main__&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    source_path </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> os.path.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(os.path.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">dirname</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">__file__</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;sources_github.txt&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    target_path </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> os.path.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(os.path.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">dirname</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">__file__</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;result_github.txt&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">    sort_sources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(source_path, target_path)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="pc网页端用户头像加载不出来" tabindex="-1"><a class="header-anchor" href="#pc网页端用户头像加载不出来"><span>PC网页端用户头像加载不出来</span></a></h3><ul><li><a href="https://zhuanlan.zhihu.com/p/139219691" target="_blank" rel="noopener noreferrer">解决Github网页上图片显示失败的问题</a>[参考链接]</li><li>当前无法显示用户头像的页面下<code>Ctrl+Shift+C</code>打开元素选择器选择未加载出的头像定位到其在源码中的标签并记下其域名 </li><li>打开<code>https://www.ipaddress.com/</code>输入域名并回车得到一个ip </li><li>打开路径<code>C:\\Windows\\System32\\drivers\\etc</code></li><li>修改该路径下的<code>host</code>文件的文件属性中的<code>安全</code>一栏中的<code>Users</code>组的权限,勾选<code>完全控制</code></li><li>用记事本打开<code>host</code>文件,在末尾粘贴以下文字并保存退出,返回原网页刷新即可<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># GitHub Start(更新于2021.1.22) </span></span>
<span class="line"><span>140.82.113.3      github.com</span></span>
<span class="line"><span>140.82.114.20     gist.github.com</span></span>
<span class="line"><span></span></span>
<span class="line"><span>199.232.96.133    assets-cdn.github.com</span></span>
<span class="line"><span>199.232.96.133    raw.githubusercontent.com</span></span>
<span class="line"><span>199.232.96.133    gist.githubusercontent.com</span></span>
<span class="line"><span>199.232.96.133    cloud.githubusercontent.com</span></span>
<span class="line"><span>199.232.96.133    camo.githubusercontent.com</span></span>
<span class="line"><span>199.232.96.133    avatars.githubusercontent.com</span></span>
<span class="line"><span>199.232.68.133     avatars.githubusercontent.com</span></span>
<span class="line"><span>199.232.96.133    avatars0.githubusercontent.com</span></span>
<span class="line"><span>199.232.68.133     avatars0.githubusercontent.com</span></span>
<span class="line"><span>199.232.28.133     avatars1.githubusercontent.com</span></span>
<span class="line"><span>199.232.96.133    avatars1.githubusercontent.com</span></span>
<span class="line"><span>199.232.96.133    avatars2.githubusercontent.com</span></span>
<span class="line"><span>199.232.28.133     avatars2.githubusercontent.com</span></span>
<span class="line"><span>199.232.96.133    avatars3.githubusercontent.com</span></span>
<span class="line"><span>199.232.68.133     avatars3.githubusercontent.com</span></span>
<span class="line"><span>199.232.96.133    avatars4.githubusercontent.com</span></span>
<span class="line"><span>199.232.68.133     avatars4.githubusercontent.com</span></span>
<span class="line"><span>199.232.96.133    avatars5.githubusercontent.com</span></span>
<span class="line"><span>199.232.68.133     avatars5.githubusercontent.com</span></span>
<span class="line"><span>199.232.96.133    avatars6.githubusercontent.com</span></span>
<span class="line"><span>199.232.68.133     avatars6.githubusercontent.com</span></span>
<span class="line"><span>199.232.96.133    avatars7.githubusercontent.com</span></span>
<span class="line"><span>199.232.68.133     avatars7.githubusercontent.com</span></span>
<span class="line"><span>199.232.96.133    avatars8.githubusercontent.com</span></span>
<span class="line"><span>199.232.68.133     avatars8.githubusercontent.com</span></span>
<span class="line"><span></span></span>
<span class="line"><span># GitHub End</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>如若你得到的ip并非<code>199.232.96.133</code>则只需把上面代码中的<code>199.232.96.133</code>利用查找替换替换为你得到的ip即可(当再次无法看到头像时可以试着重查一次ip然后替换掉原ip)</p></blockquote></li></ul><hr><h2 id="git配置" tabindex="-1"><a class="header-anchor" href="#git配置"><span>Git配置</span></a></h2><blockquote><p><a href="https://www.jianshu.com/p/b481d2a42274" target="_blank" rel="noopener noreferrer">GIt设置代理 - 简书 (jianshu.com)</a></p><hr></blockquote><ul><li>设置用户名<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> user.name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;GitHub用户名&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>用户名随个人喜好即可,并非必须要Github的用户名,可以起一个能够代表当前修改环境的名字</li></ul></li><li>设置用户邮箱<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> user.email</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;GitHub绑定邮箱&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>GitHub绑定邮箱请根据自己注册的账号邮箱填写</li></ul></li><li>查看当前配置项列表<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --list</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li>删除某个配置项(以<code>user.name</code>为例)<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --unset</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> user.name</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li>编辑某个配置项<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --edit</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> user.name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;用户名&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><hr><p>使用 VSCode 拉取更新与推送修改经常出错, 需要配置代理(以本地 7890 端口为例), 在本地项目根目录下打开命令行进行代理配置:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http.proxy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://127.0.0.1:7890</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https.proxy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://127.0.0.1:7890</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> core.gitPorxy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> socks5://127.0.0.1:7890</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>可以配置全局代理, 但是由于本地还有在用内网的 gitlab, 所以不适合配全局, 这里是针对项目配的</p><hr><p>取消代理配置如下:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --unset</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http.proxy</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --unset</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https.proxy</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --unset</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> core.gitPorxy</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><hr><h3 id="ssh-key" tabindex="-1"><a class="header-anchor" href="#ssh-key"><span>SSH Key</span></a></h3><blockquote><p><a href="https://blog.csdn.net/qq_45515863/article/details/106312232" target="_blank" rel="noopener noreferrer">git生成连接远程仓库的密钥_旁观者lgp的博客-CSDN博客</a></p></blockquote><ul><li><p>在主机创建 ssh key</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ssh-keygen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rsa</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -C</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;youremail@example.com&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>-C(comment)</code> 随便填, 有辨识度就行</p><p>运行命令后一路回车默认配置, 根据运行提示找到 公钥 <code>id_rsa.pub</code></p></li><li><p><code>Github 右上角头像 -&gt; Settings -&gt; SSH and GPG keys -&gt; add new ssh key</code></p><p>title 随便填, key 粘贴 <code>id_rsa.pub</code> 的全部内容</p></li><li><p>在主机上使用</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 仓库SSH路径</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>来 clone 仓库</p></li></ul><blockquote><p>需要注意的是在 Linux 上使用不同的用户创建的 ssh-key 加入到 github 后也只有对应的用户可以使用, 当切换用户后需要将该用户的 ssh-key 也加入到 Github 的 SSH-key 中方可使用</p></blockquote><hr><h3 id="本地仓库切换-https-到-ssh" tabindex="-1"><a class="header-anchor" href="#本地仓库切换-https-到-ssh"><span>本地仓库切换 https 到 ssh</span></a></h3><blockquote><p><a href="https://github.com/vernesong/OpenClash/issues/1960#issuecomment-1019101426" target="_blank" rel="noopener noreferrer">【求助】开启OpenClash之后，无法使用 git clone/push，kex ssh 密钥错误 · Issue #1960 · vernesong/OpenClash (github.com)</a></p><p>[Correct way to set git proxy - Kirovj&#39;s Chaos --- 设置 git 代理的正确方法 - Kirovj&#39;s Chaos (wuyiting.cn)](https://www.wuyiting.cn/blog/Correct way to set git proxy)</p><p><a href="https://blog.csdn.net/Wrysmile0308/article/details/128801870" target="_blank" rel="noopener noreferrer">使用Git时报错Connection reset by 20.205.243.166 port 22_Wrysmile0308的博客-CSDN博客</a></p><p><a href="https://github.com/orgs/community/discussions/50878" target="_blank" rel="noopener noreferrer">Has GitHub changed his remote host key ? · community · Discussion #50878 --- GitHub 更改了他的远程主机密钥吗？ · 社区 · 讨论 #50878</a></p><p><a href="https://github.blog/2023-03-23-we-updated-our-rsa-ssh-host-key/" target="_blank" rel="noopener noreferrer">We updated our RSA SSH host key - The GitHub Blog --- 我们更新了 RSA SSH 主机密钥 - GitHub 博客</a></p></blockquote><p>可以使用如下命令查看当前仓库的远程 URL:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remote</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309210130370.png" alt="image-20230921013052319"></p><p>要想从 https(ssh) 切到 ssh(https) 的话可以如下设置:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># git remote set-url origin xxx</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> set-url</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git@github.com:Ayusummer/DailyNotes.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="ssh-代理" tabindex="-1"><a class="header-anchor" href="#ssh-代理"><span>SSH 代理</span></a></h3><p>最近更新仓库时总是莫名其妙被重置, 见到了好多奇怪的报错, 包括但不限于</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Connection reset by 20.205.243.166 port 22</span></span>
<span class="line"><span>fatal: Could not read from remote repository.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Please make sure you have the correct access rights</span></span>
<span class="line"><span>and the repository exists.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Error: Unable to Fetch from Remote(s)</span></span>
<span class="line"><span>kex_exchange_identification: Connection closed by remote host</span></span>
<span class="line"><span>Connection closed by UNKNOWN port 65535</span></span>
<span class="line"><span>fatal: Could not read from remote repository.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Please make sure you have the correct access rights</span></span>
<span class="line"><span>and the repository exists.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Error: Unable to Fetch from Remote(s)</span></span>
<span class="line"><span>Host key verification failed.</span></span>
<span class="line"><span>fatal: Could not read from remote repository.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Please make sure you have the correct access rights</span></span>
<span class="line"><span>and the repository exists.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最终达成的解决方案是</p><ol><li><p>把本地的密钥对删了, 重新新建一对密钥并将公钥添加到 github ssh key</p></li><li><p>清除本地 <code>know_hosts</code> 中的 github 条目</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309210135195.png" alt="image-20230921013523135"></p><p>如果有 <code>know_hosts.old</code> 文件, 可以直接把这个 old 删了</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309210137027.png" alt="image-20230921013757996"></p></li><li><p>配置 ssh 使用本地代理, 以 clash 默认 7890 端口为例</p><p>配置文件在 <code>~/.ssh/config</code>, 不存在则新建, 对于 windows 而言可以是:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309210139983.png" alt="image-20230921013914928"></p><p>写入如下配置</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># For Windows</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">Host github.com</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">    Hostname ssh.github.com</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">    Port 443</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">    User git</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">    ProxyCommand connect -H 127.0.0.1:7890 %h %p</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># For macOS</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">Host github.com</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">    Hostname ssh.github.com</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">    Port 443</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">    User git</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">    ProxyCommand /usr/bin/nc -x 127.0.0.1:8235 -X 5 %h %p</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>关闭 VSCode, 重新打开即可, 可以 git fetch 看下效果</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309210141058.png" alt="image-20230921014108032"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202309210141104.png" alt="image-20230921014150077"></p></li></ol><p>至少我如此操作成功修复了, 后续再遇到类似问题再看吧(</p><hr><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><hr><h3 id="commit" tabindex="-1"><a class="header-anchor" href="#commit"><span>Commit</span></a></h3><ul><li>提交代码</li></ul><hr><h4 id="规范" tabindex="-1"><a class="header-anchor" href="#规范"><span>规范</span></a></h4><p><a href="https://github.com/UvDream/git-commit-lint-vscode" target="_blank" rel="noopener noreferrer">UvDream/git-commit-lint-vscode: vscode一款git 规范化提交插件 (github.com)</a></p><p>参照 <code>Angular</code> 社区的提交规范并结合 emoji, 上面参考链接里这位老哥开发了一款 <code>VSCode</code> git 规范化提交插件 <code>git-commit-lint-vscode</code>, 提交的时候可视化选择类型然后再手打详细信息</p><p><img src="http://cdn.ayusummer233.top/img/20210628112317.png" alt="image-20210628112317321"></p><hr><h3 id="issues" tabindex="-1"><a class="header-anchor" href="#issues"><span>Issues</span></a></h3><hr><h3 id="pull-request" tabindex="-1"><a class="header-anchor" href="#pull-request"><span>Pull Request</span></a></h3><ul><li><a href="https://www.zhihu.com/question/21682976" target="_blank" rel="noopener noreferrer">参考链接</a></li><li>以下为文章原文:</li><li>我尝试用类比的方法来解释一下 pull reqeust。想想我们中学考试，老师改卷的场景吧。 <ul><li>你做的试卷就像仓库，你的试卷肯定会有很多错误，就相当于程序里的 bug。</li><li>老师把你的试卷拿过来，相当于先 fork。 <ul><li>在你的卷子上做一些修改批注，相当于 git commit。</li><li>最后把改好的试卷给你，相当于发 pull request，</li></ul></li><li>你拿到试卷重新改正错误，相当于 merge。</li></ul></li></ul><hr><h2 id="actions" tabindex="-1"><a class="header-anchor" href="#actions"><span>Actions</span></a></h2><blockquote><p><a href="http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html" target="_blank" rel="noopener noreferrer">原文链接:GitHub Actions 入门教程 - 阮一峰的网络日志 (ruanyifeng.com)</a></p><p><a href="https://docs.github.com/cn/github-ae@latest/actions/using-workflows/about-workflows" target="_blank" rel="noopener noreferrer">关于工作流程 - GitHub Docs</a></p><hr><p><a href="https://blog.baoshuo.ren/post/actions-ssl-cert/" target="_blank" rel="noopener noreferrer">使用 GitHub Actions 自动申请与部署 SSL 证书 - 宝硕博客 (baoshuo.ren)</a></p></blockquote><p>持续集成由很多操作组成，比如抓取代码、运行测试、登录远程服务器，发布到第三方服务等等。GitHub 把这些操作就称为 actions。</p><p>很多操作在不同项目里面是类似的，完全可以共享。GitHub 允许开发者把每个操作写成独立的脚本文件，存放到代码仓库，使得其他开发者可以引用。</p><p>如果你需要某个 action，不必自己写复杂的脚本，直接引用他人写好的 action 即可，整个持续集成过程，就变成了一个 actions 的组合。这就是 GitHub Actions 最特别的地方。</p><p>GitHub 做了一个<a href="https://github.com/marketplace?type=actions" target="_blank" rel="noopener noreferrer">官方市场</a>，可以搜索到他人提交的 actions。另外，还有一个 <a href="https://github.com/sdras/awesome-actions" target="_blank" rel="noopener noreferrer">awesome actions</a> 的仓库，也可以找到不少 action。</p><p>每个 action 就是一个独立脚本，因此可以做成代码仓库，使用<code>userName/repoName</code>的语法引用 action。比如，<code>actions/setup-node</code>就表示<code>github.com/actions/setup-node</code>这个<a href="https://github.com/actions/setup-node" target="_blank" rel="noopener noreferrer">仓库</a>，它代表一个 action，作用是安装 Node.js。事实上，GitHub 官方的 actions 都放在 <a href="https://github.com/actions" target="_blank" rel="noopener noreferrer">github.com/actions</a> 里面。</p><p>actions 是代码仓库，有版本的概念，用户可以引用某个具体版本的 action。下面都是合法的 action 引用，用的就是 Git 的指针概念，详见<a href="https://help.github.com/en/articles/about-actions#versioning-your-action" target="_blank" rel="noopener noreferrer">官方文档</a>。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">actions/setup-node@74bc508</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 指向一个 commit</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">actions/setup-node@v1.0</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 指向一个标签</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">actions/setup-node@master</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 指向一个分支</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念"><span>基本概念</span></a></h3><ul><li><code>workflow</code>: 持续集成一次运行的过程，就是一个 workflow。</li><li><code>job</code>: 一个 workflow 由一个或多个 jobs 构成，含义是一次持续集成的运行，可以完成多个任务。</li><li><code>step</code>: 每个 job 由多个 step 构成，一步步完成。</li><li><code>action</code>: 每个 step 可以依次执行一个或多个命令(action) 。</li></ul><hr><h3 id="workflow" tabindex="-1"><a class="header-anchor" href="#workflow"><span>workflow</span></a></h3><p>GitHub Actions 的配置文件叫做 workflow 文件，存放在代码仓库的<code>.github/workflows</code>目录。</p><p>workflow 文件采用 <a href="https://www.ruanyifeng.com/blog/2016/07/yaml.html" target="_blank" rel="noopener noreferrer">YAML 格式</a>，文件名可以任意取，但是后缀名统一为<code>.yml</code>，比如<code>foo.yml</code>。一个库可以有多个 workflow 文件。GitHub 只要发现<code>.github/workflows</code>目录里面有<code>.yml</code>文件，就会自动运行该文件。</p><blockquote><p><img src="http://cdn.ayusummer233.top/img/202205220719879.png" alt="image-20220522071931643"></p></blockquote><p>workflow 文件的配置字段非常多，详见<a href="https://help.github.com/en/articles/workflow-syntax-for-github-actions" target="_blank" rel="noopener noreferrer">官方文档</a>。下面是一些基本字段。</p><ul><li><p><code>name</code>: <code>name</code>字段是 workflow 的名称。如果省略该字段，默认为当前 workflow 的文件名。</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Create Release</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><code>on</code>: <code>on</code>字段指定触发 workflow 的条件，通常是某些事件。</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">push</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>上面代码指定，<code>push</code>事件触发 workflow。</p><p><code>on</code>字段也可以是事件的数组。</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">pull_request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>完整的事件列表，请查看<a href="https://help.github.com/en/articles/events-that-trigger-workflows" target="_blank" rel="noopener noreferrer">官方文档</a>。除了代码库事件，GitHub Actions 也支持外部事件触发，或者定时运行。</p></li><li><p><code>on.&lt;push|pull_request&gt;.&lt;tags|branches&gt;</code>: 指定触发事件时，可以限定分支或标签。</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    branches</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">master</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当使用 <code>push</code> 事件时, 可以配置 <code>workflow</code> 运行在指定的 <code>branch</code> 或是 <code>tag</code> 上</p><p>如果希望包含 <code>branch</code> 名称模式，或者希望同时包含和排除 <code>branch</code> 名称模式，可以使用 <code>branch</code> 筛选器。当只想排除分支名称模式时，使用<code>branches-ignore</code>筛选器。注意不能对工作流中的同一事件同时使用 <code>branches</code> 和 <code>branches-ignore</code>筛选器</p><p>对于 <code>tag</code> 处理和上述 <code>branch</code> 处理相似</p><p>像这样类似的 <code>paths</code> 以及 <code>paths-gnore</code> 关键词支持使用 <code>*</code> 和 <code>**</code> 通配符匹配多个路径名的 glob pattern; 更多信息请参阅“<a href="https://docs.github.com/cn/github-ae@latest/actions/using-workflows/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet" target="_blank" rel="noopener noreferrer">过滤器模式备忘清单</a>”。</p></li><li><p><code>jobs.&lt;job_id&gt;.name</code></p><p>workflow 文件的主体是<code>jobs</code>字段，表示要执行的一项或多项任务。</p><p><code>jobs</code>字段里面，需要写出每一项任务的<code>job_id</code>，具体名称自定义。<code>job_id</code>里面的<code>name</code>字段是任务的说明。</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">jobs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  my_first_job</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">My first job</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  my_second_job</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">My second job</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码的<code>jobs</code>字段包含两项任务，<code>job_id</code>分别是<code>my_first_job</code>和<code>my_second_job</code>。</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">jobs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Create Release</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>job_id</code>: build; <code>name</code>: Create Release</p></li><li><p><code>jobs.&lt;job_id&gt;.needs</code>: <code>needs</code>字段指定当前任务的依赖关系，即运行顺序。</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">jobs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  job1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  job2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    needs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">job1</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  job3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    needs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">job1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">job2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码中，<code>job1</code>必须先于<code>job2</code>完成，而<code>job3</code>等待<code>job1</code>和<code>job2</code>的完成才能运行。因此，这个 workflow 的运行顺序依次为：<code>job1</code>、<code>job2</code>、<code>job3</code>。</p></li><li><p><code>jobs.&lt;job_id&gt;.runs-on</code>: <code>runs-on</code>字段指定运行所需要的虚拟机环境。它是必填字段。目前可用的虚拟机如下。</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ubuntu-latest，ubuntu-18.04或ubuntu-16.04</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">windows-latest，windows-2019或windows-2016</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">macOS-latest或macOS-10.14</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><a href="https://docs.github.com/cn/github-ae@latest/actions/hosting-your-own-runners/about-self-hosted-runners" target="_blank" rel="noopener noreferrer">About self-hosted runners - GitHub Docs</a></p></blockquote></li><li><p><code>jobs.&lt;job_id&gt;.steps</code>: <code>steps</code>字段指定每个 Job 的运行步骤，可以包含一个或多个步骤。每个步骤都可以指定以下三个字段。</p><ul><li><code>jobs.&lt;job_id&gt;.steps.name</code>：步骤名称。</li><li><code>jobs.&lt;job_id&gt;.steps.run</code>：该步骤运行的命令或者 action。</li><li><code>jobs.&lt;job_id&gt;.steps.env</code>：该步骤所需的环境变量。</li></ul></li></ul><hr><h2 id="markdown" tabindex="-1"><a class="header-anchor" href="#markdown"><span>Markdown</span></a></h2><h3 id="数学公式" tabindex="-1"><a class="header-anchor" href="#数学公式"><span>数学公式</span></a></h3><ul><li><a href="https://github.com/orsharir/github-mathjax/releases/tag/v0.2.1" target="_blank" rel="noopener noreferrer">访问该地址</a><ul><li>下载<code>Source code(zip)</code></li><li>解压到\`C:/Users/&quot;你的用户名&quot;/AppDataLocal/Google/Chrome/User Data/Default/Extensions <ul><li>注意解压后的文件夹表层和里一层都是一样的文件夹名 <ul><li>只要里层的</li></ul></li></ul></li><li>打开Chrome扩展程序,打开开发者模式</li><li>加载已解压的扩展程序 <ul><li>就是刚才放到上面目录里的整个文件夹</li><li><img src="http://cdn.ayusummer233.top/img/202211080017729.png" alt="image-20221108001752709"></li></ul></li><li>此时再打开Github查看源码就能显示markdown的数学公式了</li><li><img src="http://cdn.ayusummer233.top/img/202211080018283.png" alt="image-20221108001819213"></li></ul></li></ul><h2 id="webhooks" tabindex="-1"><a class="header-anchor" href="#webhooks"><span>webhooks</span></a></h2><h3 id="借助钉钉的github机器人将仓库变动通知到钉钉群里" tabindex="-1"><a class="header-anchor" href="#借助钉钉的github机器人将仓库变动通知到钉钉群里"><span>借助钉钉的Github机器人将仓库变动通知到钉钉群里</span></a></h3><ul><li><a href="https://blog.csdn.net/q563573095/article/details/79580249" target="_blank" rel="noopener noreferrer">参考链接</a></li><li>进入钉钉群聊 <ul><li>侧边栏第一个图标<code>群设置</code></li><li>智能群助手</li><li>添加机器人</li><li>更多<code>...</code></li><li><strong>Github</strong>机器人</li><li>添加</li><li>复制Webhook链接</li></ul></li><li>打开Github仓库 <ul><li>Settings</li><li>左侧边栏<code>Webhooks</code></li><li><code>Add webhook</code></li><li><code>Payload URL</code>填刚才从钉钉Github机器人那里复制来的webhook链接</li><li>其余选项自行发挥 <ul><li>记得勾选Active</li></ul></li><li><code>Add webhook</code></li></ul></li><li>push一次提交 <ul><li>这时候就会有钉~的提醒啦</li></ul></li></ul><hr><h2 id="rss-订阅" tabindex="-1"><a class="header-anchor" href="#rss-订阅"><span>RSS 订阅</span></a></h2><blockquote><p><a href="https://utgd.net/article/21254/" target="_blank" rel="noopener noreferrer">为什么，以及如何用 RSS 订阅 GitHub 更新 / #UNTAG</a></p></blockquote><ul><li>订阅仓库 Releases: <code>https://github.com/:owner/:repo/releases.atom</code></li><li>订阅仓库 Commits: https://github.com/:owner/:repo/commits.atom\`</li></ul><hr><h2 id="开源许可证选择" tabindex="-1"><a class="header-anchor" href="#开源许可证选择"><span>开源许可证选择</span></a></h2><p><img src="http://cdn.ayusummer233.top/DailyNotes/202302191539879.png" alt="开源许可证选择" title="屏幕截图.png"></p><blockquote><p><a href="http://www.ruanyifeng.com/blog/2011/05/how_to_choose_free_software_licenses.html" target="_blank" rel="noopener noreferrer">from 阮一峰-2011.5.2</a></p></blockquote><hr><h2 id="copilot" tabindex="-1"><a class="header-anchor" href="#copilot"><span>Copilot</span></a></h2><h3 id="copilot-chatnextweb-deprecated" tabindex="-1"><a class="header-anchor" href="#copilot-chatnextweb-deprecated"><span>Copilot+ChatNextWeb(Deprecated)</span></a></h3><blockquote><p>别用, 会导致 Copilot 被封禁, 如果已经被封禁了就提工单坦白吧, 初次被封的话应该能放出来; Copilot 工单回复比 github suspended回复的频率要高太多了(毕竟是付费订阅服务)<br> Copilot 被封后别在当前机子新建新的账号订阅 Copilot, 会导致 github 账号全 suspended, 而且提工单可能很久(一周以上)都收不到回复(补充了好几封邮件都没有回复)</p><p>PS:</p><ul><li>四个多月了, 账号大约的确是似了, 不给解封,漂流瓶联系 Github Support 碰运气看给不给解封</li><li>最好使用纯英文邮件, 包括标题,正文所有都英文, 尤其是邮箱点回复时自动会加上的 <code>回复</code> 字样</li></ul></blockquote><blockquote><p><a href="https://jiajunhuang.com/articles/2024_03_03-copilot_as_gpt4.md.html" target="_blank" rel="noopener noreferrer">有GitHub Copilot？那就可以搭建你的ChatGPT4服务 - Jiajun的技术笔记 (jiajunhuang.com)</a></p><p><a href="https://github.com/github/copilot.vim" target="_blank" rel="noopener noreferrer">github/copilot.vim: Neovim plugin for GitHub Copilot</a></p></blockquote><p>用 neovim/vim 加上 github CLI 为 vim 添加 Copilot 支持, 然后找 <code>~/.config/github-copilot/hosts.json</code>中可以看到 Copilot token</p><p>然后两步 docker 即可</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> COPILOT_TOKEN=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">刚才找到的Copilot里的token，ghu_</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 开头的那</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">个&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> SUPER_TOKEN=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">自定义的token，等会儿给</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ChatGPT-Next-Web使</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">用&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ENABLE_SUPER_TOKEN=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> copilot-gpt4-service</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    --restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> always</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 8080:8080</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    aaamoon/copilot-gpt4-service:latest</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 3000:3000</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> BASE_URL=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">你配置的域</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">名&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> OPENAI_API_KEY=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">刚才设置的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> SUPER_TOKEN，也就是自定义的toke</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">n&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CODE=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">等于一个登录密码，防止</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ChatGPT-Next-Web</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 被他人滥</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">用&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    yidadaa/chatgpt-next-web</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>域名那里可以不用设置, 改成 <code>http://docker能访问到的主机的ip:8080</code></p></blockquote><p>然后登录 <code>3000</code> 端口的 web 服务, 设置登录密码以及 <code>GPT4</code> 即可开始使用</p><hr><h2 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题"><span>常见问题</span></a></h2><h3 id="github仓库同步给-gitlab" tabindex="-1"><a class="header-anchor" href="#github仓库同步给-gitlab"><span>Github仓库同步给 Gitlab</span></a></h3><p>原本想用 Github 和 Gitlab 内置的 同步/镜像 功能来做两边的仓库同步, 但是最后不管是哪一边都没有成功</p><p>后来在 Github 上找到了一个 Actions 可以用: <a href="https://github.com/marketplace/actions/sync-to-gitlab" target="_blank" rel="noopener noreferrer">Sync to GitLab · Actions · GitHub Marketplace</a></p><p>例如:</p><div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Sync Repo to GitLab</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  push</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">jobs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  sync-gitlab</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    runs-on</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ubuntu-latest</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    steps</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">uses</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">keninkujovic/gitlab-sync@2.0.0</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        gitlab_url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${{ secrets.GITLAB_URL }}</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        username</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${{ secrets.USERNAME }}</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        gitlab_pat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\${{ secrets.GITLAB_PAT }}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>推送这个 actions 修改提交前需要</p><ul><li><p>在 gitlab 相应仓库中配置 access token</p></li><li><p>在 Github 仓库中设置 secrets</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202409091813943.png" alt="image-20240909181338380"></p></li></ul></blockquote><p>推送此提交后即可看到 gitlab 那边也相应推送了</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202409091815082.png" alt="image-20240909181552875"></p><hr><h3 id="账户-suspended" tabindex="-1"><a class="header-anchor" href="#账户-suspended"><span>账户 suspended</span></a></h3><blockquote><p><a href="https://docs.github.com/zh/enterprise-cloud@latest/support/learning-about-github-support/about-ticket-priority" target="_blank" rel="noopener noreferrer">关于票证优先级 - GitHub Enterprise Cloud Docs</a></p><hr><p><a href="https://blog.zzsqwq.cn/posts/github-suspended-for-no-reason/" target="_blank" rel="noopener noreferrer">记一次 GitHub 账号突然被 suspended 的经历 | Zs&#39;s Blog (zzsqwq.cn)</a></p><p><a href="https://zhuanlan.zhihu.com/p/651189345" target="_blank" rel="noopener noreferrer">分享一次我github被封的经历以及迁移指南 - 知乎 (zhihu.com)</a></p><p><a href="https://blog.forecho.com/talking-about-the-recent-github-account-anomaly.html" target="_blank" rel="noopener noreferrer">聊聊最近 GitHub 账号异常问题 - forecho&#39;s Blog</a></p><p><a href="https://cloud.tencent.com/developer/article/2352561" target="_blank" rel="noopener noreferrer">分享下我 GitHub 被封的经历-腾讯云开发者社区-腾讯云 (tencent.com)</a></p></blockquote><p>suspended 之后申诉会很漫长, 等了二十多天补充了三次封邮件一封人工回复都没收到</p><blockquote><p><img src="http://cdn.ayusummer233.top/DailyNotes/202406121708317.png" alt="image-20240612170841783"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202406121709013.png" alt="image-20240612170954747"></p></blockquote><p>在找参考材料的过程中看到 <a href="https://cloud.tencent.com/developer/article/2352561" target="_blank" rel="noopener noreferrer">分享下我 GitHub 被封的经历-腾讯云开发者社区-腾讯云 (tencent.com)</a> 也被封过, 在 P牛的复盘里提到了如下几项注意点</p><ul><li><p>不要随便 fork 项目，况且是你明知他是违反 DMCA 的项目</p><blockquote><p>P牛就是因为Fork了DMCA项目导致的账号被封</p></blockquote></li><li><p>及时备份自己的代码仓库、star 列表</p><blockquote><p>可以通过 <code>https://api.github.com/users/[username]/starred</code> 来获取 Star 列表</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202405311652349.png" alt="image-20240531165224119"></p></blockquote></li><li><p>各种网站登录，一定要有除第三方登录以外的另一种登录方式</p><blockquote><p>很多其他网站我都是直接通过 Github 登录的, 没有注意留下其他登录方案, 这下长教训了</p></blockquote></li><li><p>努力沟通还是会有结果</p><blockquote><p>P牛多次沟通最终还是解封了</p><p>PS:</p><ul><li>我目前两周了还没收到第一封回复邮件, 有难难蚌, 在 Github Community Discussion 里也看不不少账户 suspended 提了 Ticket 但是几个月都没有收到回复的, 这就比较伤了</li><li>两个月后收到了邮件开始交涉, 交涉很困难, 不认理, 很吃运气, 对方不想支持回复了一封邮件后就不会再回复, 也不会仔细看你的回复</li><li>四个月了, 账号大约的确是似了(</li></ul></blockquote></li></ul><hr><h3 id="git过大" tabindex="-1"><a class="header-anchor" href="#git过大"><span>.git过大</span></a></h3><blockquote><p><a href="https://www.cnblogs.com/everlose/p/12826025.html" target="_blank" rel="noopener noreferrer">.git 文件太大时怎样处理 - Ever-Lose - 博客园 (cnblogs.com)</a></p></blockquote><ul><li>初用git时有时会错把资源文件传到源码仓库里去,这样下来仓库本身就会变得特别大,即使是后来删掉了资源文件也会导致<code>.git</code>文件过大从而直接<code>clone</code>的时候可能会因为仓库过大而失败</li><li>提交次数过多也会让<code>.git</code>越来越大</li><li>解决方法: 如果确定之前的提交对现在已经没有用了,那么在<code>clone</code>仓库的时候在最后加上<code>--depth 1</code>只克隆最后一次<code>commit</code></li></ul><hr><h3 id="腾讯云-github-连接超时问题" tabindex="-1"><a class="header-anchor" href="#腾讯云-github-连接超时问题"><span>腾讯云 github 连接超时问题</span></a></h3><ul><li>使用腾讯云北京的轻量应用服务器推送更新时总是连接超时,最终找到了有效的如下<a href="https://cloud.tencent.com/developer/article/1704705" target="_blank" rel="noopener noreferrer">解决方案</a></li><li>打开 ipaddress.com,查询github.com域名，记录下其对应的ip(IP Address项内容)</li><li>修改并保存<code>/etc/hosts</code>:末尾加上<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>查询到的域名 github.com</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><hr><h2 id="报错处理" tabindex="-1"><a class="header-anchor" href="#报错处理"><span>报错处理</span></a></h2><h3 id="failed-to-connect-to-github-com-port-443-after-21063-ms-timed-out" tabindex="-1"><a class="header-anchor" href="#failed-to-connect-to-github-com-port-443-after-21063-ms-timed-out"><span><code>Failed to connect to github.com port 443 after 21063 ms: Timed out</code></span></a></h3><p>网不好, 换个结点</p><hr><h3 id="openssl-ssl-read-connection-was-reset-errno-10054" tabindex="-1"><a class="header-anchor" href="#openssl-ssl-read-connection-was-reset-errno-10054"><span><code>OpenSSL SSL_read: Connection was reset, errno 10054</code></span></a></h3><blockquote><p><a href="https://blog.csdn.net/myRealization/article/details/119737101" target="_blank" rel="noopener noreferrer">【Git/GitHub】解决Git上传时OpenSSL SSL_read: Connection was reset, errno 10054的错误_memcpy0的博客-CSDN博客</a></p></blockquote><p>我碰到的情况是本地 git 配置错了, 前阵子在 github 上更改了主邮箱, 相应的本地配置要改下邮箱</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> user.email</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;xxx&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="codeql" tabindex="-1"><a class="header-anchor" href="#codeql"><span>CodeQL</span></a></h2><blockquote><p><a href="https://codeql.github.com/docs/" target="_blank" rel="noopener noreferrer">CodeQL documentation (github.com)</a></p><p>CodeQL 是一套 Github 在2019 开源且免费的静态扫描代码工具，让你能在产品release 前及早发现潜藏的漏洞并提供相对应改善的方法。</p></blockquote><p><a href="https://github.com/ASTTeam/CodeQL" target="_blank" rel="noopener noreferrer">ASTTeam/CodeQL: 《深入理解CodeQL》Finding vulnerabilities with CodeQL. (github.com)</a></p><hr><h2 id="未成功归档-todo" tabindex="-1"><a class="header-anchor" href="#未成功归档-todo"><span>未成功归档/TODO</span></a></h2><hr><h3 id="nginx-反代-github-todo-mark下-没成功跑起来" tabindex="-1"><a class="header-anchor" href="#nginx-反代-github-todo-mark下-没成功跑起来"><span>Nginx 反代 Github(TODO: mark下, 没成功跑起来)</span></a></h3><blockquote><p>本地测试环境 - ubuntu 20.04 LTS</p><p><a href="https://zhuanlan.zhihu.com/p/411165246" target="_blank" rel="noopener noreferrer">nginx本地反代github - 知乎 (zhihu.com)</a></p><hr></blockquote><h4 id="安装-nginx-和-openssl" tabindex="-1"><a class="header-anchor" href="#安装-nginx-和-openssl"><span>安装 Nginx 和 OpenSSL</span></a></h4><blockquote><p><a href="https://zhuanlan.zhihu.com/p/138007915" target="_blank" rel="noopener noreferrer">如何在 Ubuntu 20.04 上安装 Nginx - 知乎 (zhihu.com)</a></p><hr></blockquote><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>一旦安装完成，Nginx 将会自动被启动。你可以运行下面的命令来验证它：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> status</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在你已经在你的服务器上安装和运行了 Nginx，你需要确保你的防火墙被配置好，允许流量通过 HTTP(<code>80</code>) 和 HTTPS(<code>443</code>) 端口。</p><hr><ul><li><p>假设你正在使用<code>UFW</code>,你可以做的是启用 ‘Nginx Full’ profile，它包含了这两个端口：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ufw</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> allow</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Nginx Full&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>想要验证状态，输入：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ufw</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> status</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>而如果使用的是厂商的云服务器则需要在服务器的控制面板的防火墙管理面板处放通端口(一般都是默认放通的)</p><p><img src="http://cdn.ayusummer233.top/img/202210122237943.png" alt="image-20221012223741767"></p></li></ul><hr><blockquote><p><a href="https://www.openssl.net.cn/docs/8.html" target="_blank" rel="noopener noreferrer">2.2.1 linux下的安装_OpenSSL 中文手册</a></p><hr></blockquote><p>服务器默认已经安装了 OpenSSL, 可以使用如下命令查看其版本及位置</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">openssl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> version</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">whereis</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> openssl</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="制作-ca-证书与签名证书" tabindex="-1"><a class="header-anchor" href="#制作-ca-证书与签名证书"><span>制作 CA 证书与签名证书</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#### 制作CA证书，如果你没有CA证书的话，必须执行</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">openssl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> genrsa</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2048</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ca.key</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 这是你的CA证书，你可以选择要不要信任CA证书</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#### CA证书的公钥，用于信任CA证书，这样你就不必亲自信任每一个用这个CA签名的证书了</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> SUBJ</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/C=CN/ST=ST</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$RANDOM</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/O=O</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$RANDOM</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/OU=OU</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$RANDOM</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/CN=CN</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$RANDOM</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/emailAddress=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$RANDOM</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">@localhost&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># $SUB这一行的意思请稍后自行领悟,这里RANDOM的用意是，防止大家生成重复的CA然后产生未知问题</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 如果不知道-subj是什么，不要改。CN写0CN是为了让证书好找(会排到最前面) </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">openssl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> req</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -new</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -x509</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -days</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">expr</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\\`</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">date </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">-d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 99991231</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +%s</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\`</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> - </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\`</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">date +%s</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\`</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> / </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">86400</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> + </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  -key</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ca.key</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -out</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ca.pem</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -subj</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $SUBJ</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -extensions</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v3_ca</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 上面这节其实是一整行命令(用\\换行，于是显示成了两行) </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 这里 \`expr \\( \\\`date -d 99991231 +%s\\\` - \\\`date +%s\\\` \\) / 86400 + 1\` 是计算当前时间到yyyymmdd=99991231的日期</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 整段内容的意思是，让这个证书的有效期到9999年12月31日</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 我保证RSA失效日期一定比这个日期早……</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 请不要学习这个把签名签到9999年的坏习惯，涉及网络活动的，最好每年换一个签名。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 这里签到9999年的原因是……谁闲着没事监听你的nginx拿到只有你用的证书之后会对你开展中间人攻击呢？</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#### 生成nginx需要的证书</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">openssl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> genrsa</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1024</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">nginx.key</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 密钥</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">openssl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> req</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -new</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -nodes</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -key</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx.key</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -out</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx.csr</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -subj</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $SUBJ</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#### CA签名</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">openssl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> x509</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -req</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -days</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">expr</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\\`</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">date </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">-d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 99991231</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +%s</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\`</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> - </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\`</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">date +%s</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\`</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> / </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">86400</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> + </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> -in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx.csr</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -out</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx.pem</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -CA</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ca.pem</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -CAkey</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ca.key</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -set_serial</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -extensions</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CUSTOM_STRING_LIKE_SAN_KU</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -extfile</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;( </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> EOF</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">[CUSTOM_STRING_LIKE_SAN_KU]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">subjectAltName=IP:127.0.0.1, IP: ::1 ,DNS:github.com, DNS:*.github.com, DNS:githubusercontent.com, DNS:*.githubusercontent.com</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">keyUsage = nonRepudiation, digitalSignature, keyEncipherment</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">EOF</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 这里，使用-extfile对配置文件做临时修改</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 这样就完成了签名工作</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 事实上，这里可以多写几个subjectAltName，比如subjectAltName=IP:127.0.0.1, IP: ::1 ,DNS:ads-pixiv.net, DNS:*.ads-pixiv.net, DNS:akamaihd.net, DNS:*.akamaihd.net, DNS:arkoselabs.com, DNS:*.arkoselabs.com, DNS:artstation.com, DNS:*.artstation.com, DNS:discordapp.com, DNS:*.discordapp.com, DNS:discordapp.net, DNS:*.discordapp.net, DNS:discord.com, DNS:*.discord.com, DNS:ext-twitch.tv, DNS:*.ext-twitch.tv, DNS:github.com, DNS:*.github.com, DNS:githubusercontent.com, DNS:*.githubusercontent.com, DNS:google.com, DNS:*.google.com, DNS:hcaptcha.com, DNS:*.hcaptcha.com, DNS:pinimg.com, DNS:*.pinimg.com, DNS:pinterest.com, DNS:*.pinterest.com, DNS:pixiv.net, DNS:*.pixiv.net, DNS:pixivsketch.net, DNS:*.pixivsketch.net, DNS:pximg.net, DNS:*.pximg.net, DNS:steam-chat.com, DNS:*.steam-chat.com, DNS:steamcommunity.com, DNS:*.steamcommunity.com, DNS:steampowered.com, DNS:*.steampowered.com, DNS:steamstatic.com, DNS:*.steamstatic.com, DNS:twitch.tv, DNS:*.twitch.tv, DNS:ubi.com, DNS:*.ubi.com, DNS:v2ex.com, DNS:*.v2ex.com</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 多写几个的好处就不说了，说多了可能犯法[狗头]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># openssl x509 -noout -text -in nginx.pem</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 如果你需要检查你生成的pem，或者</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ( openssl x509 -noout -text -in nginx.pem &amp;&amp; cat nginx.pem ) &gt; nginx.crt</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 上面这句没测试，也不是本讲的内容……</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="安装证书" tabindex="-1"><a class="header-anchor" href="#安装证书"><span>安装证书</span></a></h4><blockquote><p><a href="https://qastack.cn/superuser/437330/how-do-you-add-a-certificate-authority-ca-to-ubuntu" target="_blank" rel="noopener noreferrer">如何将证书颁发机构(CA) 添加到Ubuntu？ (qastack.cn)</a></p><p><a href="https://blog.csdn.net/shf4715/article/details/52804689" target="_blank" rel="noopener noreferrer">Ubuntu安装系统根证书_孙海峰VIP的博客-CSDN博客_ubuntu安装根证书</a></p><hr></blockquote><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cp</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ca.pem</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/share/ca-certificates/ca.crt</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">update-ca-certificates</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/nginx/ca</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cp</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx.pem</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nginx.key</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/nginx/ca</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><img src="http://cdn.ayusummer233.top/img/202210122319905.png" alt="image-20221012231958789"></p></blockquote><hr><h4 id="配置-nginx" tabindex="-1"><a class="header-anchor" href="#配置-nginx"><span>配置 Nginx</span></a></h4><hr>`,179)]))}const r=s(l,[["render",t],["__file","Github.html.vue"]]),d=JSON.parse('{"path":"/Git/Github.html","title":"Github","lang":"zh-CN","frontmatter":{"category":"Git","tags":["Gits","Github"],"excerpt":"Github相关工具以及使用技巧","description":"Github Github 加速 Github 镜像 Mirrors 镜像测速 PC网页端用户头像加载不出来 Git配置 SSH Key 本地仓库切换 https 到 ssh SSH 代理 简介 Commit 规范 Issues Pull Request Actions 基本概念 workflow Markdown 数学公式 webhooks 借助钉钉...","head":[["meta",{"property":"og:url","content":"https://233official.github.io/dailynotes/Git/Github.html"}],["meta",{"property":"og:site_name","content":"DailyNotes"}],["meta",{"property":"og:title","content":"Github"}],["meta",{"property":"og:description","content":"Github Github 加速 Github 镜像 Mirrors 镜像测速 PC网页端用户头像加载不出来 Git配置 SSH Key 本地仓库切换 https 到 ssh SSH 代理 简介 Commit 规范 Issues Pull Request Actions 基本概念 workflow Markdown 数学公式 webhooks 借助钉钉..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"http://cdn.ayusummer233.top/DailyNotes/202309210130370.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-15T02:54:24.000Z"}],["meta",{"property":"article:tag","content":"Gits"}],["meta",{"property":"article:tag","content":"Github"}],["meta",{"property":"article:modified_time","content":"2025-10-15T02:54:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Github\\",\\"image\\":[\\"http://cdn.ayusummer233.top/DailyNotes/202309210130370.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202309210135195.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202309210137027.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202309210139983.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202309210141058.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202309210141104.png\\",\\"http://cdn.ayusummer233.top/img/20210628112317.png\\",\\"http://cdn.ayusummer233.top/img/202205220719879.png\\",\\"http://cdn.ayusummer233.top/img/202211080017729.png\\",\\"http://cdn.ayusummer233.top/img/202211080018283.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202302191539879.png \\\\\\"屏幕截图.png\\\\\\"\\",\\"http://cdn.ayusummer233.top/DailyNotes/202409091813943.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202409091815082.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202406121708317.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202406121709013.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202405311652349.png\\",\\"http://cdn.ayusummer233.top/img/202210122237943.png\\",\\"http://cdn.ayusummer233.top/img/202210122319905.png\\"],\\"dateModified\\":\\"2025-10-15T02:54:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"咸鱼型233\\",\\"url\\":\\"https://233official.github.io/dailynotes/\\"}]}"]],"date":"2021-01-21T15:01:59.000Z"},"headers":[{"level":2,"title":"加速","slug":"加速","link":"#加速","children":[{"level":3,"title":"Github 镜像","slug":"github-镜像","link":"#github-镜像","children":[]},{"level":3,"title":"PC网页端用户头像加载不出来","slug":"pc网页端用户头像加载不出来","link":"#pc网页端用户头像加载不出来","children":[]}]},{"level":2,"title":"Git配置","slug":"git配置","link":"#git配置","children":[{"level":3,"title":"SSH Key","slug":"ssh-key","link":"#ssh-key","children":[]},{"level":3,"title":"本地仓库切换 https 到 ssh","slug":"本地仓库切换-https-到-ssh","link":"#本地仓库切换-https-到-ssh","children":[]},{"level":3,"title":"SSH 代理","slug":"ssh-代理","link":"#ssh-代理","children":[]}]},{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[{"level":3,"title":"Commit","slug":"commit","link":"#commit","children":[]},{"level":3,"title":"Issues","slug":"issues","link":"#issues","children":[]},{"level":3,"title":"Pull Request","slug":"pull-request","link":"#pull-request","children":[]}]},{"level":2,"title":"Actions","slug":"actions","link":"#actions","children":[{"level":3,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[]},{"level":3,"title":"workflow","slug":"workflow","link":"#workflow","children":[]}]},{"level":2,"title":"Markdown","slug":"markdown","link":"#markdown","children":[{"level":3,"title":"数学公式","slug":"数学公式","link":"#数学公式","children":[]}]},{"level":2,"title":"webhooks","slug":"webhooks","link":"#webhooks","children":[{"level":3,"title":"借助钉钉的Github机器人将仓库变动通知到钉钉群里","slug":"借助钉钉的github机器人将仓库变动通知到钉钉群里","link":"#借助钉钉的github机器人将仓库变动通知到钉钉群里","children":[]}]},{"level":2,"title":"RSS 订阅","slug":"rss-订阅","link":"#rss-订阅","children":[]},{"level":2,"title":"开源许可证选择","slug":"开源许可证选择","link":"#开源许可证选择","children":[]},{"level":2,"title":"Copilot","slug":"copilot","link":"#copilot","children":[{"level":3,"title":"Copilot+ChatNextWeb(Deprecated)","slug":"copilot-chatnextweb-deprecated","link":"#copilot-chatnextweb-deprecated","children":[]}]},{"level":2,"title":"常见问题","slug":"常见问题","link":"#常见问题","children":[{"level":3,"title":"Github仓库同步给 Gitlab","slug":"github仓库同步给-gitlab","link":"#github仓库同步给-gitlab","children":[]},{"level":3,"title":"账户 suspended","slug":"账户-suspended","link":"#账户-suspended","children":[]},{"level":3,"title":".git过大","slug":"git过大","link":"#git过大","children":[]},{"level":3,"title":"腾讯云 github 连接超时问题","slug":"腾讯云-github-连接超时问题","link":"#腾讯云-github-连接超时问题","children":[]}]},{"level":2,"title":"报错处理","slug":"报错处理","link":"#报错处理","children":[{"level":3,"title":"Failed to connect to github.com port 443 after 21063 ms: Timed out","slug":"failed-to-connect-to-github-com-port-443-after-21063-ms-timed-out","link":"#failed-to-connect-to-github-com-port-443-after-21063-ms-timed-out","children":[]},{"level":3,"title":"OpenSSL SSL_read: Connection was reset, errno 10054","slug":"openssl-ssl-read-connection-was-reset-errno-10054","link":"#openssl-ssl-read-connection-was-reset-errno-10054","children":[]}]},{"level":2,"title":"CodeQL","slug":"codeql","link":"#codeql","children":[]},{"level":2,"title":"未成功归档/TODO","slug":"未成功归档-todo","link":"#未成功归档-todo","children":[{"level":3,"title":"Nginx 反代 Github(TODO: mark下, 没成功跑起来)","slug":"nginx-反代-github-todo-mark下-没成功跑起来","link":"#nginx-反代-github-todo-mark下-没成功跑起来","children":[]}]}],"git":{"createdTime":1611241319000,"updatedTime":1760496864000,"contributors":[{"name":"233Mac","username":"233Mac","email":"ayusummer233@vip.qq.com","commits":5,"url":"https://github.com/233Mac"},{"name":"233","username":"233","email":"ayusummer233@vip.qq.com","commits":2,"url":"https://github.com/233"},{"name":"233PC","username":"233PC","email":"ayusummer233@gmail.com","commits":1,"url":"https://github.com/233PC"},{"name":"233","username":"233","email":"ayusummer233@gmail.com","commits":4,"url":"https://github.com/233"},{"name":"233JG","username":"233JG","email":"ayusummer233@gmail.com","commits":1,"url":"https://github.com/233JG"},{"name":"Ayusummer","username":"Ayusummer","email":"ayusummer233@gmail.com","commits":1,"url":"https://github.com/Ayusummer"},{"name":"233PC","username":"233PC","email":"ayusummer233@qq.com","commits":3,"url":"https://github.com/233PC"},{"name":"233Official","username":"233Official","email":"ayusummr233@gmail.com","commits":1,"url":"https://github.com/233Official"},{"name":"咸鱼型233","username":"咸鱼型233","email":"ayusummer233@qq.com","commits":3,"url":"https://github.com/咸鱼型233"},{"name":"233Official","username":"233Official","email":"ayusummer233@qq.com","commits":6,"url":"https://github.com/233Official"},{"name":"233Laptop","username":"233Laptop","email":"ayusummer233@qq.com","commits":1,"url":"https://github.com/233Laptop"},{"name":"Ayusummer","username":"Ayusummer","email":"ayusummer233@qq.com","commits":4,"url":"https://github.com/Ayusummer"},{"name":"Ayusummer","username":"Ayusummer","email":"1369661643@qq.com","commits":9,"url":"https://github.com/Ayusummer"}]},"readingTime":{"minutes":23.75,"words":7126},"filePathRelative":"Git/Github.md","localizedDate":"2021年1月21日","autoDesc":true}');export{r as comp,d as data};
