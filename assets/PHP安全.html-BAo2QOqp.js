import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,a,o as r}from"./app-CFt4SMiv.js";const l={};function p(n,e){return r(),i("div",null,e[0]||(e[0]=[a('<h1 id="php-安全" tabindex="-1"><a class="header-anchor" href="#php-安全"><span>PHP 安全</span></a></h1><ul><li><a href="#php-%E5%AE%89%E5%85%A8">PHP 安全</a><ul><li><a href="#phpfilter">php:filter</a></li><li><a href="#php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1">PHP代码审计</a></li></ul></li></ul><hr><h2 id="php-filter" tabindex="-1"><a class="header-anchor" href="#php-filter"><span>php:filter</span></a></h2><blockquote><p><a href="https://johnfrod.top/%E5%AE%89%E5%85%A8/php-filter%E7%9A%84%E5%A6%99%E7%94%A8/" target="_blank" rel="noopener noreferrer">php://filter的妙用 – JohnFrod&#39;s Blog</a></p><p><a href="https://www.anquanke.com/post/id/202510" target="_blank" rel="noopener noreferrer">探索php://filter在实战当中的奇技淫巧-安全客 - 安全资讯平台 (anquanke.com)</a></p><p><a href="https://www.leavesongs.com/PENETRATION/php-filter-magic.html" target="_blank" rel="noopener noreferrer">谈一谈php://filter的妙用 | 离别歌 (leavesongs.com)</a></p><p><a href="https://www.xiaozzz.xyz/2019/09/21/PHP%E4%BC%AA%E5%8D%8F%E8%AE%AE%E6%80%BB%E7%BB%93/" target="_blank" rel="noopener noreferrer">PHP伪协议总结 | xiaoZ&#39;s Blog (xiaozzz.xyz)</a></p><hr></blockquote><ul><li><p><code>php://filter</code> 是一种元封装器，设计用于数据流打开时的筛选过滤应用。这对于一体式(all-in-one) 的文件函数非常有用，类似 <code>readfile()</code>、 <code>file()</code> 和 <code>file_get_contents()</code>，在数据流内容读取之前没有机会应用其他过滤器。</p></li><li><p><code>php://filter</code> 目标使用以下的参数作为它路径的一部分。复合过滤链能够在一个路径上指定。</p><table><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">resource=&lt;要过滤的数据流&gt;</td><td style="text-align:center;">必要参数; 其指定了需要筛选过滤的数据流</td></tr><tr><td style="text-align:center;">read=&lt;读链的筛选列表&gt;</td><td style="text-align:center;">可选参数; 可以设定一个或多个过滤器名称, 以管道符 `</td></tr><tr><td style="text-align:center;">write=&lt;写链的筛选列表&gt;</td><td style="text-align:center;">可选参数; 可以设定一个或多个过滤器名称, 以管道符 `</td></tr><tr><td style="text-align:center;">&lt;; 两个链的筛选列表&gt;</td><td style="text-align:center;">任何没有以 read= 或 write= 做前缀的筛选器列表会视情况应用于读或写链</td></tr></tbody></table></li></ul><p>例如 pikachu 靶场中的 <code>ssrf -&gt; file_get_content</code> 题目中可以使用 <code>php:filter</code> 将网页源码 base64 编码读取出来, 然后再解码查看</p><div class="language-http line-numbers-mode" data-highlighter="shiki" data-ext="http" data-title="http" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">http://[</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]:[</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]/vul/ssrf/ssrf_fgc.php?file=php:</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//filter/convert.base64-encode/resource=ssrf.php</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="php代码审计" tabindex="-1"><a class="header-anchor" href="#php代码审计"><span>PHP代码审计</span></a></h2><blockquote><p>[<a href="https://www.cnblogs.com/natian-ws/p/7243385.html" target="_blank" rel="noopener noreferrer">php代码审计 - php四种标记 - 那天ws - 博客园 (cnblogs.com)</a></p></blockquote>',11)]))}const h=t(l,[["render",p],["__file","PHP安全.html.vue"]]),c=JSON.parse(`{"path":"/Language/PHP/PHP%E5%AE%89%E5%85%A8.html","title":"PHP 安全","lang":"zh-CN","frontmatter":{"description":"PHP 安全 PHP 安全 php:filter PHP代码审计 php:filter php://filter的妙用 – JohnFrod's Blog 探索php://filter在实战当中的奇技淫巧-安全客 - 安全资讯平台 (anquanke.com) 谈一谈php://filter的妙用 | 离别歌 (leavesongs.com) PHP伪...","head":[["meta",{"property":"og:url","content":"https://233official.github.io/dailynotes/Language/PHP/PHP%E5%AE%89%E5%85%A8.html"}],["meta",{"property":"og:site_name","content":"DailyNotes"}],["meta",{"property":"og:title","content":"PHP 安全"}],["meta",{"property":"og:description","content":"PHP 安全 PHP 安全 php:filter PHP代码审计 php:filter php://filter的妙用 – JohnFrod's Blog 探索php://filter在实战当中的奇技淫巧-安全客 - 安全资讯平台 (anquanke.com) 谈一谈php://filter的妙用 | 离别歌 (leavesongs.com) PHP伪..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-17T03:32:15.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-17T03:32:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"PHP 安全\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-17T03:32:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"咸鱼型233\\",\\"url\\":\\"https://233official.github.io/dailynotes/\\"}]}"]],"date":"2022-11-18T06:00:54.000Z"},"headers":[{"level":2,"title":"php:filter","slug":"php-filter","link":"#php-filter","children":[]},{"level":2,"title":"PHP代码审计","slug":"php代码审计","link":"#php代码审计","children":[]}],"git":{"createdTime":1668751254000,"updatedTime":1744860735000,"contributors":[{"name":"233Mac","username":"233Mac","email":"ayusummer233@vip.qq.com","commits":2,"url":"https://github.com/233Mac"},{"name":"233","username":"233","email":"ayusummer233@vip.qq.com","commits":1,"url":"https://github.com/233"},{"name":"Ayusummer","username":"Ayusummer","email":"ayusummer233@gmail.com","commits":1,"url":"https://github.com/Ayusummer"},{"name":"233Official","username":"233Official","email":"ayusummer233@qq.com","commits":2,"url":"https://github.com/233Official"}]},"readingTime":{"minutes":1.38,"words":413},"filePathRelative":"Language/PHP/PHP安全.md","localizedDate":"2022年11月18日","excerpt":"","autoDesc":true}`);export{h as comp,c as data};
