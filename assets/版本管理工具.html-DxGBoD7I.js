import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,a as l,d as p,e,r as k,o,f as s,b as i}from"./app-CFt4SMiv.js";const c={};function g(u,a){const h=k("Tabs");return o(),d("div",null,[a[32]||(a[32]=l('<h1 id="版本管理工具" tabindex="-1"><a class="header-anchor" href="#版本管理工具"><span>版本管理工具</span></a></h1><ul><li><a href="#%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7">版本管理工具</a><ul><li><a href="#python%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7">Python版本管理工具</a><ul><li><a href="#pyenv">pyenv</a><ul><li><a href="#%E5%AE%89%E8%A3%85">安装</a></li><li><a href="#%E4%BD%BF%E7%94%A8">使用</a></li></ul></li><li><a href="#conda">conda</a><ul><li><a href="#miniconda">miniconda</a></li><li><a href="#anaconda">Anaconda</a><ul><li><a href="#%E5%AE%89%E8%A3%85-1">安装</a></li><li><a href="#%E9%85%8D%E7%BD%AE">配置</a></li><li><a href="#%E5%88%9B%E5%BB%BA%E4%B8%8E%E4%BD%BF%E7%94%A8-python-%E7%8E%AF%E5%A2%83">创建与使用 python 环境</a><ul><li><a href="#%E4%BD%BF%E7%94%A8-anaconda-navigator">使用 Anaconda Navigator</a></li><li><a href="#%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C">使用命令行</a></li></ul></li><li><a href="#anaconda-%E6%8D%A2%E6%BA%90">Anaconda 换源</a></li><li><a href="#anaconda-navigator-%E5%8D%87%E7%BA%A7">Anaconda Navigator 升级</a></li><li><a href="#%E6%8A%A5%E9%94%99%E6%94%B6%E9%9B%86">报错收集</a><ul><li><a href="#check_hostname-requires-server_hostname">check_hostname requires server_hostname</a></li><li><a href="#%E5%90%84%E7%B1%BB-httperror-%E7%9B%B8%E5%85%B3">各类 <code>HTTPError</code> 相关</a></li><li><a href="#modulenotfounderror-no-module-named-pip_vendor"><code>ModuleNotFoundError: No module named &#39;pip._vendor....&#39;</code></a></li></ul></li></ul></li></ul></li><li><a href="#linux-update-alternatives">Linux-update-alternatives</a></li></ul></li><li><a href="#python%E4%BE%9D%E8%B5%96%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7">Python依赖版本管理工具</a><ul><li><a href="#virtual-environment">virtual environment</a></li><li><a href="#uv">uv</a><ul><li><a href="#%E5%AE%89%E8%A3%85-2">安装</a></li><li><a href="#%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95">基本用法</a></li></ul></li><li><a href="#pipenv">Pipenv</a></li><li><a href="#poetry">Poetry</a><ul><li><a href="#%E7%B3%BB%E7%BB%9F%E9%9C%80%E6%B1%82">系统需求</a></li><li><a href="#%E5%AE%89%E8%A3%85-3">安装</a></li><li><a href="#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">配置文件</a><ul><li><a href="#pyprojecttoml">pyproject.toml</a></li></ul></li><li><a href="#%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95-1">基本用法</a><ul><li><a href="#%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96">安装依赖</a></li><li><a href="#%E4%BD%BF%E7%94%A8%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83">使用虚拟环境</a><ul><li><a href="#%E7%BB%93%E5%90%88-conda-%E7%8E%AF%E5%A2%83%E4%BD%BF%E7%94%A8">结合 conda 环境使用</a></li><li><a href="#%E5%9C%A8%E5%BD%93%E5%89%8D-conda-%E7%8E%AF%E5%A2%83%E7%9A%84-bin-%E7%9B%AE%E5%BD%95%E4%B8%AD%E6%89%BE%E4%B8%8D%E5%88%B0-activate-%E8%84%9A%E6%9C%AC%E5%AF%BC%E8%87%B4%E7%8E%AF%E5%A2%83%E6%BF%80%E6%B4%BB%E5%A4%B1%E8%B4%A5ubuntu">在当前 conda 环境的 <code>bin</code> 目录中找不到 activate 脚本导致环境激活失败(ubuntu)</a></li></ul></li><li><a href="#%E5%88%A0%E9%99%A4%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83">删除虚拟环境</a></li><li><a href="#%E5%AF%BC%E5%87%BA%E4%BE%9D%E8%B5%96%E5%88%B0-requirementstxt">导出依赖到 requirements.txt</a></li></ul></li><li><a href="#python%E5%8C%85%E5%8F%91%E5%B8%83%E5%88%86%E4%BA%AB">Python包发布分享</a><ul><li><a href="#%E5%8F%91%E5%B8%83%E5%88%B0pypi">发布到PyPI</a></li><li><a href="#%E5%8F%91%E5%B8%83%E5%88%B0git%E4%BB%93%E5%BA%93">发布到Git仓库</a></li></ul></li><li><a href="#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98">常见问题</a><ul><li><a href="#failed-to-create-the-collection-prompt-dismissed">Failed to create the collection: Prompt dismissed..</a></li><li><a href="#%E5%8D%A1-keyring">卡 keyring</a></li><li><a href="#python-%E7%89%88%E6%9C%AC%E4%B8%8D%E5%AF%B9">python 版本不对</a></li><li><a href="#macos-vscode%E8%AF%86%E5%88%AB%E4%B8%8D%E5%88%B0-poetry-%E5%88%9B%E5%BB%BA%E7%9A%84-venv-%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83">macOS VSCode识别不到 poetry 创建的 .venv 虚拟环境</a></li></ul></li></ul></li><li><a href="#pdm">PDM</a><ul><li><a href="#%E6%A6%82%E8%BF%B0">概述</a></li><li><a href="#%E4%B8%BB%E8%A6%81%E7%89%B9%E6%80%A7">主要特性</a></li><li><a href="#%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E7%94%A8%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83">为什么不用虚拟环境</a></li><li><a href="#%E5%AE%89%E8%A3%85-4">安装</a></li><li><a href="#quickstart">QuickStart</a></li><li><a href="#working-with-pep-582">working with PEP 582</a></li><li><a href="#pdm-scripts">PDM Scripts</a></li><li><a href="#pdm-packer">PDM-packer</a></li></ul></li><li><a href="#pipx">pipx</a><ul><li><a href="#%E5%AE%89%E8%A3%85-5">安装</a></li><li><a href="#%E6%A6%82%E8%BF%B0-1">概述</a></li><li><a href="#pipx-%E4%B8%8E-pip-%E7%9A%84%E5%8C%BA%E5%88%AB">pipx 与 pip 的区别</a></li><li><a href="#pipx-%E4%BB%8E%E4%BB%80%E4%B9%88%E5%9C%B0%E6%96%B9%E5%AE%89%E8%A3%85-app">pipx 从什么地方安装 app</a></li></ul></li></ul></li></ul></li></ul><hr><h2 id="python版本管理工具" tabindex="-1"><a class="header-anchor" href="#python版本管理工具"><span>Python版本管理工具</span></a></h2><p>类似于 Nodejs 中的 NVM 用于管理多个 nodejs 版本, Python 也有类似的 Python 版本管理工具</p><hr><h3 id="pyenv" tabindex="-1"><a class="header-anchor" href="#pyenv"><span>pyenv</span></a></h3><blockquote><p><a href="https://github.com/pyenv/pyenv" target="_blank" rel="noopener noreferrer">GitHub - pyenv/pyenv: Simple Python version management</a></p></blockquote><p>pyenv 可让您轻松地在多个 Python 版本之间切换。它简单、不引人注目，并且遵循 UNIX 单一用途工具只做好一件事的传统。</p><p>pyenv 使用注入到<code>PATH</code>中的 shim 可执行文件拦截 Python 命令，确定应用程序指定的 Python 版本，并将命令传递到正确的 Python 安装。</p><p>更详细的信息请参阅 <a href="https://github.com/pyenv/pyenv" target="_blank" rel="noopener noreferrer">GitHub - pyenv/pyenv: Simple Python version management</a></p><hr><h4 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h4>',13)),p(h,{id:"368",data:[{id:"UNIX/MacOS"},{id:"Windows"}],active:0},{title0:e(({value:n,isActive:t})=>a[0]||(a[0]=[s("UNIX/MacOS")])),title1:e(({value:n,isActive:t})=>a[1]||(a[1]=[s("Windows")])),tab0:e(({value:n,isActive:t})=>a[2]||(a[2]=[i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 如果需要的话可以设置下 https 代理, 例如:")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"export"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," http_proxy"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"http://127.0.0.1:7890"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"export"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," https_proxy"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"http://127.0.0.1:7890"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 安装 pyenv")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"curl"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," https://pyenv.run"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," | "),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"bash")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202407311706846.png",alt:"image-20240731170648771"})],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202407311707443.png",alt:"image-20240731170700389"})],-1),i("p",null,[s("根据输出提示中所说的那样, 如果你用的是 bash 那就在 "),i("code",null,"~/.bashrc"),s(" 中添加如下命令, 如果用的是 "),i("code",null,"zsh"),s(" 则在 "),i("code",null,"~/.zshrc"),s(" 中添加如下命令, 其他 shell 同理")],-1),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"export"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," PYENV_ROOT"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"'),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"$HOME"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'/.pyenv"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"[[ "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"-d"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," $PYENV_ROOT"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"/bin ]] && "),i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"export"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," PATH"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"'),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"$PYENV_ROOT"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"/bin:"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"$PATH"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"eval"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},' "$('),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"pyenv"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},' init -)"')])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),i("p",null,[s("有关更多详细信息，可以参阅此项目组的其他项目： "),i("a",{href:"https://github.com/pyenv/pyenv-installer",target:"_blank",rel:"noopener noreferrer"},[s("GitHub - pyenv/pyenv-installer: This tool is used to install "),i("code",null,"pyenv"),s(" and friends.")])],-1),i("hr",null,null,-1)])),tab1:e(({value:n,isActive:t})=>a[3]||(a[3]=[i("p",null,[s("Pyenv 并不正式支持 Windows，并且无法在适用于 Linux 的 Windows 子系统之外的 Windows 中工作。此外，即使在 "),i("code",null,"Windows Subsystem for Linux"),s(" 中, 它安装的 Python 也不是 "),i("code",null,"native Windows"),s(" 版本，而是在虚拟机中运行的 Linux 版本 - 因此您将无法获得 Windows 特定的功能。")],-1),i("p",null,[s("如果使用的是 Windows，建议使用 @kirankotari 的"),i("a",{href:"https://github.com/pyenv-win/pyenv-win",target:"_blank",rel:"noopener noreferrer"},[i("code",null,"pyenv-win")]),s("分支——它会安装本机 Windows Python 版本。")],-1)])),_:1}),a[33]||(a[33]=l(`<hr><h4 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h4><p>这里只讨论 Linux 下的 pyenv 的使用</p><p>首先需要把一些基础的 Python 构建工具库安装一下</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt-get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt-get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build-essential</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libssl-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> zlib1g-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libbz2-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libreadline-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libsqlite3-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wget</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> curl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> llvm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libncurses5-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libncursesw5-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> xz-utils</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tk-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libffi-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> liblzma-dev</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> python3-openssl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>安装并切换到指定 Python 版本, 例如:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 安装 python3.10.4</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pyenv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3.10.4</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 为全局激活 python3.10.4(root用户下尽量不要使用)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pyenv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> global</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3.10.4</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 每当您位于当前目录（或其子目录）时自动选择</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pyenv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> local</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3.10.4</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 仅选择当前 shell 会话</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pyenv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3.10.4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202407311823350.png" alt="image-20240731182322273"></p><blockquote><p>PS: 用起来感觉还是有些问题, 机子环境比较复杂, 有时候使用 pyenv 设置了 python 环境没能生效</p><p>目前暂时只是用来在 Linux 系统上下载与安装不同版本的 python, 然后后续结合 poetry 使用</p></blockquote><hr><h3 id="conda" tabindex="-1"><a class="header-anchor" href="#conda"><span>conda</span></a></h3><blockquote><p><a href="https://conda.io/projects/conda/en/latest/user-guide/getting-started.html" target="_blank" rel="noopener noreferrer">Getting started with conda — conda 24.7.2.dev10 documentation</a></p></blockquote><p><strong>Conda 是一个开源的包管理和环境管理系统</strong>，它能够运行、安装和更新各种包和依赖，包括 Python 和非 Python 包。Conda 适用于 Windows、macOS 和 Linux 系统。</p><p>我们可以通过安装 conda 发行版来使用 conda, 常见的 conda 发行版主要是 miniconda 和 anaconda</p><hr><h4 id="miniconda" tabindex="-1"><a class="header-anchor" href="#miniconda"><span>miniconda</span></a></h4><blockquote><p><a href="https://docs.anaconda.com/miniconda/" target="_blank" rel="noopener noreferrer">Miniconda — Anaconda documentation</a></p></blockquote><p>Miniconda 是 conda 的免费最小安装程序。它是 Anaconda 的一个小型引导版本，仅包含 conda、Python、它们所依赖的包以及少量其他有用的包（例如 pip、zlib 等）。如果您需要更多软件包，请使用<code>conda install</code>命令从 Anaconda 公共存储库或其他渠道（例如 conda-forge 或 bioconda）默认提供的数千个软件包中进行安装。</p><p>先看下 <a href="https://docs.anaconda.com/miniconda/miniconda-system-requirements/" target="_blank" rel="noopener noreferrer">系统要求 — Anaconda 文档 --- System requirements — Anaconda documentation</a> 确认当前机器是否支持安装 miniconda</p><p>如果支持的话则根据 <a href="https://docs.anaconda.com/miniconda/" target="_blank" rel="noopener noreferrer">Miniconda — Anaconda documentation</a> 进行安装即可</p><hr><h4 id="anaconda" tabindex="-1"><a class="header-anchor" href="#anaconda"><span>Anaconda</span></a></h4><blockquote><p><a href="https://www.anaconda.com/download" target="_blank" rel="noopener noreferrer">anaconda.com/download</a></p></blockquote><p>Anaconda Distribution 是一个功能齐全的安装程序，附带一套用于数据科学的软件包，以及 Anaconda Navigator（一个用于 conda 环境的 GUI 应用程序）。</p><hr><h5 id="安装-1" tabindex="-1"><a class="header-anchor" href="#安装-1"><span>安装</span></a></h5><hr>`,27)),p(h,{id:"471",data:[{id:"Windows"},{id:"Linux"}],active:0},{title0:e(({value:n,isActive:t})=>a[4]||(a[4]=[s("Windows")])),title1:e(({value:n,isActive:t})=>a[5]||(a[5]=[s("Linux")])),tab0:e(({value:n,isActive:t})=>a[6]||(a[6]=[i("blockquote",null,[i("blockquote",null,[i("p",null,[i("a",{href:"https://github.com/python/cpython/pull/26307",target:"_blank",rel:"noopener noreferrer"},"bpo-42627: Fix wrong parsing of Windows registry proxy settings by CrazyBoyFeng · Pull Request #26307 · python/cpython · GitHub")])]),i("p",null,"需要注意的是, 如果使用 Clash 的话需要可以打开此配置"),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202407311549040.png",alt:"image-20240731154928528"})]),i("p",null,"否则使用 Anaconda Navigator 或者 conda 环境操作时会报错")],-1),i("p",null,[i("a",{href:"https://ayusummer-my.sharepoint.com/:f:/g/personal/233_ayusummer_onmicrosoft_com/EhGEGFxHsINMtuhCpcUlQtUBRflV21xfYIkwpbeF2-d8IQ?e=Inh6dl",target:"_blank",rel:"noopener noreferrer"},"安装包")],-1),i("blockquote",null,[i("p",null,[i("a",{href:"https://www.anaconda.com/products/individual",target:"_blank",rel:"noopener noreferrer"},"Anaconda 官网"),i("br"),s(" 可在此处获取其他版本的安装包")])],-1),i("blockquote",null,[i("p",null,"需要注意的是 Anaconda 装完之后打开命令行总会自动进入 conda 环境, 可以通过更改 conda 配置来取消自动进入"),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"conda"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," config"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --set"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," auto_activate_base"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," false")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])]),i("p",null,[s("如果想要设置自动进入的话将 "),i("code",null,"false"),s(" 改为 "),i("code",null,"true"),s(" 运行即可")])],-1),i("p",null,[s("安装完成后打开 "),i("code",null,"Anaconda Navigator"),s(":")],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/img/202205230936469.png",alt:"image-20220523093633147"})],-1),i("hr",null,null,-1)])),tab1:e(({value:n,isActive:t})=>a[7]||(a[7]=[i("blockquote",null,[i("p",null,[i("a",{href:"https://cloud.tencent.com/developer/article/1649008",target:"_blank",rel:"noopener noreferrer"},"如何在 Ubuntu 20.04 上安装 Anaconda - 云+社区 - 腾讯云 (tencent.com)"),i("br"),i("a",{href:"https://blog.csdn.net/chenxy_bwave/article/details/119996001",target:"_blank",rel:"noopener noreferrer"},"Anaconda conda常用命令：从入门到精通_chenxy_bwave的专栏-CSDN博客_conda常用命令")]),i("hr"),i("p",null,[s("可在 "),i("a",{href:"https://www.anaconda.com/products/individual",target:"_blank",rel:"noopener noreferrer"},"Anaconda 官网"),s(" 获取其他版本的安装包")])],-1),i("div",{class:"language-sh line-numbers-mode","data-highlighter":"shiki","data-ext":"sh","data-title":"sh",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 安装 Anaconda")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"#wget https://repo.anaconda.com/archive/Anaconda3-2021.11-Linux-x86_64.sh")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"#bash Anaconda3-2021.11-Linux-x86_64.sh")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"wget"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," https://repo.anaconda.com/archive/Anaconda3-2022.05-Linux-x86_64.sh")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"bash"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," Anaconda3-2022.05-Linux-x86_64.sh")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),i("blockquote",null,[i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/img/20211219065157.png",alt:"20211219065157"})]),i("p",null,[s("若出现 "),i("code",null,"段错误 (核心已转储)"),s(" 字样, 可以使用")]),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"wget"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," https://repo.anaconda.com/archive/Anaconda3-2022.05-Linux-x86_64.sh")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])]),i("p",null,"从断点处继续下载")],-1),i("p",null,"长按 ENTER 阅读完条款",-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/img/20211219065309.png",alt:"20211219065309"})],-1),i("p",null,"yes",-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/img/20211219065431.png",alt:"20211219065431"})],-1),i("p",null,[s("选择安装路径, 默认为 "),i("code",null,"/root/anaconda3"),s(", 这个过程会比较长")],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/img/20211219065943.png",alt:"20211219065943"})],-1),i("p",null,[s("yes, 执行初始化, 这将会将命令行工具 conda 添加到系统的 PATH 环境变量中。"),i("br"),s(" 不过想要激活 Anaconda，还需要关闭并且重新打开你的 shell 或者在当前 shell 会话中输入下面的命令，来重新加载 PATH 环境变量：")],-1),i("div",{class:"language-shell line-numbers-mode","data-highlighter":"shiki","data-ext":"shell","data-title":"shell",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"source"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," ~/.bashrc")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1),i("p",null,[s("可以使用 "),i("code",null,"conda --version"),s(" 查看 Anaconda 版本")],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/img/20211219070617.png",alt:"20211219070617"})],-1),i("p",null,"设置国内镜像",-1),i("div",{class:"language-shell line-numbers-mode","data-highlighter":"shiki","data-ext":"shell","data-title":"shell",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"#设置清华镜像")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"conda"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," config"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --add"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," channels"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"conda"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," config"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --add"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," channels"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"conda"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," config"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --add"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," channels"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"conda"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," config"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --add"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," channels"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"#设置bioconda")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"conda"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," config"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --add"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," channels"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," bioconda")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"conda"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," config"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --add"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," channels"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," conda-forge")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"#设置搜索时显示通道地址")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"conda"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," config"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --set"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," show_channel_urls"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," yes")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),i("p",null,null,-1)])),_:1}),a[34]||(a[34]=l(`<hr><h5 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h5><p><code>Anaconda</code> 安装完成后调起命令行会默认启动 conda 环境, 可以使用如下命令开启或关闭该项配置</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 关闭自动启动conda环境</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> auto_activate_base</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> false</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 启动自动启动conda环境</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> auto_activate_base</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h5 id="创建与使用-python-环境" tabindex="-1"><a class="header-anchor" href="#创建与使用-python-环境"><span>创建与使用 python 环境</span></a></h5><h6 id="使用-anaconda-navigator" tabindex="-1"><a class="header-anchor" href="#使用-anaconda-navigator"><span>使用 Anaconda Navigator</span></a></h6><p>打开 <code>Anaconda Navigator -&gt; Environments</code> 在环境列表底部按钮中找到 <code>Create</code> 并点击</p><p><img src="http://cdn.ayusummer233.top/img/202205171533981.png" alt="image-20220517153334579"></p><p>为新环境命一个名(英文命名, 尽量简短些, 之后激活要用)</p><blockquote><p>选择 Python 环境可以保守些, 比如最新版本回退一两个大版本这样的, 主要是因为有一些三方库更新没跟上, 不一定支持最新版本</p></blockquote><p><img src="http://cdn.ayusummer233.top/img/202205171534732.png" alt="image-20220517153442365"></p><p>在命令行中使用 conda 环境可以使用如下指令激活:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> activate</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 环境名</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202205171537691.png" alt="image-20220517153733464"></p><hr><h6 id="使用命令行" tabindex="-1"><a class="header-anchor" href="#使用命令行"><span>使用命令行</span></a></h6><p>创建一个名为 <code>BigData</code>, python 版本为 3.9 的虚拟环境</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> create</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> BigData</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> python=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3.9</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>激活 <code>BigData</code> conda 环境</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> activate</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> BigData</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202208031558796.png" alt="20211219072053"></p><p>退出当前虚拟环境</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> deactivate</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p><a href="https://www.jianshu.com/p/f14ac62bef99" target="_blank" rel="noopener noreferrer">Conda clean 净化Anaconda - 简书 (jianshu.com)</a><br><a href="https://blog.csdn.net/chenxy_bwave/article/details/119996001" target="_blank" rel="noopener noreferrer">Anaconda conda常用命令：从入门到精通_chenxy_bwave的专栏-CSDN博客_conda常用命令</a><br><a href="https://www.anaconda.com/products/individual" target="_blank" rel="noopener noreferrer">Anaconda 官网</a><br> 可在此处获取其他版本的安装包</p></blockquote><hr><h5 id="anaconda-换源" tabindex="-1"><a class="header-anchor" href="#anaconda-换源"><span>Anaconda 换源</span></a></h5><blockquote><p><a href="https://www.cnblogs.com/yuvejxke/p/13169172.html" target="_blank" rel="noopener noreferrer">anaconda修改国内源 - 余者皆可 - 博客园 (cnblogs.com)</a></p><p><a href="https://blog.csdn.net/scl52tg/article/details/120959893" target="_blank" rel="noopener noreferrer">Anaconda 换国内源_scl52tg的博客-CSDN博客_conda 换源</a></p></blockquote><ul><li><p>打开 <code>anaconda prompt</code><br><img src="http://cdn.ayusummer233.top/img/20220113131937.png" alt="20220113131937"><br><img src="http://cdn.ayusummer233.top/img/20220113132007.png" alt="20220113132007"></p></li><li><p>执行以下命令来配置清华源：</p><blockquote><p>不打开 navigator 也是完全可行的, 打开命令行就可以了, 前提是为 anaconda 配置了环境变量</p><p>只要在命令行中 <code>conda -V</code> 有版本号输出就可以了</p></blockquote><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> channels</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> channels</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> channels</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> channels</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> channels</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> show_channel_urls</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> yes</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置清华源是为了后续使用 <code>pip</code> 命令安装 python 库时快些, 不配置换源而直接使用默认源的话在墙内容易超时报错</p><blockquote><p>中科大源:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> channels</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://mirrors.ustc.edu.cn/anaconda/pkgs/main/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> channels</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://mirrors.ustc.edu.cn/anaconda/pkgs/free/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> channels</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> channels</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://mirrors.ustc.edu.cn/anaconda/cloud/msys2/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> channels</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://mirrors.ustc.edu.cn/anaconda/cloud/bioconda/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> channels</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://mirrors.ustc.edu.cn/anaconda/cloud/menpo/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> show_channel_urls</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> yes</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><blockquote><p>需要注意的是 conda 换源后会使更新 conda 的操作可能会报错</p><p>因此在更新 conda 的时候记得回复默认源</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --remove-key</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> channels</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查看源:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --show</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202208040122840.png" alt="image-20220804012242625"></p></blockquote></li></ul><hr><h5 id="anaconda-navigator-升级" tabindex="-1"><a class="header-anchor" href="#anaconda-navigator-升级"><span>Anaconda Navigator 升级</span></a></h5><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> conda</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> anaconda</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> anaconda-navigator</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>如果进行了换源操作记得在升级前恢复默认源, 否则可能会在镜像源中找不到更新包</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --remove-key</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> channels</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></blockquote><hr><h5 id="报错收集" tabindex="-1"><a class="header-anchor" href="#报错收集"><span>报错收集</span></a></h5><h6 id="check-hostname-requires-server-hostname" tabindex="-1"><a class="header-anchor" href="#check-hostname-requires-server-hostname"><span>check_hostname requires server_hostname</span></a></h6><ul><li>本来是在 <code>Pycharm</code> 中新建 <code>conda</code> 环境报的错误,接着打开 <code>Anaconda Navigator</code> 也报了相同的错误</li><li>最终在<a href="https://github.com/ContinuumIO/anaconda-issues/issues/12410" target="_blank" rel="noopener noreferrer">anaconda-issues #12410</a>找到的相同报错及解决方案为 <strong>关掉VPN</strong></li></ul><p>对于 Clash 而言可以打开此项配置</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202307281210626.png" alt="image-20230719000029091"></p><blockquote><p><a href="https://github.com/python/cpython/pull/26307" target="_blank" rel="noopener noreferrer">bpo-42627: Fix wrong parsing of Windows registry proxy settings by CrazyBoyFeng · Pull Request #26307 · python/cpython · GitHubopen in new window</a></p></blockquote><p>开了之后就正常了:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202307281210111.png" alt="image-20230719000057721"></p><hr><h6 id="各类-httperror-相关" tabindex="-1"><a class="header-anchor" href="#各类-httperror-相关"><span>各类 <code>HTTPError</code> 相关</span></a></h6><p>我这边报错都是清华的源报错,换成阿里的源就没问题了(</p><ul><li><p><code>https://mirrors.aliyun.com/anaconda/pkgs/main/</code></p><p><img src="http://cdn.ayusummer233.top/img/20210522090710.png" alt="20210522090710"></p></li></ul><hr><h6 id="modulenotfounderror-no-module-named-pip-vendor" tabindex="-1"><a class="header-anchor" href="#modulenotfounderror-no-module-named-pip-vendor"><span><code>ModuleNotFoundError: No module named &#39;pip._vendor....&#39;</code></span></a></h6><ul><li><code>pip</code> 出问题了</li><li>在 <code>CMD.exe Prompt</code> 中执行 <code>conda update pip</code> 即可</li></ul><hr><h3 id="linux-update-alternatives" tabindex="-1"><a class="header-anchor" href="#linux-update-alternatives"><span>Linux-update-alternatives</span></a></h3><blockquote><p><a href="https://www.jb51.net/article/276121.htm" target="_blank" rel="noopener noreferrer">如何在ubuntu中切换使用不同版本的python_python_脚本之家 (jb51.net)</a></p></blockquote><p>在 Linux 上, 类似于<a href="https://ayusummer233.gitlab.io/dailynotesbackup/Language/Java/Java.html" target="_blank" rel="noopener noreferrer">Java | DailyNotes (ayusummer233.gitlab.io)</a> 中提到的可以用 <code>update-alternatives</code> 管理当前 jdk 版本</p><p>python 也可以使用 <code>update-alternatives</code> 管理全局的 python 版本, 详见 <a href="https://www.jb51.net/article/276121.htm" target="_blank" rel="noopener noreferrer">如何在ubuntu中切换使用不同版本的python_python_脚本之家 (jb51.net)</a></p><hr><h2 id="python依赖版本管理工具" tabindex="-1"><a class="header-anchor" href="#python依赖版本管理工具"><span>Python依赖版本管理工具</span></a></h2><hr><h3 id="virtual-environment" tabindex="-1"><a class="header-anchor" href="#virtual-environment"><span>virtual environment</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 安装 virtualenv</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> virtualenv</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 使用 virtualenv 创建虚拟环境</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">virtualenv</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> python3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> env</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 激活虚拟环境(Windows)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">env</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Scripts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">activate</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 激活虚拟环境(Linux)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">source</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> env/bin/activate</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>这里的 <code>-p python3</code> 中的 <code>python3</code> 具体会创建什么版本的 python 环境, 只需要在当前命令行中 <code>python3 -V</code> 看一下就知道了</p><p>相应的要创建什么版本的 python 环境, 也可以直接将 python3 环境指定环境 python 解释器的路径, 例如</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">virtualenv</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/bin/python3.11</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> env</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>PS: 使用 conda 环境的 python 创建虚拟环境时最好进入 <code>conda activate [env_name]</code> 然后再使用 <code>virtualenv -p python [env_name]</code> 来创建, 直接使用 conda python 路径创建可能会卡住</p></blockquote><ul><li><p>在 Win 中对应环境变量中路径下匹配到的首个 <code>python.exe</code>, 相应的 <code>python3</code> 就对应的是第一个匹配到的 <code>python3.exe</code>, 可以使用如下命令确认:</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">python </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">V</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">python3 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">V</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">python</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; import sys</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; print(sys.executable)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202311091447843.png" alt="image-20231109144745689"></p></li><li><p>在 Linux 中对应的即为 <code>/usr/bin/python</code> 符号链接指向的 python 程序, linux 中要修改的话修改相应 <code>/usr/bin/pythonxx</code> 符号链接对应的 python 程序路径即可</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202311091451909.png" alt="image-20231109145155632"></p></li></ul></blockquote><hr><h3 id="uv" tabindex="-1"><a class="header-anchor" href="#uv"><span>uv</span></a></h3><blockquote><p><a href="https://github.com/astral-sh/uv" target="_blank" rel="noopener noreferrer">github.com/astral-sh/uv</a></p><p><a href="https://docs.astral.sh/uv/" target="_blank" rel="noopener noreferrer">docs.astral.sh/uv/</a></p></blockquote><p>uv 是一个用 Rust 编写的极快的 Python 包和项目管理器。</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202509291037605.png" alt="image-20250929103701319"></p><p>亮点</p><ul><li>🚀 一个工具即可替代 <code>pip</code> 、 <code>pip-tools</code> 、 <code>pipx</code> 、 <code>poetry</code> 、 <code>pyenv</code> 、 <code>twine</code> 、 <code>virtualenv</code> 等。</li><li>⚡️ 比 <code>pip</code><a href="https://github.com/astral-sh/uv/blob/main/BENCHMARKS.md" target="_blank" rel="noopener noreferrer"> 快 10-100 倍 </a>。</li></ul><hr><h4 id="安装-2" tabindex="-1"><a class="header-anchor" href="#安装-2"><span>安装</span></a></h4>`,69)),p(h,{id:"869",data:[{id:"macOS/Linux"},{id:"Windows"}],active:0},{title0:e(({value:n,isActive:t})=>a[8]||(a[8]=[s("macOS/Linux")])),title1:e(({value:n,isActive:t})=>a[9]||(a[9]=[s("Windows")])),tab0:e(({value:n,isActive:t})=>a[10]||(a[10]=[i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"curl"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -LsSf"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," https://astral.sh/uv/install.sh"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," | "),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sh")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 验证安装")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"uv"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --version")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202509291042243.png",alt:"image-20250929104234071"})],-1)])),tab1:e(({value:n,isActive:t})=>a[11]||(a[11]=[i("div",{class:"language-powershell line-numbers-mode","data-highlighter":"shiki","data-ext":"powershell","data-title":"powershell",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"powershell "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"-"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"ExecutionPolicy ByPass "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"-"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"c "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"irm https://astral.sh/uv/install.ps1 | iex"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 验证安装")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"uv "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"--"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"version")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202510031927611.png",alt:"image-20251003192732297"})],-1)])),_:1}),a[35]||(a[35]=l(`<hr><h4 id="基本用法" tabindex="-1"><a class="header-anchor" href="#基本用法"><span>基本用法</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 初始化当前项目</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 添加包</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ruff</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 运行检查(不会自动安装缺失的包)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ruff</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> check</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 锁定依赖(更新 uv.lock 文件)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lock</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 同步依赖(会自动安装缺失的包)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sync</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 移除指定包</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remove</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ruff</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 根据需要下载 Python 版本：</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> venv</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --python</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3.12.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --python</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pypy@3.8</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> python</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 在当前目录中使用特定的 Python 版本：</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> python</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pin</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3.11</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建虚拟环境：</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> venv</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 安装锁定的依赖：</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sync</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docs/requirements.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">➜</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  Kira</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Initialized</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> project</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">kira</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">➜</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  Kira</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">✗</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ruff</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Using</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CPython</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3.13.3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> interpreter</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> at:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /Library/Frameworks/Python.framework/Versions/3.13/bin/python3.13</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Creating</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> virtual</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> environment</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> at:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .venv</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Resolved</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> packages</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 1.07s</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Prepared</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> package</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 5.61s</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">░░░░░░░░░░░░░░░░░░░░</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [0/1] Installing wheels...                                               warning: Failed to clone files; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">falling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> back</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> full</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> copy.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> This</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> may</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lead</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> degraded</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> performance.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">         If</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cache</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> and</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> target</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> directories</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> are</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> on</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> different</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> filesystems,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reflinking</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> may</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> not</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> be</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> supported.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">         If</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> this</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> intentional,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`export UV_LINK_MODE=copy\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> or</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> use</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">--link-mode</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">copy\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> suppress</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> this</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> warning.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Installed</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> package</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 33ms</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> +</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ruff==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.13.2</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">➜</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  Kira</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">✗</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ruff</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> check</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">All</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checks</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> passed!</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">➜</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  Kira</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">✗</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lock</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Resolved</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> packages</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 7ms</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">➜</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  Kira</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">✗</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lock</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Resolved</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> packages</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 6ms</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">➜</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  Kira</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">✗</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sync</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Resolved</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> packages</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 7ms</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Audited</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> package</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 3ms</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">➜</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  Kira</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">✗</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><ul><li>warning: Failed to clone files... 这是指尝试用“复制时硬链接/写时复制（reflink 或硬链接）”优化缓存到目标目录的操作失败，回退为普通文件复制。常见原因： <ul><li>缓存目录与项目目录位于不同文件系统 / 卷（特别是 OneDrive、外接盘、网络卷）</li><li>文件系统不支持 reflink 或硬链接语义 影响：仅是性能（多耗一点 I/O），不影响功能或正确性。 若你经常看到且确定总是跨卷，可：</li><li>临时：uv add ruff --link-mode=copy</li><li>全局：export UV_LINK_MODE=copy（放入 shell 配置）</li></ul></li><li>Installed 1 package in 33ms 表示最终成功安装 ruff==0.13.2。</li></ul></blockquote><hr><h3 id="pipenv" tabindex="-1"><a class="header-anchor" href="#pipenv"><span>Pipenv</span></a></h3><blockquote><p>这里记录的是 ubuntu 下的配置<br> Windows 的话 Pycharm 中有自带的 Pipenv 包</p></blockquote><blockquote><p><a href="https://www.w3cschool.cn/article/94449206.html" target="_blank" rel="noopener noreferrer">如何开始使用 Pipenv？ | w3c笔记 (w3cschool.cn)</a></p><p><a href="https://laomeinote.com/4-points-need-to-be-noticed-about-pipenv-usage-in-wsl-ubuntu-18.04" target="_blank" rel="noopener noreferrer">WSL Ubuntu 18.04上使用pipenv的4个关键点 | 老梅笔记 (laomeinote.com)</a></p><p><a href="https://pipenv.pypa.io/en/latest/" target="_blank" rel="noopener noreferrer">Pipenv: Python Dev Workflow for Humans — pipenv 2021.11.9 documentation (pypa.io)</a></p><p><a href="https://docs.python.org/3/tutorial/venv.html" target="_blank" rel="noopener noreferrer">12. Virtual Environments and Packages — Python 3.10.0 documentation</a></p></blockquote><p><a href="https://pipenv.pypa.io/en/latest/" target="_blank" rel="noopener noreferrer">Pipenv</a> 是 Python 的 Python 打包工具，是对使用 <a href="https://pip.pypa.io/en/stable/" target="_blank" rel="noopener noreferrer">Pip</a>、<a href="https://docs.python.org/3/library/venv.html" target="_blank" rel="noopener noreferrer">Venv</a> 和 requirements.txt的升级。Pipenv 是将包管理与虚拟环境相结合的好方法。</p><p>虚拟环境是一个自包含的目录树，其中包含针对特定 Python 版本的 Python 安装，以及许多其他包。</p><p>安装 <code>pipenv</code> 模块:</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pipenv</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> insatll</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pipenv</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 <code>cd</code> 命令切换到需要安装虚拟环境的目录安装虚拟环境(如果当前目录下没有 <code>Pipfile</code> 则会先生成 <code>Pipfile</code>, 如果有的话便会继续安装虚拟环境):</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pipenv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p><code>Pipfile</code> 中将 <code>[[source]]</code> 区域下的 <code>url</code> 改为国内的源</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 华为镜像</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">https://repo.huaweicloud.com/repository/pypi/simple</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 阿里镜像</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">https://mirrors.aliyun.com/pypi/simple</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 官方源</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">https://pypi.python.org/simple</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202111142217965.png" alt="image-20211114221709756"></p><p>如果默认生成的 <code>Pipfile</code> 中的包特别多, 那么这条命令会执行很长时间且没有 log, 这将会是一个很折磨的过程(</p></blockquote><p>启动虚拟环境</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pipenv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> shell</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>可以通过 <code>exit</code> 退出虚拟环境</p><hr><h3 id="poetry" tabindex="-1"><a class="header-anchor" href="#poetry"><span>Poetry</span></a></h3><blockquote><p><a href="https://python-poetry.org/" target="_blank" rel="noopener noreferrer">Poetry - Python dependency management and packaging made easy (python-poetry.org)</a></p><p><a href="https://github.com/python-poetry/poetry" target="_blank" rel="noopener noreferrer">python-poetry/poetry: Python dependency management and packaging made easy. (github.com)</a></p></blockquote><hr><p>Poetry 是 Python 的依赖管理器</p><p>Poetry 可以帮助您声明、管理和安装 Python 项目的依赖项，确保到处都有正确的 stack。</p><hr><h4 id="系统需求" tabindex="-1"><a class="header-anchor" href="#系统需求"><span>系统需求</span></a></h4><p>需要 Python3.8+</p><p>Windows Python 基本都是到官网下的比较新的版本, 一般不会出问题</p><blockquote><p>PS: Windows 尽量不要使用微软商店提供的 Python, 目录管理混乱, 导致很多衍生命令执行时走默认路径检测会报错</p></blockquote><p>主要是 Linux, 尤其是服务器使用老版本 Linux 自带的 python3 版本可能比较老, 需要注意一下, 如果低于 Python3.8 则需要对应安装, 推荐使用上文提到的 <a href="#pyenv">pyenv</a></p><hr><h4 id="安装-3" tabindex="-1"><a class="header-anchor" href="#安装-3"><span>安装</span></a></h4><blockquote><p><a href="https://python-poetry.org/docs/#windows-powershell-install-instructions" target="_blank" rel="noopener noreferrer">Introduction | Documentation | Poetry - Python dependency management and packaging made easy (python-poetry.org)</a></p></blockquote><hr><p>Poetry 提供了一个自定义的安装程序, 通过解构 Poetry 的依赖关系, 将 Poetry 与系统的其他部分隔离开</p><hr>`,37)),p(h,{id:"1032",data:[{id:"Linux"},{id:"Windows"},{id:"pipx"},{id:"macOS"}],active:2},{title0:e(({value:n,isActive:t})=>a[12]||(a[12]=[s("Linux")])),title1:e(({value:n,isActive:t})=>a[13]||(a[13]=[s("Windows")])),title2:e(({value:n,isActive:t})=>a[14]||(a[14]=[s("pipx")])),title3:e(({value:n,isActive:t})=>a[15]||(a[15]=[s("macOS")])),tab0:e(({value:n,isActive:t})=>a[16]||(a[16]=[i("blockquote",null,[i("p",null,"kali 推荐通过此种方式安装")],-1),i("p",null,[i("code",null,"osx / linux / bashonwindows install instructions"),s(":")],-1),i("div",{class:"language-shell line-numbers-mode","data-highlighter":"shiki","data-ext":"shell","data-title":"shell",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 如果需要请设置代理")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"export"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," http_proxy"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"http://127.0.0.1:7890"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"export"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," https_proxy"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"http://127.0.0.1:7890"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 安装 poetry")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"curl"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -sSL"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," https://install.python-poetry.org"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," | "),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"python3"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," -")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),i("blockquote",null,[i("p",null,"如果报错"),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/img/202208101916266.png",alt:"image-20220810191651104"})]),i("p",null,[s("则可通过 "),i("code",null,"--insecure"),s(" 参数来放弃验证")]),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"curl"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -sSL"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --insecure"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," https://install.python-poetry.org"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," | "),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"python"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," -")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])]),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/img/202208101919959.png",alt:"image-20220810191920848"})]),i("hr"),i("p",null,[s("如果出现 "),i("code",null,"syntax error"),s(" 那么大概是 Python 版本比较低, 可以安装 python3.8 及以上版本后使用")]),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"curl"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -sSL"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --insecure"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," https://install.python-poetry.org"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," | "),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"python3"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," -")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])]),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/img/202209132050127.png",alt:"image-20220913205028516"})])],-1),i("p",null,[s("打开 "),i("code",null,"~/.bashrc"),s(": 将 poetry 所在目录添加到该配置文件中")],-1),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"export"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," PATH"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"/root/.local/bin:'),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"$PATH"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"')])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 重载配置文件")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"source"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," ~/.bashrc")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 查看 poetry 版本")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"poetry"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -V")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),i("blockquote",null,[i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/img/202208101927167.png",alt:"image-20220810192714020"})])],-1),i("hr",null,null,-1)])),tab1:e(({value:n,isActive:t})=>a[17]||(a[17]=[i("p",null,[i("code",null,"windows powershell install instructions"),s(":")],-1),i("div",{class:"language-powershell line-numbers-mode","data-highlighter":"shiki","data-ext":"powershell","data-title":"powershell",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"Invoke-WebRequest"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}}," -"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"Uri https:"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"//"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"install.python"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"-"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"poetry.org "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"-"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"UseBasicParsing).Content | python "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"-")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/img/202205270657858.png",alt:"image-20220527065741632"})],-1),i("blockquote",null,[i("p",null,[s("上图中使用的是旧版的 "),i("code",null,"1.x"),s(" 版本的安装链接: "),i("code",null,"https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py"),s(", 新版本推荐使用 "),i("code",null,"https://install.python-poetry.org"),s(" 来安装")]),i("p",null,[i("strong",null,"建议在安装Python之前系统优先的Python不要是conda环境, 也就是说最好系统优先的 Python 环境是自己手动安装的标准 Python 环境")]),i("p",null,"PS: 因为我没装标准Python环境直接用 conda 出问题了, poetry 安装位置会乱飞还会找不到dll"),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/img/202208041015646.png",alt:"image-20220804101533439"})]),i("p",null,[s("使用 "),i("code",null,"poetry --version"),s(" 报错的话需要手动加下环境变量, 如上图所示的目录加到系统变量的 "),i("code",null,"path"),s(" 变量中即可")]),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/img/202208041018136.png",alt:"image-20220804101836027"})]),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/img/202208041017345.png",alt:"image-20220804101729257"})]),i("hr"),i("div",{class:"language-powershell line-numbers-mode","data-highlighter":"shiki","data-ext":"powershell","data-title":"powershell",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"urllib.error.URLError: <urlopen error unknown url type: https>")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])]),i("p",null,"如果出现以上错误, 那可能是因为默认 Python 版本比较低, 建议使用 3.8 以上的版本")],-1),i("p",null,[s("poetry 会自动添加环境变量, 安装完后重启 "),i("code",null,"powershell"),s(", 检查下 poetry 版本:")],-1),i("div",{class:"language-powershell line-numbers-mode","data-highlighter":"shiki","data-ext":"powershell","data-title":"powershell",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"poetry "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"--"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"version")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/img/202205270701015.png",alt:"image-20220527070102934"})],-1),i("hr",null,null,-1)])),tab2:e(({value:n,isActive:t})=>a[18]||(a[18]=[i("blockquote",null,[i("p",null,"Windows 推荐使用 pipx 的方式安装"),i("p",null,"kali, macOS 不建议使用此种方式安装")],-1),i("p",null,"安装 pipx(需要 pip 19.0 及以上版本)",-1),i("div",{class:"language-powershell line-numbers-mode","data-highlighter":"shiki","data-ext":"powershell","data-title":"powershell",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"pip install "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"--"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"user pipx")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202403191137749.png",alt:"image-20240319113705723"})],-1),i("p",null,"可以看到最后有 warning 提示当前没有添加 Path, 可以 cd 到对应目录然后运行",-1),i("div",{class:"language-powershell line-numbers-mode","data-highlighter":"shiki","data-ext":"powershell","data-title":"powershell",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},".\\"),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"pipx.exe"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," ensurepath")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202403191139344.png",alt:"image-20240319113958368"})],-1),i("hr",null,null,-1),i("p",null,"安装完 pipx 后可以通过 pipx 安装 poetry(记得重启 powershell 以更新环境变量)",-1),i("div",{class:"language-powershell line-numbers-mode","data-highlighter":"shiki","data-ext":"powershell","data-title":"powershell",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"pipx install poetry")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202403191144311.png",alt:"image-20240319114404568"})],-1),i("hr",null,null,-1)])),tab3:e(({value:n,isActive:t})=>a[19]||(a[19]=[i("p",null,[s("macOS 请使用 "),i("code",null,"curl -sSL https://install.python-poetry.org | python3 -"),s(" 安装 poetry, 不要使用 pipx 以及 brew 安装")],-1)])),_:1}),a[36]||(a[36]=l(`<hr><h4 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件"><span>配置文件</span></a></h4><blockquote><p><a href="https://python-poetry.org/docs/configuration/" target="_blank" rel="noopener noreferrer">Configuration | Documentation | Poetry - Python dependency management and packaging made easy (python-poetry.org)</a></p></blockquote><hr><ul><li>macOS: <code>~/Library/Application Support/pypoetry</code></li><li>Windows: <code>C:\\Users\\&lt;username&gt;\\AppData\\Roaming\\pypoetry</code></li></ul><p>可以通过:</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">poetry config virtualenvs.in</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">project true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>来让 poetry 默认在项目根目录下创建 <code>venv</code> 作为虚拟环境目录, 或者直接写配置文件:</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">virtualenvs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">in-project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>此项配置默认为 <code>false</code></p><p>若在配置此项之前创建了虚拟环境, windows 下应该在 <code>C:\\Users\\用户名\\AppData\\Local\\pypoetry\\Cache\\virtualenvs</code> 目录下, 将其删除后重新在项目根目录下 <code>poetry install</code> 即可在项目根目录下创建 <code>.venv</code> 作为虚拟环境目录</p></blockquote><hr><h5 id="pyproject-toml" tabindex="-1"><a class="header-anchor" href="#pyproject-toml"><span>pyproject.toml</span></a></h5><p><code>换源</code></p><blockquote><p><a href="https://python-poetry.org/docs/pyproject/" target="_blank" rel="noopener noreferrer">The pyproject.toml file | Documentation | Poetry - Python dependency management and packaging made easy (python-poetry.org)</a></p></blockquote><p>Poetry 默认配置从 PyPI 查询依赖包, 如果想要使用私仓(或是镜像)的话需要如如下配置</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">poetry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">source</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;private&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://example.com/simple&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>例如:</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">poetry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">source</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;aliyun&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://mirrors.aliyun.com/pypi/simple&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">priority</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;primary&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">poetry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">source</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;tsinghua&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://pypi.tuna.tsinghua.edu.cn/simple/&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">priority</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;primary&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><hr><h4 id="基本用法-1" tabindex="-1"><a class="header-anchor" href="#基本用法-1"><span>基本用法</span></a></h4><hr><h5 id="安装依赖" tabindex="-1"><a class="header-anchor" href="#安装依赖"><span>安装依赖</span></a></h5><blockquote><p><a href="http://yun.win80.net/portal/article/index/id/6627/cid/2.html" target="_blank" rel="noopener noreferrer">Python - poetry(5) 依赖规范 (win80.net)</a></p><p><a href="https://bbs.huaweicloud.com/blogs/317789" target="_blank" rel="noopener noreferrer">使用 Python Poetry 进行依赖管理-云社区-华为云 (huaweicloud.com)</a></p><p><a href="https://juejin.cn/post/7013280966852476941" target="_blank" rel="noopener noreferrer">Python依赖管理及打包工具Poetry使用规范 - 掘金 (juejin.cn)</a></p></blockquote><p>对于一个用 poetry 设置 python 环境的项目, 其根目录下有 poetry 的<code>pyproject.toml</code> 即可通过 <code>poetry install</code> 来安装该项目所需的依赖, 如果发现卡主或是其他问题, 可以使用 <code>poetry -vvv install</code> 以在安装依赖时查看更详细的调试信息</p><hr><p>可以在 <code>pyproject.toml</code> 的 <code>tool.poetry.dependencies</code> 区域指明依赖版本</p><p><img src="http://cdn.ayusummer233.top/img/202205270737225.png" alt="image-20220527073752137"></p><p>也可以通过 <code>poetry add</code> 来安装依赖</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">poetry add numpy</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>如果依赖有系统区分需求可以加 <code>marker</code> 参数进行限定，例如：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 🪟 为 Windows 添加 pycairo</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">poetry</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pycairo</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --marker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;sys_platform == &#39;win32&#39;&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 🍎 为 macOS 添加 cairocffi</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">poetry</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cairocffi</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --marker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;sys_platform == &#39;darwin&#39;&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样添加后，<code>pyproject.toml</code> 中会自动更新为：</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">poetry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">pycairo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;^1.24.0&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">markers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;sys_platform == &#39;win32&#39;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">cairocffi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;^1.5.1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">markers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;sys_platform == &#39;darwin&#39;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>PS:</p><ul><li><p><code>--marker</code> 是 <code>Poetry &gt;=1.2</code> 的特性，如果你使用较旧版本（比如 1.1.x）可能不支持</p></li><li><p>最新的 <code>Poetry 1.8.x</code> 也不支持 <code>--marker</code>，不过可以通过直接修改 <code>pyproject.toml</code> 添加 marker 然后 <code>poetry lock;poetry install</code>， 或者直接 <code>poetry add</code> 然后修改<code>pyproject.toml</code> 添加 marker 之后 <code>poetry lock;poetry install</code></p></li><li><p><code>sys_platform</code> 标识的是操作系统平台类型，而不是具体的处理器架构, &quot;win32&quot; 是标识所有 Windows 平台的标准值，这一惯例始于 Windows 系统主要是 32 位的时代, Python 为了保持向后兼容性和一致性，即使在 64 位 Windows 系统上也继续使用 &quot;win32&quot; 作为平台标识符。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> sys</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(sys.platform) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 在任何 Windows 系统上都会输出 &quot;win32&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202504180248120.png" alt="image-20250418024801007"></p></li></ul></blockquote><hr><h5 id="使用虚拟环境" tabindex="-1"><a class="header-anchor" href="#使用虚拟环境"><span>使用虚拟环境</span></a></h5><p>默认情况下, poetry 会在 <code>{cache-dir}/virtualenvs</code> (<code>{cache-dir}\\virtualenvs</code> on Windows)目录下创建一个虚拟环境:</p><p><img src="http://cdn.ayusummer233.top/img/202205270746721.png" alt="image-20220527074613612"></p><p>如果先前设置了 <code>poetry config virtualenvs.in-project true</code> 的话执行 <code>poetry install</code> 安装依赖则会装在项目根目录的 <code>.venv</code> 里</p><p>激活虚拟环境: <code>cd</code> 进入 <code>.venv</code> 然后使用 <code>poetry shell</code> 激活虚拟环境</p><hr><h6 id="结合-conda-环境使用" tabindex="-1"><a class="header-anchor" href="#结合-conda-环境使用"><span>结合 conda 环境使用</span></a></h6><p>poetry 可以直接使用 conda 环境而不单独创建虚拟环境</p><p>只需要先 activate 对应 conda 环境, 然后把 <code>pyproject.toml</code> 中的 python 版本对其当前 conda 环境版本即可</p><p>此时使用 <code>poetry shell</code> 会输出 <code>Virtual environment already activated: xxxxxx</code></p><p>不过当然也可以使用 conda 环境来创建虚拟环境, 只需要使用 <code>poetry env use 对应conda环境的python.exe路径</code> 即可利用该 conda 环境创建虚拟环境</p><h6 id="在当前-conda-环境的-bin-目录中找不到-activate-脚本导致环境激活失败-ubuntu" tabindex="-1"><a class="header-anchor" href="#在当前-conda-环境的-bin-目录中找不到-activate-脚本导致环境激活失败-ubuntu"><span>在当前 conda 环境的 <code>bin</code> 目录中找不到 activate 脚本导致环境激活失败(ubuntu)</span></a></h6><p>在该 conda 环境的 bin 目录下新建一个 activate 文件, 写入如下代码然后重新 poetry shell 即可</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#!/bin/sh</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">_CONDA_ROOT</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/root/anaconda3/envs/xxx&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	# 该 conda 环境根目录</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Copyright (C) 2012 Anaconda, Inc</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># SPDX-License-Identifier: BSD-3-Clause</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">\\.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$_CONDA_ROOT</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/etc/profile.d/conda.sh&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> || </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> $?</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> activate</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">$@</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>奇怪的是虽然没有 activate 脚本, 但是直接 conda activate 是有用的</p></blockquote><hr><h5 id="删除虚拟环境" tabindex="-1"><a class="header-anchor" href="#删除虚拟环境"><span>删除虚拟环境</span></a></h5><p>查找虚拟环境的位置:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">poetry</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> env</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> info</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --path</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>列出所有的虚拟环境:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">poetry</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> env</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> list</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>从上述命令输出中找到需要删除的虚拟环境的名称然后运行如下命令:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">poetry</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> env</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remove</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [虚拟环境名称]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h5 id="导出依赖到-requirements-txt" tabindex="-1"><a class="header-anchor" href="#导出依赖到-requirements-txt"><span>导出依赖到 requirements.txt</span></a></h5><p>当需要将项目打包到 docker 中使用时一般就直接用 docker 中自带的 python 了, 不再需要使用 poetry 创建虚拟环境管理 python 版本依赖, 此时就需要生成一个给 pip install 安装依赖使用的 requirements.txt</p><p>对于 poetry 1.x 而言可以直接使用如下命令导出依赖:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">poetry</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> export</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> requirements.txt</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --output</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> xxx/xxx/requirements.txt</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --without-hashes</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>对于 poetry 2.x 而言, 很多功能都拆分为了独立的模块, 包括 export 也是, 需要先安装 poetry export 才能运行上述命令</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">poetry</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> self</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> poetry-plugin-export</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202506051703254.png" alt="image-20250605170338962"></p><hr><h4 id="python包发布分享" tabindex="-1"><a class="header-anchor" href="#python包发布分享"><span>Python包发布分享</span></a></h4><h5 id="发布到pypi" tabindex="-1"><a class="header-anchor" href="#发布到pypi"><span>发布到PyPI</span></a></h5><blockquote><p><a href="https://textdata.cn/blog/2023-03-31-using-poetry-to-manage-your-project-env/" target="_blank" rel="noopener noreferrer">硬核 | 使用Poetry发布Python库到PyPi的方法</a></p></blockquote><p>使用 <code>poetry new myproject</code> 创建如下结构的 Python包目录</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>myproject</span></span>
<span class="line"><span>   |--- myproject</span></span>
<span class="line"><span>   |    |--- __init__.py</span></span>
<span class="line"><span>   |--- tests</span></span>
<span class="line"><span>   |    |--- __init__.py</span></span>
<span class="line"><span>   |--- README.md</span></span>
<span class="line"><span>   |--- pyproject.toml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202505121649817.png" alt="image-20250512164906548"></p><p>或者自行将当前包按照类似上述结构组织：</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202505121650441.png" alt="image-20250512165016324"></p><hr><p>在 <a href="https://pypi.org/manage/account/" target="_blank" rel="noopener noreferrer">PyPi</a> 创建账户然后创建 API Token：</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202505121827505.png" alt="image-20250512182736410"></p><p>在本地配置 PyPI Token</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">poetry</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pypi-token.pypi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [刚才创建的PyPI </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">API</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Token]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202505121825661.png" alt="image-20250512182503468"></p><p>库编写完成后先构建库：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">poetry</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202505122129829.png" alt="image-20250512212922619"></p><p>然后可以发布到 PyPI</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">poetry</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> publish</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202505122129225.png" alt="image-20250512212942125"></p><hr><h5 id="发布到git仓库" tabindex="-1"><a class="header-anchor" href="#发布到git仓库"><span>发布到Git仓库</span></a></h5><p>对于非公开的库，如何限制环境中没有 PyPI 服务器但是有 Git 仓库管理的话可以将模块推送到 git 仓库来进行分享</p><p>这里以 Github 为例：</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202505131516960.png" alt="image-20250513151616712"></p><p>在别处使用时可以这样做：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">poetry</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git+https://github.com/233Official/summer_modules.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202505131519944.png" alt="image-20250513151953813"></p><p>正常使用：</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202505131521446.png" alt="image-20250513152134334"></p><hr><h4 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题"><span>常见问题</span></a></h4><h5 id="failed-to-create-the-collection-prompt-dismissed" tabindex="-1"><a class="header-anchor" href="#failed-to-create-the-collection-prompt-dismissed"><span>Failed to create the collection: Prompt dismissed..</span></a></h5><blockquote><p><a href="https://github.com/python-poetry/poetry/issues/2692" target="_blank" rel="noopener noreferrer">Error: Unable to store the password for poetry-repository-pypi in the key ring: Failed to unlock the collection! · Issue #2692 · python-poetry/poetry (github.com)</a></p><p><a href="https://blog.frank-mich.com/python-poetry-1-0-0-private-repo-issue-fix/" target="_blank" rel="noopener noreferrer">python poetry 1.0.0 private repo issue fix – Frank-Mich&#39;s Blog</a></p></blockquote><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># test.py</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> keyring</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(keyring.util.platform_.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">config_root</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">poetry</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> python</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test.py</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>打开输出的文件目录(不存在则创建), 新建一个 <code>keyringrc.cfg</code>, 填入</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[backend]                                    </span></span>
<span class="line"><span>default-keyring=keyring.backends.fail.Keyring</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h5 id="卡-keyring" tabindex="-1"><a class="header-anchor" href="#卡-keyring"><span>卡 keyring</span></a></h5><blockquote><p><a href="https://github.com/python-poetry/poetry/issues/6050" target="_blank" rel="noopener noreferrer">Poetry blocks on &quot;Pending...&quot; during installation · Issue #6050 · python-poetry/poetry (github.com)</a></p></blockquote><p>有时候 <code>poetry install</code> 会一只卡 pending, 此时需要查看一些调试信息, 可以使用 <code>poetry -vvv install </code> 来查看更多运行时信息, 如果发现是卡在 keyring 上, 可以运行如下命令</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> PYTHON_KEYRING_BACKEND</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">keyring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">backends</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Keyring</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后重新 <code>poetry -vvv install</code> 即可</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202404151517164.png" alt="企业微信截图_17131654242132"></p><hr><h5 id="python-版本不对" tabindex="-1"><a class="header-anchor" href="#python-版本不对"><span>python 版本不对</span></a></h5><blockquote><p>PS: 如下方案是纯手动的, 推荐优先使用上文中提到的 <a href="#pyenv">pyenv</a></p></blockquote><p>比如这个仓库需要 <code>python 3.10</code> 以上的 python 版本, 这里虽然我全局 python 目前是 3.10, 但是 poetry 当时是 python 3.8 版本安装的, 使用了当时全局的 python 3.8 环境</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202405072246932.png" alt="image-20240507224630840"></p><p>因此这里需要将 poetry 的默认 python 版本指向 python3.10</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看 poetry 当前使用的 python 版本(在带 pyproject.toml 的目录下执行)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">poetry</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> env</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> info</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202405072301117.png" alt="image-20240507230153035"></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 为 poetry 指定需要使用的 python 环境</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">poetry</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> env</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> use</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [python可执行程序路径]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># PS: 如果需要使用的就是当前全局的 python 的话也可以直接</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">poetry</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> env</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> use</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> python</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202405072303970.png" alt="image-20240507230346854"></p><hr><h5 id="macos-vscode识别不到-poetry-创建的-venv-虚拟环境" tabindex="-1"><a class="header-anchor" href="#macos-vscode识别不到-poetry-创建的-venv-虚拟环境"><span>macOS VSCode识别不到 poetry 创建的 .venv 虚拟环境</span></a></h5><p>macOS VSCode 不知道什么原因 poetry 新建的 <code>.venv</code> 虚拟环境无法被正确识别，无法在右下角选择 python 解释器弹出的下拉菜单中找到对应的 python 解释器</p><p>即便手动选择 python 程序文件也无法正常识别</p><p>此时可以使用如下方法来成功配置虚拟环境：</p><p>使用 VSCode 打开 <code>.venv</code> 所在的目录，此时 <code>.venv</code> 直接在当前工作区根目录下 VSCode 可以识别到，在右下角选择 Python 解释器选项中可以选择到虚拟环境</p><p>此时再重新打开之前的目录也可以选择到此虚拟环境了</p><hr><h3 id="pdm" tabindex="-1"><a class="header-anchor" href="#pdm"><span>PDM</span></a></h3><blockquote><p><a href="https://github.com/pdm-project/pdm" target="_blank" rel="noopener noreferrer">pdm-project/pdm: A modern Python package manager with PEP 582 support. (github.com)</a></p><p><a href="https://frostming.com/2020/02-28/pdm-introduction/" target="_blank" rel="noopener noreferrer">PDM - 一款新的 Python 包管理器 | Frost&#39;s Blog (frostming.com)</a></p><p><a href="https://github.com/pdm-project/pdm/blob/main/README_zh.md" target="_blank" rel="noopener noreferrer">pdm/README_zh.md at main · pdm-project/pdm (github.com)</a></p><p>官方文档已经讲得很详细了, 这里摘录下来方便个人阅读</p><p><a href="https://networm.me/2022/02/13/python-in-continuous-integration/#pdm" target="_blank" rel="noopener noreferrer">持续集成中的 Python - 狂飙 (networm.me)</a></p></blockquote><blockquote><p>PDM 是由 Poetry 开发组的成员开发的( •̀ ω •́ )✧</p></blockquote><hr><h4 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h4><p>PDM 旨在成为下一代 Python 软件包管理工具。它最初是为个人兴趣而诞生的。如果你觉得 <code>pipenv</code> 或者 <code>poetry</code> 用着非常好，并不想引入一个新的包管理器，那么继续使用它们吧；但如果你发现有些东西这些 工具不支持，那么你很可能可以在 <code>pdm</code> 中找到。</p><p><a href="https://www.python.org/dev/peps/pep-0582" target="_blank" rel="noopener noreferrer">PEP 582</a> 提出下面这种项目的目录结构：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>foo</span></span>
<span class="line"><span>    __pypackages__</span></span>
<span class="line"><span>        3.8</span></span>
<span class="line"><span>            lib</span></span>
<span class="line"><span>                bottle</span></span>
<span class="line"><span>    myscript.py</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>项目目录中包含一个<code>__pypackages__</code>目录，用来放置所有依赖的库文件，就像<code>npm</code>的<code>node_modules</code>一样。 你可以在<a href="https://www.python.org/dev/peps/pep-0582/#specification" target="_blank" rel="noopener noreferrer">这里</a>阅读更多提案的细节。</p><hr><h4 id="主要特性" tabindex="-1"><a class="header-anchor" href="#主要特性"><span>主要特性</span></a></h4><ul><li><a href="https://www.python.org/dev/peps/pep-0582" target="_blank" rel="noopener noreferrer">PEP 582</a> 本地项目库目录，支持安装与运行命令，完全不需要虚拟环境。</li><li>一个简单且相对快速的依赖解析器，特别是对于大的二进制包发布。</li><li>兼容 <a href="https://www.python.org/dev/peps/pep-0517" target="_blank" rel="noopener noreferrer">PEP 517</a> 的构建后端，用于构建发布包(源码格式与 wheel 格式)</li><li>灵活且强大的插件系统</li><li><a href="https://www.python.org/dev/peps/pep-0621" target="_blank" rel="noopener noreferrer">PEP 621</a> 元数据格式</li><li>像 <a href="https://pnpm.io/motivation#saving-disk-space-and-boosting-installation-speed" target="_blank" rel="noopener noreferrer">pnpm</a> 一样的中心化安装缓存，节省磁盘空间</li></ul><hr><h4 id="为什么不用虚拟环境" tabindex="-1"><a class="header-anchor" href="#为什么不用虚拟环境"><span>为什么不用虚拟环境</span></a></h4><p>现在大部分的 Python 包管理器也同时管理虚拟环境，这主要是为了隔离项目开发环境。但如果涉及到虚拟 环境嵌套虚拟环境的时候，问题就来了：你可能用一个虚拟环境的 Python 安装了某个虚拟环境管理工具， 然后又用这个工具去创建更多虚拟环境。当某一天你升级了新版本的 Python 你必须一个一个去检查这些 虚拟环境，没准哪个就用不了了。</p><p>然而 <a href="https://www.python.org/dev/peps/pep-0582" target="_blank" rel="noopener noreferrer">PEP 582</a> 提供了一个能把 Python 解释器和项目开发环境解耦的方法。这是一个相对比较新的提案， 没有很多相关的工具实现它，这其中就有 <a href="https://github.com/David-OConnor/pyflow" target="_blank" rel="noopener noreferrer">pyflow</a>。但 pyflow 又是用 Rust 写的，不是所有 Python 的社区 都会用 Rust，这样就没法贡献代码，而且，基于同样的原因，pyflow 并不支持 <a href="https://www.python.org/dev/peps/pep-0517" target="_blank" rel="noopener noreferrer">PEP 517</a> 构建。</p><hr><h4 id="安装-4" tabindex="-1"><a class="header-anchor" href="#安装-4"><span>安装</span></a></h4><blockquote><p><a href="https://github.com/pdm-project/pdm/blob/main/README_zh.md#%E5%AE%89%E8%A3%85" target="_blank" rel="noopener noreferrer">pdm/README_zh.md at main · pdm-project/pdm (github.com)</a></p></blockquote><hr><p>安装 PDM 需要 Python 3.7 或更高版本</p><blockquote><p>但是运行 PDM 没有 Python 版本要求</p></blockquote>`,147)),p(h,{id:"1636",data:[{id:"Linux/Mac"},{id:"Windows"}],active:0},{title0:e(({value:n,isActive:t})=>a[20]||(a[20]=[s("Linux/Mac")])),title1:e(({value:n,isActive:t})=>a[21]||(a[21]=[s("Windows")])),tab0:e(({value:n,isActive:t})=>a[22]||(a[22]=[i("div",{class:"language-shell line-numbers-mode","data-highlighter":"shiki","data-ext":"shell","data-title":"shell",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"curl"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -sSL"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"  https://ghproxy.com/https://raw.githubusercontent.com/pdm-project/pdm/main/install-pdm.py"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," | "),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"python3"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," -")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1)])),tab1:e(({value:n,isActive:t})=>a[23]||(a[23]=[i("p",null,[i("code",null,"使用 powershell"),s(":")],-1),i("div",{class:"language-powershell line-numbers-mode","data-highlighter":"shiki","data-ext":"powershell","data-title":"powershell",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"("),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"Invoke-WebRequest"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}}," -"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"Uri https:"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"//"),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"raw.githubusercontent.com"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"/"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"pdm"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"-"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"project"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"/"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"pdm"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"/"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"main"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"/"),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"install-pdm"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},".py "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"-"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"UseBasicParsing).Content | python "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"-")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1),i("blockquote",null,[i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202301101130757.png",alt:""})]),i("p",null,"自动添加的 PATH 在用户变量中, 重启 VSCode 后可能依然无法正确识别 p"),i("p",null,"dm 命令, 此时可以手动修改环境变量, 在系统变量的 PATH 中加上上图中的相应值")],-1),i("hr",null,null,-1),i("p",null,[i("code",null,"使用 pipx"),s(":")],-1),i("div",{class:"language-powershell line-numbers-mode","data-highlighter":"shiki","data-ext":"powershell","data-title":"powershell",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"pipx install pdm")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/img/202205262110720.png",alt:"image-20220526211028582"})],-1)])),_:1}),a[37]||(a[37]=l(`<hr><h4 id="quickstart" tabindex="-1"><a class="header-anchor" href="#quickstart"><span>QuickStart</span></a></h4><p>初始化一个新的 PDM 项目:</p><p>新建一个项目文件夹, 在当前文件夹目录下打开 powershell:</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">pdm init</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>按照指引回答提示的问题，一个 PDM 项目和对应的<code>pyproject.toml</code>文件就创建好了。</p><p><img src="http://cdn.ayusummer233.top/img/202205262120012.png" alt="image-20220526212055852"></p><p><strong>把依赖安装到 <code>__pypackages__</code> 文件夹中</strong></p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">pdm add tk</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 删除则可用:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">pdm remove tk</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="working-with-pep-582" tabindex="-1"><a class="header-anchor" href="#working-with-pep-582"><span>working with PEP 582</span></a></h4><p>推荐在 <code>.gitignore</code> 中忽略</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>__pypackages__/</span></span>
<span class="line"><span>.pdm.toml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>对于 VSCode, 可以先用命令行安装 pdm-vscode:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pdm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> plugin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pdm-vscode</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>安装完后, 在输入 <code>pdm init</code> 或者 <code>pdm use</code> 命令后会自动创建 <code>.vscode/settings.json</code></p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;python.autoComplete.extraPaths&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;__pypackages__/&lt;major.minor&gt;/lib&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;python.analysis.extraPaths&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;__pypackages__/&lt;major.minor&gt;/lib&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>需要结合 pylance 使用的话需要在项目根目录创建一个 <code>pyrightconfig.json</code>:</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;exclude&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;__pypackages__&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="pdm-scripts" tabindex="-1"><a class="header-anchor" href="#pdm-scripts"><span>PDM Scripts</span></a></h4><p>例如运行 <code>main.py</code> 可以使用</p>`,24)),p(h,{id:"1716",data:[{id:"Windows"},{id:"Linux"}],active:0},{title0:e(({value:n,isActive:t})=>a[24]||(a[24]=[s("Windows")])),title1:e(({value:n,isActive:t})=>a[25]||(a[25]=[s("Linux")])),tab0:e(({value:n,isActive:t})=>a[26]||(a[26]=[i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"pdm"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," run"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," python"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," main.py")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1)])),tab1:e(({value:n,isActive:t})=>a[27]||(a[27]=[i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"pdm"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," run"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," python"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," main.py")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1),i("p",null,"或者",-1),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"eval"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},' "$('),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"pdm"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --pep582"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},')"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"python"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," main.py")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),i("p",null,[s("或者将 "),i("code",null,"pdm --pep582"),s(" 写到 "),i("code",null,"/root/.bash_profile"),s(" 然后再在 bash 中使用 "),i("code",null,"python main.py")],-1)])),_:1}),a[38]||(a[38]=l(`<hr><h4 id="pdm-packer" tabindex="-1"><a class="header-anchor" href="#pdm-packer"><span>PDM-packer</span></a></h4><blockquote><p><a href="https://github.com/frostming/pdm-packer" target="_blank" rel="noopener noreferrer">frostming/pdm-packer: A PDM plugin that packs your packages into a zipapp (github.com)</a></p></blockquote><hr><p>A PDM plugin that packs your packages into a zipapp</p><hr><p>pdm-packer requires Python &gt;=3.7</p><hr><p>安装:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pdm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> plugin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pdm-packer</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/img/202205262140421.png" alt="image-20220526214016279"></p><hr><p>使用:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pdm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pack</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [common-options] [pack-options]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>Common Options:</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>-h, --help</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>show this help message and exit</p></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>-v, --verbose</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>-v for detailed output and -vv for more detailed</p></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>-g, --global</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>Use the global project, supply the project root with <code>-p</code> option</p></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>-p PROJECT_PATH, --project PROJECT_PATH</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>Specify another path as the project root, which changes the base of pyproject.toml and <code>__pypackages__</code></p></blockquote><p><strong>Pack Options:</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>-m MAIN, --main MAIN</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>Specify the console script entry point for the zipapp</p></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>-o OUTPUT, --output OUTPUT</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>Specify the output filename. By default the file name will be inferred from the project name.</p></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>-c, --compress</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>Compress files with the deflate method, no compress by default</p></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>--pyc, --compile</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>Compile source into pyc files</p></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>--no-py</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>Remove the .py files in favor of .pyc files</p></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>-i INTERPRETER, --interpreter INTERPRETER</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>The Python interpreter path, default: the project interpreter</p></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>--exe</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>Create an executable file. If the output file isn&#39;t given, the file name will end with .exe(Windows) or no suffix(Posix)</p></blockquote><p>See also: https://docs.python.org/3.9/library/zipapp.html</p><hr><p>示例:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Create with default name(&lt;project_name&gt;.pyz) and console_script as the __main__.py</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pdm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pack</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Create an executable file</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pdm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pack</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --exe</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Create with custom __main__.py and filename</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pdm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pack</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -o</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app.pyz</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app:main</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="pipx" tabindex="-1"><a class="header-anchor" href="#pipx"><span>pipx</span></a></h3><blockquote><p><a href="https://pypa.github.io/pipx/" target="_blank" rel="noopener noreferrer">pipx (pypa.github.io)</a></p><p><a href="https://github.com/pypa/pipx" target="_blank" rel="noopener noreferrer">pypa/pipx: Install and Run Python Applications in Isolated Environments (github.com)</a></p></blockquote><hr><h4 id="安装-5" tabindex="-1"><a class="header-anchor" href="#安装-5"><span>安装</span></a></h4><blockquote><p><a href="https://pipx.pypa.io/stable/installation/" target="_blank" rel="noopener noreferrer">pipx-Installation</a></p></blockquote>`,48)),p(h,{id:"1862",data:[{id:"Windows"},{id:"macOS"}],active:0},{title0:e(({value:n,isActive:t})=>a[28]||(a[28]=[s("Windows")])),title1:e(({value:n,isActive:t})=>a[29]||(a[29]=[s("macOS")])),tab0:e(({value:n,isActive:t})=>a[30]||(a[30]=[i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"pip"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," install"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," pipx"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --user"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," pipx")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/img/202205262032936.png",alt:"image-20220526203216819"})],-1),i("p",null,"提示需要将路径添加到 PATH, 这个可以让 pipx 来完成",-1),i("p",null,[s("首先 "),i("code",null,"cd"),s(" 到安装 pipx 的目录, 然后执行 "),i("code",null,"./pipx ensurepath"),s(":")],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/img/202205262032569.png",alt:"image-20220526203255502"})],-1),i("hr",null,null,-1),i("p",null,"然后重启终端输入 pipx 看看有没有反馈信息",-1),i("p",null,"如果有回显信息:",-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/img/202205262057504.png",alt:"image-20220526205728337"})],-1),i("p",null,"那么说明成功了",-1),i("p",null,[s("如果没有的话则需要手动将 "),i("code",null,"C:\\Users\\233\\AppData\\Roaming\\Python\\Python38\\Scripts"),s("(以我上面安装pipx的路径为例) 添加到环境变量的 "),i("code",null,"PATH"),s(" 变量中")],-1),i("hr",null,null,-1)])),tab1:e(({value:n,isActive:t})=>a[31]||(a[31]=[i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"brew"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," install"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," pipx")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"pipx"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," ensurepath")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202411271626885.png",alt:"image-20241127162643829"})],-1)])),_:1}),a[39]||(a[39]=l('<hr><h4 id="概述-1" tabindex="-1"><a class="header-anchor" href="#概述-1"><span>概述</span></a></h4><p>Pipx 是一个帮助您安装和运行用 Python 编写的最终用户应用程序的工具。它大致类似于 macOS 的 brew，JavaScript 的 npx，和 Linux 的 apt。</p><p>它与 pip 密切相关。实际上，它使用 pip，但是它专注于安装和管理可以从命令行直接作为应用程序运行的 Python 包。</p><hr><h4 id="pipx-与-pip-的区别" tabindex="-1"><a class="header-anchor" href="#pipx-与-pip-的区别"><span>pipx 与 pip 的区别</span></a></h4><p>Pip 是一个通用的包安装程序，用于没有环境隔离的库和应用程序。</p><p>Pipx 是专门为应用程序安装而设计的，因为它增加了隔离性，但仍然使应用程序可以在外壳中使用: pipx 为每个应用程序及其相关包创建一个隔离的环境。</p><hr><h4 id="pipx-从什么地方安装-app" tabindex="-1"><a class="header-anchor" href="#pipx-从什么地方安装-app"><span>pipx 从什么地方安装 app</span></a></h4><p>默认情况下，pipx 使用与 pip 相同的包索引 PyPI。Pipx 还可以从所有其他来源安装 pip can，比如本地目录、 wheel、 git url 等。</p><p>Python 和 PyPI 允许开发人员使用“控制台脚本入口点”分发代码。这些入口点允许用户从命令行调用 Python 代码，有效地起到独立应用程序的作用。</p><p>Pipx 是一个工具，用于以安全、方便和可靠的方式安装和运行这些数千个包含应用程序的软件包。在某种程度上，它把 pythonpackageindex (PyPI)变成了 Python 应用程序的大型应用程序商店。并不是所有的 Python 包都有入口点，但是很多都有。</p>',13))])}const A=r(c,[["render",g],["__file","版本管理工具.html.vue"]]),b=JSON.parse('{"path":"/Language/Python/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7.html","title":"版本管理工具","lang":"zh-CN","frontmatter":{"category":"Python","tags":["Python","版本管理"],"sticky":2,"excerpt":"Python环境版本管理工具以及依赖版本管理工具","star":true,"description":"版本管理工具 版本管理工具 Python版本管理工具 pyenv 安装 使用 conda miniconda Anaconda 安装 配置 创建与使用 python 环境 使用 Anaconda Navigator 使用命令行 Anaconda 换源 Anaconda Navigator 升级 报错收集 check_hostname requires ...","head":[["meta",{"property":"og:url","content":"https://233official.github.io/dailynotes/Language/Python/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7.html"}],["meta",{"property":"og:site_name","content":"DailyNotes"}],["meta",{"property":"og:title","content":"版本管理工具"}],["meta",{"property":"og:description","content":"版本管理工具 版本管理工具 Python版本管理工具 pyenv 安装 使用 conda miniconda Anaconda 安装 配置 创建与使用 python 环境 使用 Anaconda Navigator 使用命令行 Anaconda 换源 Anaconda Navigator 升级 报错收集 check_hostname requires ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"http://cdn.ayusummer233.top/DailyNotes/202407311706846.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-09T03:19:23.000Z"}],["meta",{"property":"article:tag","content":"Python"}],["meta",{"property":"article:tag","content":"版本管理"}],["meta",{"property":"article:modified_time","content":"2025-10-09T03:19:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"版本管理工具\\",\\"image\\":[\\"http://cdn.ayusummer233.top/DailyNotes/202407311706846.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202407311707443.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202407311823350.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202407311549040.png\\",\\"http://cdn.ayusummer233.top/img/202205230936469.png\\",\\"http://cdn.ayusummer233.top/img/20211219065157.png\\",\\"http://cdn.ayusummer233.top/img/20211219065309.png\\",\\"http://cdn.ayusummer233.top/img/20211219065431.png\\",\\"http://cdn.ayusummer233.top/img/20211219065943.png\\",\\"http://cdn.ayusummer233.top/img/20211219070617.png\\",\\"http://cdn.ayusummer233.top/img/202205171533981.png\\",\\"http://cdn.ayusummer233.top/img/202205171534732.png\\",\\"http://cdn.ayusummer233.top/img/202205171537691.png\\",\\"http://cdn.ayusummer233.top/img/202208031558796.png\\",\\"http://cdn.ayusummer233.top/img/20220113131937.png\\",\\"http://cdn.ayusummer233.top/img/20220113132007.png\\",\\"http://cdn.ayusummer233.top/img/202208040122840.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202307281210626.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202307281210111.png\\",\\"http://cdn.ayusummer233.top/img/20210522090710.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202311091447843.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202311091451909.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202509291037605.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202509291042243.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202510031927611.png\\",\\"http://cdn.ayusummer233.top/img/202111142217965.png\\",\\"http://cdn.ayusummer233.top/img/202208101916266.png\\",\\"http://cdn.ayusummer233.top/img/202208101919959.png\\",\\"http://cdn.ayusummer233.top/img/202209132050127.png\\",\\"http://cdn.ayusummer233.top/img/202208101927167.png\\",\\"http://cdn.ayusummer233.top/img/202205270657858.png\\",\\"http://cdn.ayusummer233.top/img/202208041015646.png\\",\\"http://cdn.ayusummer233.top/img/202208041018136.png\\",\\"http://cdn.ayusummer233.top/img/202208041017345.png\\",\\"http://cdn.ayusummer233.top/img/202205270701015.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202403191137749.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202403191139344.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202403191144311.png\\",\\"http://cdn.ayusummer233.top/img/202205270737225.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202504180248120.png\\",\\"http://cdn.ayusummer233.top/img/202205270746721.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202506051703254.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202505121649817.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202505121650441.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202505121827505.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202505121825661.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202505122129829.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202505122129225.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202505131516960.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202505131519944.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202505131521446.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202404151517164.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202405072246932.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202405072301117.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202405072303970.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202301101130757.png\\",\\"http://cdn.ayusummer233.top/img/202205262110720.png\\",\\"http://cdn.ayusummer233.top/img/202205262120012.png\\",\\"http://cdn.ayusummer233.top/img/202205262140421.png\\",\\"http://cdn.ayusummer233.top/img/202205262032936.png\\",\\"http://cdn.ayusummer233.top/img/202205262032569.png\\",\\"http://cdn.ayusummer233.top/img/202205262057504.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202411271626885.png\\"],\\"dateModified\\":\\"2025-10-09T03:19:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"咸鱼型233\\",\\"url\\":\\"https://233official.github.io/dailynotes/\\"}]}"]],"date":"2024-07-31T11:03:30.000Z"},"headers":[{"level":2,"title":"Python版本管理工具","slug":"python版本管理工具","link":"#python版本管理工具","children":[{"level":3,"title":"pyenv","slug":"pyenv","link":"#pyenv","children":[]},{"level":3,"title":"conda","slug":"conda","link":"#conda","children":[]},{"level":3,"title":"Linux-update-alternatives","slug":"linux-update-alternatives","link":"#linux-update-alternatives","children":[]}]},{"level":2,"title":"Python依赖版本管理工具","slug":"python依赖版本管理工具","link":"#python依赖版本管理工具","children":[{"level":3,"title":"virtual environment","slug":"virtual-environment","link":"#virtual-environment","children":[]},{"level":3,"title":"uv","slug":"uv","link":"#uv","children":[]},{"level":3,"title":"Pipenv","slug":"pipenv","link":"#pipenv","children":[]},{"level":3,"title":"Poetry","slug":"poetry","link":"#poetry","children":[]},{"level":3,"title":"PDM","slug":"pdm","link":"#pdm","children":[]},{"level":3,"title":"pipx","slug":"pipx","link":"#pipx","children":[]}]}],"git":{"createdTime":1722423810000,"updatedTime":1759979963000,"contributors":[{"name":"233Mac","username":"233Mac","email":"ayusummer233@vip.qq.com","commits":11,"url":"https://github.com/233Mac"},{"name":"233PC","username":"233PC","email":"ayusummer233@vip.qq.com","commits":1,"url":"https://github.com/233PC"},{"name":"233","username":"233","email":"ayusummer233@vip.qq.com","commits":1,"url":"https://github.com/233"},{"name":"ayusummer233","username":"ayusummer233","email":"ayusummer233@gmail.com","commits":3,"url":"https://github.com/ayusummer233"},{"name":"233PC","username":"233PC","email":"ayusummer233@gmail.com","commits":1,"url":"https://github.com/233PC"}]},"readingTime":{"minutes":29.17,"words":8751},"filePathRelative":"Language/Python/版本管理工具.md","localizedDate":"2024年7月31日","autoDesc":true}');export{A as comp,b as data};
