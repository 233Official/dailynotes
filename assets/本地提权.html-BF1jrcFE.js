import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,o as n}from"./app-CFt4SMiv.js";const t={};function l(p,i){return n(),a("div",null,i[0]||(i[0]=[e(`<h1 id="windows-本地提权" tabindex="-1"><a class="header-anchor" href="#windows-本地提权"><span>Windows 本地提权</span></a></h1><ul><li><a href="#windows-%E6%9C%AC%E5%9C%B0%E6%8F%90%E6%9D%83">Windows 本地提权</a><ul><li><a href="#pytmipe">Pytmipe</a><ul><li><a href="#main-features">Main features</a></li><li><a href="#%E5%8A%9F%E8%83%BD">功能</a></li><li><a href="#%E4%BE%9D%E8%B5%96">依赖</a></li><li><a href="#%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95">使用方法</a><ul><li><a href="#for-python-client-named-tmipe">For <strong>python client</strong> (named tmipe)</a></li><li><a href="#for-python-library-named-pytmipe">For python library (named pytmipe)</a></li><li><a href="#for-pyinstaller-examples-and-standalones">For pyinstaller <strong>examples</strong> and standalones</a></li></ul></li><li><a href="#%E7%A4%BA%E4%BE%8B">示例</a><ul><li><a href="#%E7%A4%BA%E4%BE%8B1-%E8%8E%B7%E5%8F%96-nt-authoritysystem">示例1-获取 nt authority\\system</a></li><li><a href="#%E7%A4%BA%E4%BE%8B2-%E8%8E%B7%E5%8F%96token">示例2-获取token</a></li><li><a href="#%E7%A4%BA%E4%BE%8B3-%E6%A8%A1%E6%8B%9Ftoken">示例3-模拟token</a></li><li><a href="#%E7%A4%BA%E4%BE%8B4-%E5%88%9B%E5%BB%BA%E5%B9%B6%E6%A8%A1%E6%8B%9F-token">示例4-创建并模拟 Token</a></li></ul></li></ul></li><li><a href="#cve">CVE</a><ul><li><a href="#todocve-2024-35250">TODO:CVE-2024-35250</a><ul><li><a href="#%E7%A8%8B%E5%BA%8F%E7%BC%96%E8%AF%91">程序编译</a></li></ul></li></ul></li><li><a href="#%E9%9D%A2%E8%AF%95%E7%9B%B8%E5%85%B3">面试相关</a></li><li><a href="#%E6%8F%90%E6%9D%83%E9%80%9F%E6%9F%A5">提权速查</a></li></ul></li></ul><hr><h2 id="pytmipe" tabindex="-1"><a class="header-anchor" href="#pytmipe"><span>Pytmipe</span></a></h2><blockquote><p><a href="https://github.com/quentinhardy/pytmipe" target="_blank" rel="noopener noreferrer">quentinhardy/pytmipe / Github</a></p></blockquote><p>PYTMIPE 是一个通过令牌篡改和伪造实现提权的 Python3 库， 支持在 Windows 系统中实现令牌篡改和模拟，最终实现权限提升</p><p>TMIPE 是一个 Python3 客户端，主要使用的就是 pytmipe 库</p><hr><h3 id="main-features" tabindex="-1"><a class="header-anchor" href="#main-features"><span>Main features</span></a></h3><table><thead><tr><th style="text-align:center;">Method</th><th style="text-align:center;">Required Privilege(s)</th><th style="text-align:center;">OS (no exhaustive) <br>操作系统（不详尽）</th><th style="text-align:center;">Direct target (max) <br>直接目标（最大）</th></tr></thead><tbody><tr><td style="text-align:center;">Token creation &amp; impersonation <br>令牌创建和模拟</td><td style="text-align:center;">username &amp; password</td><td style="text-align:center;">All</td><td style="text-align:center;">local administrator</td></tr><tr><td style="text-align:center;">Token Impersonation/Theft 令牌冒充/盗窃</td><td style="text-align:center;">SeDebugPrivilege</td><td style="text-align:center;">All</td><td style="text-align:center;">nt authority\\system</td></tr><tr><td style="text-align:center;">Parent PID spoofing (handle inheritance)<br> 父PID欺骗（句柄继承）</td><td style="text-align:center;">SeDebugPrivilege</td><td style="text-align:center;">&gt;= Vista</td><td style="text-align:center;">nt authority\\system</td></tr><tr><td style="text-align:center;">Service (SCM)</td><td style="text-align:center;">Local administrator (and high integrity level if UAC enabled)</td><td style="text-align:center;">All</td><td style="text-align:center;">nt authority\\system or <br>domain account</td></tr><tr><td style="text-align:center;">WMI Event</td><td style="text-align:center;">Local administrator (and high integrity level if UAC enabled)</td><td style="text-align:center;">All</td><td style="text-align:center;">nt authority\\system</td></tr><tr><td style="text-align:center;">« Printer Bug » LPE</td><td style="text-align:center;"><em>SeImpersonatePrivilege</em> (Service account)</td><td style="text-align:center;">Windows 8.1, 10 &amp; Server 2012R2/2016/2019</td><td style="text-align:center;">nt authority\\system</td></tr><tr><td style="text-align:center;">RPCSS Service LPE</td><td style="text-align:center;"><em>SeImpersonatePrivilege</em> (Service account)</td><td style="text-align:center;">Windows 10 &amp; Server 2016/2019</td><td style="text-align:center;">nt authority\\system</td></tr></tbody></table><hr><h3 id="功能" tabindex="-1"><a class="header-anchor" href="#功能"><span>功能</span></a></h3><p>以下列表简略地显示了 <code>pytmipe</code> 库中实现的一些功能：</p><ul><li>令牌和权限管理： <ul><li>获取、启用或禁用当前或远程线程的令牌特权</li><li>获取本地或远程令牌信息</li><li>获取当前线程的有效令牌（模拟或主令牌）</li></ul></li><li>获取有关所选 token 的许多信息： <ul><li>elevation type, impersonation type, Linked token with details, SID, ACLs, default groups, primary group, owner, privileges, source 提升类型、模拟类型、包含详细信息的链接令牌、SID、ACL、默认组、主要组、所有者、权限、源</li><li>etc</li></ul></li><li>列出当前线程可访问的所有令牌（主令牌和模拟令牌）： <ul><li>2 different methods implemented: &quot;thread&quot; method and <strong>&quot;handle&quot;</strong> method (favorite)</li><li>check if token can be impersonated 检查token是否可以被冒充</li><li>get information about each token (elevation type, impersonation type, Linked token, SID, etc) 获取有关每个令牌的信息（提升类型、模拟类型、链接令牌、SID 等）</li><li>get all tokens which are accessible by account name (SID) 获取可通过帐户名（SID）访问的所有令牌</li></ul></li><li>Impersonate a token or user（模拟令牌或用户）： <ul><li>Make Token and Impersonate (requires credentials of user) 制作令牌并模拟（需要用户凭据）</li><li>Token impersonation/theft (specific privileges are required): impersonate a chosen token 令牌模拟/盗窃（需要特定权限）：模拟所选令牌</li><li>Create Process with a token (specific privileges are required): impersonate a chosen token and create new process 使用令牌创建进程（需要特定权限）：模拟所选令牌并创建新进程</li><li><strong>Impersonate first *nt authority\\system* token</strong> found <strong>模拟找到的第一个*nt 权限\\系统*令牌</strong></li><li>impersonate primary token of remote process with pid 使用 pid 模拟远程进程的主令牌</li></ul></li><li>Escalation methods: <ul><li><strong>Parent PID Spoofing</strong> - Handle Inheritance <strong>父 PID 欺骗</strong>- 处理继承</li><li>Service Manager via direct command or named pipe impersonation: local administrator to <em>nt authority\\system</em> (or orther privileged account) 通过直接命令或命名管道模拟的服务管理器：本地管理员到<em>nt权限\\系统</em>（或其他特权帐户）</li><li>Task scheduler via direct command or named pipe impersonation: local administrator to <em>nt authority\\system</em> 通过直接命令或命名管道模拟的任务调度程序：本地管理员到<em>nt权限\\系统</em></li><li>WMI job via direct command or named pipe impersonation: local administrator to <em>nt authority\\system</em> 通过直接命令或命名管道模拟进行 WMI 作业：本地管理员到<em>nt 权限\\系统</em></li><li><strong>Printer Bug</strong>: <em>SeImpersonatePrivilege</em> to <em>nt authority\\system</em><strong>打印机错误</strong>： <em>SeImpersonatePrivilege</em>为<em>nt 权限\\系统</em></li><li><strong>RPCSS</strong>: <em>SeImpersonatePrivilege</em> to <em>nt authority\\system</em><strong>RPCSS</strong> ：对<em>nt 权限\\系统的**SeImpersonatePrivilege</em></li><li><strong>Re enable privileges</strong> via task scheduling and named pipe impersonation 通过任务调度和命名管道模拟<strong>重新启用权限</strong></li></ul></li></ul><hr><h3 id="依赖" tabindex="-1"><a class="header-anchor" href="#依赖"><span>依赖</span></a></h3><p><em>ctypes</em> is used a maximum of time. Many features of <em>pywin32</em> have been re developped in pytmipe to avoid the use of <em>pywin32</em> for better portability. However, Task Scheduler module still uses <em>pywin32</em> (more precisely <em>pythoncom</em>) by lack of time. All other modules uses ctypes only. ctypes 被使用得最多。pywin32 的许多功能已在 pytmipe 中重新开发，以避免使用 pywin32，以实现更好的可移植性。然而，由于时间不足，任务计划程序模块仍然使用 pywin32（更准确地说，是 pythoncom）。所有其他模块仅使用 ctypes。</p><hr><h3 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法"><span>使用方法</span></a></h3><h4 id="for-python-client-named-tmipe" tabindex="-1"><a class="header-anchor" href="#for-python-client-named-tmipe"><span>For <strong>python client</strong> (named tmipe)</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python.exe</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tmipe.py</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -h</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">usage:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tmipe.py</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [-h] [--version]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                {</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cangetadmin,printalltokens,printalltokensbyname,printalltokensbypid,printsystemtokens,searchimpfirstsystem,imppid,imptoken,printerbug,rpcss,spoof,impuser,runas,scm}</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">                ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                      **</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    888888</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  8b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    d8</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  88</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  88</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&quot;Yb</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  888888</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      88</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    88b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  d88</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  88</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  88__dP</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  88__</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">      88</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    88YbdP88</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  88</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  88</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&quot;&quot;   88&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      88    88 YY 88  88  88      888888</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">-------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Token Manipulation, Impersonation and</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     Privilege Escalation (Tool)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">-------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">By Quentin HARDY (quentin.hardy@protonmail.com)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">positional arguments:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  {cangetadmin,printalltokens,printalltokensbyname,printalltokensbypid,printsystemtokens,searchimpfirstsystem,imppid,imptoken,printerbug,rpcss,spoof,impuser,runas,scm}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                         Choose a main command</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    cangetadmin          Check if user can get admin access</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    printalltokens       Print all tokens accessible from current thread</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    printalltokensbyname</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                         Print all tokens accessible from current thread by account name</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    printalltokensbypid  Print all tokens accessible from current thread by pid</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    printsystemtokens    Print all system tokens accessible from current</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    searchimpfirstsystem</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                         search and impersonate first system token</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    imppid               impersonate primary token of selected pid and try to spawn cmd.exe</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    imptoken             impersonate primary or impersonation token of selected pid/handle and try to spawn cmd.exe</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    printerbug           exploit the &quot;printer</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bug&quot; for getting system shell</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    rpcss                exploit &quot;rpcss&quot; for getting system shell</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    spoof                parent PID Spoofing (&quot;handle</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> inheritance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    impuser              create process with creds with impersonation</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    runas                create process with creds as runas</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    scm                  create process with Service Control Manager</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">optional arguments:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  -h, --help             show this help message and exit</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  --version              show program&#39;s version number and exit</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="for-python-library-named-pytmipe" tabindex="-1"><a class="header-anchor" href="#for-python-library-named-pytmipe"><span>For python library (named pytmipe)</span></a></h4><p>请参阅源代码和示例。通常，作者已经很好地记录了源代码... 大多数函数都有文档说明。</p><hr><h4 id="for-pyinstaller-examples-and-standalones" tabindex="-1"><a class="header-anchor" href="#for-pyinstaller-examples-and-standalones"><span>For pyinstaller <strong>examples</strong> and standalones</span></a></h4><p>请参阅 <a href="https://github.com/quentinhardy/pytmipe/tree/master/src/examples" target="_blank" rel="noopener noreferrer">src/examples/文件夹 </a>中的文件</p><hr><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h3><p>如果您想了解如何使用<em>pytimpe</em>库，请参阅 <a href="https://github.com/quentinhardy/pytmipe/tree/master/src/examples" target="_blank" rel="noopener noreferrer">src/examples/文件夹 </a>中的示例</p><hr><h4 id="示例1-获取-nt-authority-system" tabindex="-1"><a class="header-anchor" href="#示例1-获取-nt-authority-system"><span>示例1-获取 nt authority\\system</span></a></h4><p>For impersonating(模拟) the first system token and get a cmd.exe prompt as system from python client (<em>tmipe</em>):</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python.exe</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tmipe.py</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> searchimpfirstsystem</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -vv</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>要直接通过<em>pytmipe</em>库执行相同的操作，请参阅 <code>src/examples/searchAndImpersonateFirstSystemToken.py</code>：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> impersonate </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Impersonate</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> utils </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> configureLogging</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">configureLogging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">imp </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> Impersonate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">imp.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">searchAndImpersonateFirstSystemToken</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">targetPID</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">printAllTokens</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">False</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 如果当前 Windows 用户具有所需的权限(local administrator)，它将以系统身份打开 cmd.exe 提示符。</p><blockquote><p>当然，从这个源代码中，您可以使用 pyinstaller 创建一个独立的 exe。</p></blockquote><hr><blockquote><p>环境： Win10 Pro 22H2 + Python 3.10.6</p></blockquote><p>将仓库 clone 下来然后放到靶机上，cd 进入项目 src 目录， 先安装依赖：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -r</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> requirements.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202412061442870.png" alt="image-20241206144237768"></p><p>然后</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python.exe</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tmipe.py</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> searchimpfirstsystem</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -vv</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202412061443559.png" alt="image-20241206144340489"></p><p>窗口流程跑完会弹出一个 CMD，查看当前用户可以发现已经是 <code>nt authority/system</code> 了</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202412061444585.png" alt="image-20241206144409535"></p><hr><h4 id="示例2-获取token" tabindex="-1"><a class="header-anchor" href="#示例2-获取token"><span>示例2-获取token</span></a></h4><p>For getting primary and impersonation(s) tokens used in current process:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python.exe</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tmipe.py</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> printalltokens</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --current</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --full</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --linked</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202412061559579.png" alt="image-20241206155908409"></p><p>为了获取当前线程可访问的所有令牌，按 pid 组织，当只有可能进行模拟时：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python.exe</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tmipe.py</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> printalltokensbypid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --imp-only</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202412061608453.png" alt="image-20241206160822237"></p><p>使用 pytmipe 库执行此操作的话如下编写：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> impersonate </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Impersonate</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> utils </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> configureLogging</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">configureLogging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">imp </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> Impersonate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">imp.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">printAllTokensAccessible</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">targetPID</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">printFull</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">printLinked</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">_useThreadMethod</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">False</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="示例3-模拟token" tabindex="-1"><a class="header-anchor" href="#示例3-模拟token"><span>示例3-模拟token</span></a></h4><p>要模拟一个选定的 token 需要先据筛选条件获取所有 token（系统 token 和当前线程可以冒充的 token）：</p><div class="language-cmd line-numbers-mode" data-highlighter="shiki" data-ext="cmd" data-title="cmd" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"># 仅显示安全标识符（SID）为 </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;S-1-5-18&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(本地系统账户) 且 canimpersonate 为</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 的令牌</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">python tmipe.py </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">printalltokens</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> --</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">filter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;sid\\&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;S-1-5-18\\&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;canimpersonate\\&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202412061654667.png" alt="image-20241206165416497"></p><p>如下是输出中的一段：</p><div class="language-cmd line-numbers-mode" data-highlighter="shiki" data-ext="cmd" data-title="cmd" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> PID</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">27236</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">------------------------------</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> PID</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">27236</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> # 进程标识符（Process ID），标识当前令牌所属的进程</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Primary</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) # 令牌类型，\`</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Primary</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)\` 表示主令牌</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> token</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1784</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> # 令牌编号或标识符。 </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> hval</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: None # 句柄值，当前为 \`None\` 表示没有值。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> ihandle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: None # 模拟句柄，当前为 \`None\` 表示没有值。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> sid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">-1-5-18</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> # 安全标识符（Security Identifier），\`</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">-1-5-18</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\` 通常代表本地系统账户。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> accountname</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&#39;Name&#39;: &#39;SYSTEM&#39;, &#39;Domain&#39;: &#39;NT AUTHORITY&#39;, &#39;type&#39;: 5} # Name-账户名称，Domain-账户域，type-5-系统账户</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> intlvl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: System # 完整性级别，这里是 \`System\`，表示最高级别。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> owner</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">-1-5-32-544</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> # 所有者的 SID，这里是 \`</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">-1-5-32-544</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\`，通常代表管理员组。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> issystem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> # 是否为系统账户</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> sessionID</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> # 话标识符，这里是 \`</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\`，标识特定的用户会话。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> elevationtype</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">Default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) # 提升类型，\`</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">Default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)\` 表示默认提升。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> iselevated</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> # 是否提升权限，\`</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\` 表示已提升。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> linkedtoken</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: None # 关联的令牌，当前为 \`None\` 表示没有关联。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> tokensource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: b</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&#39;*SYSTEM*&#39; # 令牌来源，这里是 \`b&#39;*SYSTEM*&#39;\`，表示来自系统。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> appcontainertoken</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> False</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> # 是否为应用容器令牌，\`</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">False</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\` 表示不是。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> appcontainersid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: None # 应用容器的 SID，当前为 \`None\`。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> appcontainernumber</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> # 应用容器编号，这里是 \`</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\`。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> primarysidgroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">-1-5-18</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  # 主 SID 组，这里是 \`</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">-1-5-18</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\`。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> isrestricted</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> False</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> # 是否为受限令牌，\`</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">False</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\` 表示不是。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> hasrestricitions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> # 是否有禁制，\`</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\` 表示有限制。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> logonsid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: None # 登入 SID，当前为 \`None\`。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> Mandatory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Policy: NO_WRITE_UP # 强制策略，这里是 \`NO_WRITE_UP\`，表示不允许提升写入权限。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> canimpersonate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> # 是否可以模拟，\`</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">\` 表示可以用于模拟。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个令牌的 <code>intlvl</code> 字段标识当前令牌的完整性级别是 System，PID 为 27236， ihandle 为 None， 可以用于模拟令牌：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tmipe.py</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> imptoken</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --pid</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 27236</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -vv</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202412061727012.png" alt="image-20241206172736929"></p><hr><h4 id="示例4-创建并模拟-token" tabindex="-1"><a class="header-anchor" href="#示例4-创建并模拟-token"><span>示例4-创建并模拟 Token</span></a></h4><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">python .\\tmipe.py runas </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">--</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">username [</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">username</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">--</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">password [</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">password</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202412241101813.png" alt="image-20241224110127759"></p><hr><p><img src="http://cdn.ayusummer233.top/DailyNotes/202412250959957.png" alt="image-20241225095914838"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202412251000365.png" alt="image-20241225100059329"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202412251010360.png" alt="image-20241225101030205"></p><blockquote><p>使用了 Python 的 [ctypes](vscode-file://vscode-app/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/code/electron-sandbox/workbench/workbench.html) 库来调用 Windows API 函数 [CreateProcessWithLogonW](vscode-file://vscode-app/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/code/electron-sandbox/workbench/workbench.html)，该函数用于在指定用户的安全上下文中创建一个新进程。</p><p>通过 [ctypes.windll.advapi32](vscode-file://vscode-app/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/code/electron-sandbox/workbench/workbench.html) 加载了包含 [CreateProcessWithLogonW](vscode-file://vscode-app/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/code/electron-sandbox/workbench/workbench.html) 函数的 [advapi32](vscode-file://vscode-app/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/code/electron-sandbox/workbench/workbench.html) 动态链接库（DLL），并将该函数赋值给 [CreateProcessWithLogonW](vscode-file://vscode-app/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/code/electron-sandbox/workbench/workbench.html) 变量</p><p>接着，设置函数的返回类型为 [BOOL](vscode-file://vscode-app/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/code/electron-sandbox/workbench/workbench.html)，这表示函数调用后会返回一个布尔值，指示调用是否成功</p><p>然后，定义了 [CreateProcessWithLogonW](vscode-file://vscode-app/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/code/electron-sandbox/workbench/workbench.html) 函数的参数类型。[argtypes](vscode-file://vscode-app/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/code/electron-sandbox/workbench/workbench.html) 属性是一个列表，指定了函数每个参数的类型。这些参数类型对应于 Windows API 中 [CreateProcessWithLogonW](vscode-file://vscode-app/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/code/electron-sandbox/workbench/workbench.html) 函数的签名，包括字符串类型（如 [LPCWSTR](vscode-file://vscode-app/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/code/electron-sandbox/workbench/workbench.html)）、整数类型（如 [DWORD](vscode-file://vscode-app/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/code/electron-sandbox/workbench/workbench.html)）以及指向结构体的指针（如 [POINTER(STARTUPINFO)](vscode-file://vscode-app/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/code/electron-sandbox/workbench/workbench.html) 和 [POINTER(PROCESS_INFORMATION)](vscode-file://vscode-app/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/code/electron-sandbox/workbench/workbench.html)）：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">CreateProcessWithLogonW.argtypes </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">  LPCWSTR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,           </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 用户名</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">  LPCWSTR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,           </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 用户域</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">  LPCWSTR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,           </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 密码</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">  DWORD</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,            </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 标志参数</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">  LPCWSTR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,           </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 应用程序名称</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">  LPWSTR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,            </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 命令行</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">  DWORD</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,            </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建标志</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">  LPVOID</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,            </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 环境变量</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">  LPCWSTR</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,           </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 当前目录</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">  POINTER</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">STARTUPINFO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),     </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 启动信息</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">  POINTER</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">PROCESS_INFORMATION</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 进程信息</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><p><img src="http://cdn.ayusummer233.top/DailyNotes/202412251021530.png" alt="cd220ee656d666f586c718c2cde335f6_720"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202412251023785.png" alt="image-20241225102318662"></p><hr><h2 id="cve" tabindex="-1"><a class="header-anchor" href="#cve"><span>CVE</span></a></h2><blockquote><p><a href="https://github.com/Al1ex/WindowsElevation" target="_blank" rel="noopener noreferrer">Github/Al1ex/WindowsElevation</a></p><p>本项目主要用于收集 Windows 平台常用的 exp 经验并提供相关修复方案。一方面，有助于安全研究员在渗透测试过程中快速完成正确的漏洞利用，另一方面，也有助于项目方根据列表找到未匹配的漏洞补丁，以增强系统的安全性。</p></blockquote><hr><h3 id="todo-cve-2024-35250" tabindex="-1"><a class="header-anchor" href="#todo-cve-2024-35250"><span>TODO:CVE-2024-35250</span></a></h3><blockquote><p><a href="https://x.com/Dinosn/status/1846016677042929864" target="_blank" rel="noopener noreferrer">Nicolas Krassas：“PoC Exploit Release for Windows Kernel-Mode Driver Elevation of Privilege Flaw (CVE-2024-35250) https://t.co/M9KxbLlyIh” / X</a></p><p><a href="https://github.com/varwara/CVE-2024-35250" target="_blank" rel="noopener noreferrer">GitHub - varwara/CVE-2024-35250: PoC for the Untrusted Pointer Dereference in the ks.sys driver</a><a href="https://github.com/varwara/CVE-2024-35250" target="_blank" rel="noopener noreferrer">GitHub - varwara/CVE-2024-35250: PoC for the Untrusted Pointer Dereference in the ks.sys driver</a></p><p><a href="https://www.seebug.org/vuldb/ssvid-99884" target="_blank" rel="noopener noreferrer">Windows 内核态驱动本地权限提升漏洞（CVE-2024-35250） - 知道创宇 Seebug 漏洞平台</a></p><p><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-35250" target="_blank" rel="noopener noreferrer">CVE-2024-35250 - 安全更新程序指南 - Microsoft - Windows 内核模式驱动程序特权提升漏洞</a></p></blockquote><ul><li><p>影响范围: Windows Server 2012, Windows Server 2008, Windows Server 2016, Windows 10 , Windows Server 2022,Windows 11</p><blockquote><p>详见 <a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-35250" target="_blank" rel="noopener noreferrer">CVE-2024-35250 - 安全更新程序指南 - Microsoft - Windows 内核模式驱动程序特权提升漏洞</a></p></blockquote></li></ul><hr><h4 id="程序编译" tabindex="-1"><a class="header-anchor" href="#程序编译"><span>程序编译</span></a></h4><p>参考 <a href="https://github.com/varwara/CVE-2024-35250" target="_blank" rel="noopener noreferrer">GitHub - varwara/CVE-2024-35250: PoC for the Untrusted Pointer Dereference in the ks.sys driver</a> 上的源码使用 VisualStudio 构建项目</p><p>如果没装 Windows SDK 的话记得把它装上:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202410171602104.png" alt="image-20241017160205047"></p><ul><li><p><strong>Windows 10 SDK (10.0.20348.0)</strong> 对应 <strong>Windows 10, version 21H2（Windows Server 2022）</strong></p><p>包含了一些较新的 API 和功能更新，支持开发针对较新 Windows 版本的应用程序和驱动程序</p></li><li><p><strong>Windows 10 SDK (10.0.19041.0)</strong> 对应 <strong>Windows 10, version 2004（20H1）</strong></p><p>这是一个较为通用的 SDK 版本，许多开发者选择它来保证与较广泛的 Windows 10 设备兼容</p></li><li><p><strong>Windows 10 SDK (10.0.18362.0)</strong> 对应 <strong>Windows 10, version 1903</strong></p><p>包含更少的新特性，适合针对稍旧版本的 Windows 10 进行开发</p></li></ul><hr><p>除了 Windows SDK 还需要安装 WDK(Windows 驱动程序开发工具包)</p><p>可以在 <a href="https://learn.microsoft.com/en-us/windows-hardware/drivers/download-the-wdk" target="_blank" rel="noopener noreferrer">Download the Windows Driver Kit (WDK) - Windows drivers | Microsoft Learn</a> 找到安装教程</p><p>因为注意到上述页面提供的 WDK 是最近发布的, 漏洞是在 6 月份发布的, 因此从 <a href="https://learn.microsoft.com/en-us/windows-hardware/drivers/other-wdk-downloads" target="_blank" rel="noopener noreferrer">以前的 WDK 版本和其他下载 - Windows 驱动程序 |微软学习 --- Previous WDK versions and other downloads - Windows drivers | Microsoft Learn</a> 换了 Win10 2004 版本的 WDK 安装</p><blockquote><p>PS: 这里我也不清楚下载最新版本是否一定会影响程序运行, 所以下了老版本</p></blockquote><p><img src="http://cdn.ayusummer233.top/DailyNotes/202410171648869.png" alt="image-20241017164840686"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202410171649385.png" alt="image-20241017164910349"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202410171650580.png" alt="image-20241017165037522"></p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202410171651147.png" alt="image-20241017165151103"></p><blockquote><p>这里提醒没安装合适的 Windows SDK, 是因为前面装的 SDK 是最新的, 这里的 WDK 老了一个版本 , 待会儿会把对应的 WIndows SDK 也装了</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202410171653313.png" alt="image-20241017165339249"></p></blockquote><p><img src="http://cdn.ayusummer233.top/DailyNotes/202410171652651.png" alt="image-20241017165252602"></p><hr><p><img src="http://cdn.ayusummer233.top/DailyNotes/202410171558894.png" alt="image-20241017155857674"></p><hr><blockquote><p>TODO: 最后编译通过了但是运行一直报错</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202410171758846.png" alt="image-20241017175834721"></p><p>不是很了解内核驱动开发, 暂且搁置</p></blockquote><hr><h2 id="面试相关" tabindex="-1"><a class="header-anchor" href="#面试相关"><span>面试相关</span></a></h2><ul><li><a href="https://www.freebuf.com/articles/web/335500.html" target="_blank" rel="noopener noreferrer">Windows系列本地提权面试相关问题汇总 / freebuf</a></li></ul><hr><h2 id="提权速查" tabindex="-1"><a class="header-anchor" href="#提权速查"><span>提权速查</span></a></h2><ul><li><a href="https://github.com/wwl012345/Vuln-List/blob/main/Windows%26Linux%E6%8F%90%E6%9D%83%26RCE%E5%90%88%E9%9B%86.md" target="_blank" rel="noopener noreferrer">Windows&amp;Linux提权&amp;RCE合集</a></li></ul><hr>`,114)]))}const k=s(t,[["render",l],["__file","本地提权.html.vue"]]),d=JSON.parse('{"path":"/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E7%AB%AF%E7%82%B9%E5%AE%89%E5%85%A8/Windows/%E6%8F%90%E6%9D%83/%E6%9C%AC%E5%9C%B0%E6%8F%90%E6%9D%83.html","title":"Windows 本地提权","lang":"zh-CN","frontmatter":{"category":["网络安全","端点安全"],"tags":["Windows","提权","本地提权"],"excerpt":"Windows本地提权","description":"Windows 本地提权 Windows 本地提权 Pytmipe Main features 功能 依赖 使用方法 For python client (named tmipe) For python library (named pytmipe) For pyinstaller examples and standalones 示例 示例1-获取 ...","head":[["meta",{"property":"og:url","content":"https://233official.github.io/dailynotes/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E7%AB%AF%E7%82%B9%E5%AE%89%E5%85%A8/Windows/%E6%8F%90%E6%9D%83/%E6%9C%AC%E5%9C%B0%E6%8F%90%E6%9D%83.html"}],["meta",{"property":"og:site_name","content":"DailyNotes"}],["meta",{"property":"og:title","content":"Windows 本地提权"}],["meta",{"property":"og:description","content":"Windows 本地提权 Windows 本地提权 Pytmipe Main features 功能 依赖 使用方法 For python client (named tmipe) For python library (named pytmipe) For pyinstaller examples and standalones 示例 示例1-获取 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"http://cdn.ayusummer233.top/DailyNotes/202412061442870.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-17T03:32:15.000Z"}],["meta",{"property":"article:tag","content":"Windows"}],["meta",{"property":"article:tag","content":"提权"}],["meta",{"property":"article:tag","content":"本地提权"}],["meta",{"property":"article:modified_time","content":"2025-04-17T03:32:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Windows 本地提权\\",\\"image\\":[\\"http://cdn.ayusummer233.top/DailyNotes/202412061442870.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202412061443559.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202412061444585.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202412061559579.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202412061608453.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202412061654667.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202412061727012.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202412241101813.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202412250959957.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202412251000365.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202412251010360.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202412251021530.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202412251023785.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202410171602104.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202410171648869.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202410171649385.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202410171650580.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202410171651147.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202410171653313.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202410171652651.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202410171558894.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202410171758846.png\\"],\\"dateModified\\":\\"2025-04-17T03:32:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"咸鱼型233\\",\\"url\\":\\"https://233official.github.io/dailynotes/\\"}]}"]],"date":"2024-10-17T11:21:32.000Z"},"headers":[{"level":2,"title":"Pytmipe","slug":"pytmipe","link":"#pytmipe","children":[{"level":3,"title":"Main features","slug":"main-features","link":"#main-features","children":[]},{"level":3,"title":"功能","slug":"功能","link":"#功能","children":[]},{"level":3,"title":"依赖","slug":"依赖","link":"#依赖","children":[]},{"level":3,"title":"使用方法","slug":"使用方法","link":"#使用方法","children":[]},{"level":3,"title":"示例","slug":"示例","link":"#示例","children":[]}]},{"level":2,"title":"CVE","slug":"cve","link":"#cve","children":[{"level":3,"title":"TODO:CVE-2024-35250","slug":"todo-cve-2024-35250","link":"#todo-cve-2024-35250","children":[]}]},{"level":2,"title":"面试相关","slug":"面试相关","link":"#面试相关","children":[]},{"level":2,"title":"提权速查","slug":"提权速查","link":"#提权速查","children":[]}],"git":{"createdTime":1729164092000,"updatedTime":1744860735000,"contributors":[{"name":"233Mac","username":"233Mac","email":"ayusummer233@vip.qq.com","commits":11,"url":"https://github.com/233Mac"},{"name":"233","username":"233","email":"ayusummer233@vip.qq.com","commits":2,"url":"https://github.com/233"}]},"readingTime":{"minutes":11.46,"words":3438},"filePathRelative":"网络安全/端点安全/Windows/提权/本地提权.md","localizedDate":"2024年10月17日","autoDesc":true}');export{k as comp,d as data};
