import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a as n,d as h,e,b as i,f as s,r,o as c}from"./app-CFt4SMiv.js";const g={};function u(y,a){const k=r("Tabs"),d=r("RouteLink");return c(),o("div",null,[a[19]||(a[19]=n('<h1 id="docker" tabindex="-1"><a class="header-anchor" href="#docker"><span>Docker</span></a></h1><ul><li><a href="#docker">Docker</a><ul><li><a href="#%E5%AE%89%E8%A3%85">安装</a></li><li><a href="#%E6%8D%A2%E6%BA%90">换源</a><ul><li><a href="#docker-hub-%E6%8D%A2%E6%BA%90">Docker-hub 换源</a></li></ul></li><li><a href="#%E4%BB%A3%E7%90%86">代理</a><ul><li><a href="#daemon-configuration%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B%E9%85%8D%E7%BD%AE">Daemon configuration(守护进程配置)</a></li></ul></li><li><a href="#%E9%95%9C%E5%83%8F">镜像</a><ul><li><a href="#%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4">常用指令</a></li><li><a href="#%E6%9E%84%E5%BB%BA%E9%95%9C%E5%83%8F">构建镜像</a></li><li><a href="#%E5%88%A0%E9%99%A4%E9%95%9C%E5%83%8F">删除镜像</a><ul><li><a href="#%E5%88%A0%E9%99%A4%E4%B8%A4%E4%B8%AA-id-%E7%9B%B8%E5%90%8C%E7%9A%84%E9%95%9C%E5%83%8F">删除两个 id 相同的镜像</a></li></ul></li><li><a href="#%E9%95%9C%E5%83%8F%E5%AF%BC%E5%87%BA%E4%B8%8E%E5%AF%BC%E5%85%A5">镜像导出与导入</a></li><li><a href="#%E5%B0%86%E9%95%9C%E5%83%8F%E8%B7%91%E4%B8%BA%E5%AE%B9%E5%99%A8">将镜像跑为容器</a></li><li><a href="#%E6%8E%A8%E9%80%81%E5%88%B0-habor">推送到 Habor</a></li><li><a href="#%E5%B0%86%E9%95%9C%E5%83%8F%E4%BF%9D%E5%AD%98%E4%B8%BA-tar-%E6%96%87%E4%BB%B6">将镜像保存为 tar 文件</a></li></ul></li><li><a href="#%E5%AE%B9%E5%99%A8">容器</a><ul><li><a href="#%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4-1">常用指令</a></li><li><a href="#%E4%BB%8E%E5%AE%B9%E5%99%A8%E4%B8%AD%E5%A4%8D%E5%88%B6%E6%96%87%E4%BB%B6%E5%88%B0%E6%9C%AC%E5%9C%B0docker-cp">从容器中复制文件到本地(docker cp)</a></li><li><a href="#%E5%B0%86%E5%AE%B9%E5%99%A8%E9%87%8D%E6%96%B0%E6%89%93%E5%8C%85%E6%88%90%E9%95%9C%E5%83%8F">将容器重新打包成镜像</a></li></ul></li><li><a href="#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98">常见问题</a><ul><li><a href="#error-could-not-find-an-available-non-overlapping-ipv4-address-pool-among-the-defaults-to-assign-to-the-network">ERROR: could not find an available, non-overlapping IPv4 address pool among the defaults to assign to the network</a></li><li><a href="#unable-to-connect-to-debdebianorghttp">unable to connect to deb.debian.org:http</a></li><li><a href="#there-is-no-public-key">There is no public key</a></li><li><a href="#debconf-delaying-package-configuration-since-apt-utils-is-not-installed">debconf: delaying package configuration, since apt-utils is not installed</a></li><li><a href="#%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6%E5%A4%B1%E8%B4%A5---failed-to-extract-plugin-usrshareelasticsearchpluginsheadzip-zipexceptionzip-file-is-empty">安装插件失败 - failed to extract plugin [/usr/share/elasticsearch/plugins/head.zip]: ZipException[zip file is empty]</a></li><li><a href="#colima">colima</a><ul><li><a href="#error-failed-to-solve-rpc-error-code--unknown-desc--write-xxxxxx-no-space-left-on-device">ERROR: failed to solve: rpc error: code = Unknown desc = write /xxx/xxx: no space left on device</a></li></ul></li></ul></li></ul></li></ul><hr><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><blockquote><p><a href="https://docs.docker.com/get-started/get-docker/" target="_blank" rel="noopener noreferrer">Get Docker | Docker Docs</a></p></blockquote><p>Windows 直接去 <a href="https://www.docker.com/products/docker-desktop/" target="_blank" rel="noopener noreferrer">Docker Desktop: The #1 Containerization Tool for Developers | Docker</a> 下载 Docker Desktop 即可</p><p>Linux 可以参阅如下方案进行安装</p><hr>',8)),h(k,{id:"172",data:[{id:"通过官方脚本安装(推荐)"},{id:"macOS-Colima"},{id:"Debian"},{id:"wsl2"},{id:"Ubuntu(Deprecated)"},{id:"Debian(Deprecated)"}],active:0},{title0:e(({value:l,isActive:t})=>a[0]||(a[0]=[s("通过官方脚本安装(推荐)")])),title1:e(({value:l,isActive:t})=>a[1]||(a[1]=[s("macOS-Colima")])),title2:e(({value:l,isActive:t})=>a[2]||(a[2]=[s("Debian")])),title3:e(({value:l,isActive:t})=>a[3]||(a[3]=[s("wsl2")])),title4:e(({value:l,isActive:t})=>a[4]||(a[4]=[s("Ubuntu(Deprecated)")])),title5:e(({value:l,isActive:t})=>a[5]||(a[5]=[s("Debian(Deprecated)")])),tab0:e(({value:l,isActive:t})=>a[6]||(a[6]=[i("p",null,"Linux 建议使用如下官方安装脚本来安装 docker:",-1),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# Install the latest version docker")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"curl"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -s"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," https://get.docker.com/"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," | "),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sh")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# Run docker service")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"systemctl"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," start"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," docker")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),i("hr",null,null,-1),i("p",null,"如果使用的是 kali 的话如此安装可能会报错:",-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202410111404586.png",alt:"image-20241011140431470"})],-1),i("p",null,"可能是 Docker 不专门对 Kali 提供相应的 Docker 版本",-1),i("p",null,"Kali Rolling 是基于 Debian 的 Testing 分支，而不是 Debian 的稳定版。Debian 的 Testing 分支是用于开发和测试即将发布为稳定版的新功能和软件包的地方。因此，虽然 Kali Rolling 会包含许多最新的软件包，但这些软件包可能还在测试中，可能不如 Debian 稳定版稳定。",-1),i("p",null,"一般可以认为 kali rolling 基于 Debian 的最新版本, 比如当前的 Debian12 bookworm",-1),i("blockquote",null,[i("p",null,[i("a",{href:"https://download.docker.com/linux/debian/dists/",target:"_blank",rel:"noopener noreferrer"},"Index of linux/debian/dists/ (docker.com)")]),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202410111441468.png",alt:"image-20241011140543292"})])],-1),i("p",null,"那么需要对应修改一下脚本:",-1),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 找个合适的路径执行如下命令先将官方安装脚本下载下来")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"curl"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -fsSL"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," https://get.docker.com"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -o"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," get-docker.sh")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),i("blockquote",null,[i("ul",null,[i("li",null,[i("strong",null,[i("code",null,"-f")]),s('：表示 "fail silently"（静默失败）。如果发生 HTTP 请求错误（例如 404 错误），'),i("code",null,"curl"),s(" 将不会输出错误信息，而是直接返回一个非零状态码")]),i("li",null,[i("strong",null,[i("code",null,"-s")]),s('：表示 "silent"（静默模式），使得 '),i("code",null,"curl"),s(" 不显示进度条或错误信息，提供一个干净的输")]),i("li",null,[i("strong",null,[i("code",null,"-S")]),s("：与 "),i("code",null,"-s"),s(" 一起使用，表示在出现错误时显示错误信息。这样，如果请求失败，你将能够看到错误的原因。")]),i("li",null,[i("strong",null,[i("code",null,"-L")]),s('：表示 "location"。当请求的 URL 被重定向时，'),i("code",null,"curl"),s(" 将自动跟随重定向。这样，可以确保最终获得目标文件，即使它的 URL 被更改")])])],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202410111442939.png",alt:"image-20241011144243624"})],-1),i("p",null,[s("在 "),i("code",null,"check_forked"),s(" 这行后面手动指定 "),i("code",null,'dist_version="bookworm"')],-1),i("p",null,[s("在执行修改后的脚本前先看看你的 "),i("code",null,"/etc/apt/sources.list.d/docker.list"),s(" 文件, 如果你上面执行官方脚本报错了, 那么它大概率是这样的:")],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202410111446991.png",alt:"image-20241011144631751"})],-1),i("p",null,"即使我们执行了修改后的脚本也不会发生变化, 因此我们可以直接把这个文件内容清空, 然后运行修改后的脚本",-1),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"rm"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -rf"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," /etc/apt/sources.list.d/docker.list")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sh"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," get-docker.sh")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),i("hr",null,null,-1),i("p",null,null,-1)])),tab1:e(({value:l,isActive:t})=>a[7]||(a[7]=[i("blockquote",null,[i("p",null,[i("a",{href:"https://github.com/abiosoft/colima",target:"_blank",rel:"noopener noreferrer"},"Colima - 只需最少设置即可在 macOS（和 Linux）上运行容器 / colima Github Repo")])],-1),i("p",null,[s("mac 的硬件资源比较金贵，我刚好买的也是低配的 mac Mini，Docker Desktop 守护进程常驻后台对我来说开销过大了，所以需要一个轻量级的替代方案，"),i("a",{href:"https://github.com/abiosoft/colima",target:"_blank",rel:"noopener noreferrer"},"Colima"),s(" 就是一个可行方案")],-1),i("hr",null,null,-1),i("p",null,[i("strong",null,"安装Colima"),s(":")],-1),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"brew"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," install"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," colima")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202505191142688.png",alt:"image-20250519114222353"})],-1),i("p",null,"查看当前 colima 版本：",-1),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"colima"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," version")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202505191406840.png",alt:"image-20250519140602696"})],-1),i("hr",null,null,-1),i("p",null,"在外置固态上新建一个目录用于存放 colima 相关文件",-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202505191650977.png",alt:"image-20250519165001827"})],-1),i("p",null,"迁移配置到当前目录：",-1),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"mv"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," ~/.colima"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," /Volumes/SummerDocs/AppContents/colima")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202505191651681.png",alt:"image-20250519165132562"})],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202505191651985.png",alt:"image-20250519165140929"})],-1),i("p",null,"创建软连接",-1),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"ln"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -s"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," /Volumes/SummerDocs/AppContents/colima/.colima"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," ~/.colima")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202505191702181.png",alt:"image-20250519170240109"})],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202505191702898.png",alt:"image-20250519170223801"})],-1),i("hr",null,null,-1),i("p",null,"安装 docker CLI",-1),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"brew"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," install"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," docker")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 检查版本")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"docker"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," version")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202505191801775.png",alt:"image-20250519180156592"})],-1),i("hr",null,null,-1),i("p",null,[s("我需要在外置硬盘上设置 colima，需要先设置全局 "),i("code",null,"COLIMA_HOME"),s(", 由于我的默认 shell 都是 zsh ，所以在 "),i("code",null,"~/.zshrc"),s(" 中进行设置：")],-1),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"export"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," COLIMA_HOME"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"/"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"Volumes"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"/"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"SummerDocs"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"/"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"AppContents"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"/"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"colima"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"/."),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"colima")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202505200958579.png",alt:"image-20250520095818386"})],-1),i("p",null,"这样每次打开 zsh 都会自动设置 colima home",-1),i("hr",null,null,-1),i("p",null,"在外置硬盘启动一个 colima 实例：",-1),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"COLIMA_HOME"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"/Volumes/SummerDocs/AppContents/colima/.colima"),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}}," colima"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," start"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," ext"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --cpu"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 2"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --memory"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 2"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --disk"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 30")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 如果上一步设置了 colima home 这里前半段就可以省略了")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"colima"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," start"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," ext"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --cpu"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 2"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --memory"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 2"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --disk"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 30")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),i("ul",null,[i("li",null,[i("code",null,"ext"),s(" 实例名称(配置文件)")]),i("li",null,[i("code",null,"--cpu 2"),s(" 分配2个CPU")]),i("li",null,[i("code",null,"--memory 2"),s(" 分配2GB内存")]),i("li",null,[i("code",null,"--disk 30"),s(" 分配30GB磁盘空间")])],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202505191827292.png",alt:"image-20250519182731093"})],-1),i("blockquote",null,[i("p",null,"PS：上图里的路径是早先设置错的路径，后来迁移了，这里仅作为创建示意图效果参考"),i("p",null,[i("code",null,"colima status"),s(' 在不带参数时默认查询名为 "default" 的实例状态, 由于系统中并没有 "default" 实例，所以返回 "colima is not running"')]),i("p",null,[s("即使系统中只有一个实例，Colima 也不会自动将其视为默认实例。除非明确使用 "),i("code",null,"colima use ext"),s(' 将其设置为活跃实例，否则不带参数的命令会继续尝试操作不存在的 "default" 实例。')])],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202505191829894.png",alt:"image-20250519182913777"})],-1),i("p",null,"检查运行状态",-1),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"colima"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," status"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," ext")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202505191942336.png",alt:"image-20250519194243229"})],-1),i("p",null,[s("这里暂时只需要这一个实例，可以全局在 "),i("code",null,"~/.zshrc"),s(" 设置 colima profile：")],-1),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A626A4","--shiki-dark":"#C678DD"}},"alias"),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}}," colima"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"'colima --profile ext'")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202505192000645.png",alt:"image-20250519200003487"})],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202505192001942.png",alt:"image-20250519200134854"})],-1),i("hr",null,null,-1),i("p",null,[i("code",null,"colima start"),s(" 后，可以在 macOS 上使用 "),i("code",null,"docker"),s(" 客户端，无需进行其他设置。")],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202505192009904.png",alt:"image-20250519200904711"})],-1),i("hr",null,null,-1),i("p",null,[s("如果后续有需要挂载卷的需求, 那么需要修改 "),i("code",null,".colima/ext/colima.yaml"),s(" 添加")],-1),i("div",{class:"language-yaml line-numbers-mode","data-highlighter":"shiki","data-ext":"yaml","data-title":"yaml",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"mounts"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},":")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"  - "),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"location"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"外置磁盘目录")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"    writable"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},": "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"true")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),i("hr",null,null,-1)])),tab2:e(({value:l,isActive:t})=>a[8]||(a[8]=[i("blockquote",null,[i("p",null,[i("a",{href:"https://docs.docker.com/engine/install/debian/#install-using-the-repository",target:"_blank",rel:"noopener noreferrer"},"在 Debian 上安装 Docker 引擎 | Docker 文档 --- Install Docker Engine on Debian | Docker Docs")]),i("p",null,[i("a",{href:"https://download.docker.com/linux/debian/dists/",target:"_blank",rel:"noopener noreferrer"},"Index of linux/debian/dists/ (docker.com)")])],-1),i("ol",null,[i("li",null,[i("p",null,[s("设置 Docker 的 "),i("code",null,"apt"),s(" 存储库")]),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# Add Docker's official GPG key:")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," apt-get"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," update")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," apt-get"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," install"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," ca-certificates"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," curl")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," install"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -m"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 0755"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -d"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," /etc/apt/keyrings")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," curl"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -fsSL"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," https://download.docker.com/linux/debian/gpg"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -o"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," /etc/apt/keyrings/docker.asc")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," chmod"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," a+r"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," /etc/apt/keyrings/docker.asc")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# Add the repository to Apt sources:")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"echo"),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}}," \\")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'  "deb [arch=$('),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"dpkg"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --print-architecture"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},") signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian "),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"\\")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"  $("),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"."),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," /etc/os-release && "),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"echo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},' "'),i("span",{style:{"--shiki-light":"#E45649","--shiki-dark":"#E06C75"}},"$VERSION_CODENAME"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'") stable"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," | "),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"\\")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"  sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," tee"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," /etc/apt/sources.list.d/docker.list"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," > "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"/dev/null")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," apt-get"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," update")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])]),i("blockquote",null,[i("p",null,"如果用的是 kali 的话"),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/image-20240418141046018.png",alt:"image-20240418141046018"})]),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/image-20240418141104580.png",alt:"image-20240418141104580"})]),i("p",null,"需要把 kali-rolling 换成其他版本"),i("p",null,"Kali Rolling 是基于 Debian 的 Testing 分支，而不是 Debian 的稳定版。Debian 的 Testing 分支是用于开发和测试即将发布为稳定版的新功能和软件包的地方。因此，虽然 Kali Rolling 会包含许多最新的软件包，但这些软件包可能还在测试中，可能不如 Debian 稳定版稳定。"),i("p",null,"一般可以认为 kali rolling 基于 Debian 的最新版本, 比如当前的 Debian12 bookworm"),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/image-20240418143331741.png",alt:"image-20240418143331741"})]),i("blockquote",null,[i("p",null,[i("a",{href:"https://download.docker.com/linux/debian/dists/",target:"_blank",rel:"noopener noreferrer"},"Index of linux/debian/dists/ (docker.com)")])]),i("p",null,"可以手动改下文件"),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/image-20240418143351329.png",alt:"image-20240418143351329"})])])]),i("li",null,[i("p",null,"安装 Docker packages"),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," apt-get"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," install"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," docker-ce"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," docker-ce-cli"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," containerd.io"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," docker-buildx-plugin"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," docker-compose-plugin")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])])]),i("li",null,[i("p",null,[s("通过运行 "),i("code",null,"hello-world"),s(" image 验证安装是否成功")]),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," docker"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," run"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," hello-world")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"})])]),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/image-20240418143748673.png",alt:"image-20240418143748673"})]),i("p",null,"如图所示, 可以看到已经安装成功了")])],-1)])),tab3:e(({value:l,isActive:t})=>a[9]||(a[9]=[i("blockquote",null,[i("p",null,[i("a",{href:"https://blog.csdn.net/weixin_39786155/article/details/110363154",target:"_blank",rel:"noopener noreferrer"},"docker wsl2启动不了_win10利用WSL2安装docker的2种方式_weixin_39786155的博客-CSDN博客")])],-1),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"curl"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -fsSL"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," https://get.docker.com"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -o"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," get-docker.sh")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," sh"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," get-docker.sh")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," service"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," docker"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," start")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),i("blockquote",null,[i("p",null,"wsl2-kali 是不支持以此种方式安装的, 可以在 Windows 上装 Docker Desktop 并启用 WSL2 访问"),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/img/202211202356631.png",alt:"image-20221120235620604"})]),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/img/202211210007112.png",alt:"image-20221121000717073"})])],-1),i("hr",null,null,-1),i("p",null,null,-1)])),tab4:e(({value:l,isActive:t})=>a[10]||(a[10]=[i("blockquote",null,[i("p",null,[i("a",{href:"https://cloud.tencent.com/developer/article/1854430",target:"_blank",rel:"noopener noreferrer"},"ubuntu安装docker详细步骤 - 腾讯云开发者社区-腾讯云 (tencent.com)")]),i("p",null,[i("a",{href:"https://kalacloud.com/blog/how-to-install-and-use-docker-on-ubuntu/",target:"_blank",rel:"noopener noreferrer"},"Docker 入门指南：如何在 Ubuntu 上安装和使用 Docker - 卡拉云 (kalacloud.com)")]),i("hr")],-1),i("p",null,"旧版安装指令:",-1),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 更新现有的软件包列表")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"apt"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," update")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 安装所需工具包")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," apt"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," install"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," apt-transport-https"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," ca-certificates"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," curl"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," gnupg-agent"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"  software-properties-common")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 然后将官方 Docker 版本库的 GPG 密钥添加到系统中：")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"curl"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -fsSL"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," https://download.docker.com/linux/ubuntu/gpg"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," | "),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," apt-key"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," add"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," -")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 将 Docker 版本库添加到APT源：")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," add-apt-repository"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},' "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 用新添加的 Docker 软件包来进行升级更新。")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," apt"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," update")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 确保要从 Docker 版本库，而不是默认的 Ubuntu 版本库进行安装：")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"apt-cache"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," policy"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," docker-ce")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 安装 Docker ：")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," apt"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," install"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," docker-ce")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 现在 Docker 已经安装完毕。我们启动守护程序。检查 Docker 是否正在运行：")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," systemctl"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," status"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," docker")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 设置 docker 开机自动启动")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," systemctl"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," enable"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," docker.service")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1)])),tab5:e(({value:l,isActive:t})=>a[11]||(a[11]=[i("blockquote",null,[i("p",null,[i("a",{href:"https://ywnz.com/linuxjc/6543.html",target:"_blank",rel:"noopener noreferrer"},"在Kali Linux版本中安装Docker(Docker CE社区版) 和Docker Compose_Linux教程_云网牛站 (ywnz.com)")]),i("hr")],-1),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 更新现有的软件包列表")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," apt"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," update")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 安装所需工具包")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," apt"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -y"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," install"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," curl"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," gnupg2"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," apt-transport-https"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," software-properties-common"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," ca-certificates")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 导入用于签署Docker软件包的Docker GPG密钥：")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"curl"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -fsSL"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," https://download.docker.com/linux/debian/gpg"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," | "),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," apt-key"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," add"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," -")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 添加包含Docker CE最新稳定版本的Docker存储库：")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"echo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},' "deb [arch=amd64] https://download.docker.com/linux/debian buster stable"'),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," | "),i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," tee"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"  /etc/apt/sources.list.d/docker.list")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 更新apt包索引")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," apt"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," update")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 在Kali Linux上安装Docker CE")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"sudo"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," apt"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," install"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," docker-ce"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," docker-ce-cli"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," containerd.io")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 检查安装的Docker版本")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"docker"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," version")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),i("hr",null,null,-1)])),_:1}),a[20]||(a[20]=n(`<hr><h2 id="换源" tabindex="-1"><a class="header-anchor" href="#换源"><span>换源</span></a></h2><h3 id="docker-hub-换源" tabindex="-1"><a class="header-anchor" href="#docker-hub-换源"><span>Docker-hub 换源</span></a></h3><blockquote><p><a href="https://gist.github.com/y0ngb1n/7e8f16af3242c7815e7ca2f0833d3ea6" target="_blank" rel="noopener noreferrer">国内的 Docker Hub 镜像加速器，由国内教育机构与各大云服务商提供的镜像加速服务 | Dockerized 实践 https://github.com/y0ngb1n/dockerized</a></p></blockquote><p>打开 <code>/etc/docker/daemon.json</code> 并输入</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;registry-mirrors&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &quot;https://hub-mirror.c.163.com&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      &quot;https://ustc-edu-cn.mirror.aliyuncs.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      ]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后重启 docker</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">service</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restart</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,8)),i("blockquote",null,[a[16]||(a[16]=i("p",null,"PS: (编辑于2024.11.19) 公共镜像基本处于不可用的状态, 建议除了与服务器自己有专用镜像的情况外直接上代理",-1)),i("blockquote",null,[a[15]||(a[15]=i("p",null,"云服务器自己的专用镜像也不一定全, 可能会出现 pull 一个镜像报错官方源超时的问题, 可能是云服务器镜像中没有这个 image 然后走官方源又超时",-1)),i("p",null,[a[13]||(a[13]=s("云服务器出现这种问题时可以考虑走 ")),h(d,{to:"/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/%E4%BB%A3%E7%90%86%E8%BD%AC%E5%8F%91/SSH%E9%9A%A7%E9%81%93.html#%E8%BF%9C%E7%A8%8B%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF-%E6%96%AD%E7%BD%91%E4%B8%BB%E6%9C%BA%E8%81%94%E7%BD%91"},{default:e(()=>a[12]||(a[12]=[s("SSH 远程端口转发")])),_:1}),a[14]||(a[14]=s("把本地的代理给云服务器用"))])])]),a[21]||(a[21]=n(`<hr><p>一些当前已知的云服务器专用镜像:</p><ul><li><p>阿里云ECS</p><blockquote><p><a href="https://help.aliyun.com/zh/acr/user-guide/accelerate-the-pulls-of-docker-official-images" target="_blank" rel="noopener noreferrer">阿里云-镜像工具-官方镜像加速</a></p></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>https://urnsehle.mirror.aliyuncs.com</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><hr><h2 id="代理" tabindex="-1"><a class="header-anchor" href="#代理"><span>代理</span></a></h2><blockquote><p><a href="https://docs.docker.com/engine/daemon/proxy/#httphttps-proxy" target="_blank" rel="noopener noreferrer">守护程序代理配置 |Docker 文档 --- Daemon proxy configuration | Docker Docs</a></p><p><a href="https://gist.github.com/y0ngb1n/7e8f16af3242c7815e7ca2f0833d3ea6" target="_blank" rel="noopener noreferrer">国内的 Docker Hub 镜像加速器，由国内教育机构与各大云服务商提供的镜像加速服务 | Dockerized 实践 https://github.com/y0ngb1n/dockerized · GitHub</a></p></blockquote><p>有两种方案可以配置 Docker 代理</p><ul><li>通过配置文件或 CLI 标志<a href="https://docs.docker.com/engine/daemon/proxy/#daemon-configuration" target="_blank" rel="noopener noreferrer">配置守护程序</a></li><li>在系统上设置<a href="https://docs.docker.com/engine/daemon/proxy/#environment-variables" target="_blank" rel="noopener noreferrer">环境变量</a></li></ul><p>直接配置守护进程优先于环境变量</p><blockquote><p>环境变量配置就是指在命令行中配置 http(s) 代理</p></blockquote><hr><h3 id="daemon-configuration-守护进程配置" tabindex="-1"><a class="header-anchor" href="#daemon-configuration-守护进程配置"><span>Daemon configuration(守护进程配置)</span></a></h3><blockquote><p><a href="https://docs.docker.com/engine/daemon/proxy/#daemon-configuration" target="_blank" rel="noopener noreferrer">Daemon configuration 守护进程配置</a></p></blockquote><p>可以在 <code>daemon.json</code> 文件中为 <code>daemon</code> 配置代理, 或者为 <code>dockerd</code> 命令使用 <code>--http-proxy</code> 或 <code>--https-proxy</code> 标志的 CLI 标志</p><blockquote><p>建议使用<code>/etc/docker/daemon.json</code> 进行配置</p></blockquote><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;proxies&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;http-proxy&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://proxy.example.com:3128&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;https-proxy&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://proxy.example.com:3129&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;no-proxy&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;*.test.example.com,.example.org,127.0.0.0/8&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>配置备份:</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;proxies&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;http-proxy&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://127.0.0.1:7890&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;https-proxy&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://127.0.0.1:7890&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;no-proxy&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;*.test.example.com,.example.org,127.0.0.0/8&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><p>更改配置文件后，重启守护进程，代理配置才能生效：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> daemon-reload</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>测试下速度:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rmi</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> node:latest</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> docker pull node:latest</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><img src="http://cdn.ayusummer233.top/DailyNotes/202410111503086.png" alt="image-20241011150324983"></p></blockquote><hr><h2 id="镜像" tabindex="-1"><a class="header-anchor" href="#镜像"><span>镜像</span></a></h2><blockquote><p><a href="https://www.cnblogs.com/baizhanshi/p/9655102.html" target="_blank" rel="noopener noreferrer">关于docker容器和镜像的区别 - jason.bai - 博客园 (cnblogs.com)</a></p></blockquote><p><img src="http://cdn.ayusummer233.top/img/202209231758602.png" alt="image-20220923175753464"></p><hr><h3 id="常用指令" tabindex="-1"><a class="header-anchor" href="#常用指令"><span>常用指令</span></a></h3><ul><li><p>拉取镜像</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># docker pull [镜像名]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># vuldocker/lamp映像包括(php＋apache+MySQL) ，只需要下载dvwa源码即可</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> vuldocker/lamp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>docker pull</code> 下来的镜像默认存在 <code>/var/lib/docker/</code> 目录下</p><p><img src="http://cdn.ayusummer233.top/img/202211091029761.png" alt="image-20221109102750973"></p><hr></blockquote></li><li><p>查看当前镜像列表</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> images</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>修改镜像 Tag</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># docker tag [镜像ID] [镜像名称]:[tag版本信息]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 8ef375298394</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> MySQL:v5.7</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># docker tag [原tag][新tag]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> MySQL:v5.7</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://100.1.1.111:8080/MySQL:v5.7</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><hr><h3 id="构建镜像" tabindex="-1"><a class="header-anchor" href="#构建镜像"><span>构建镜像</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 通过 dockerfile 构建镜像</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [镜像名称:标签] [dockerfile文件所在目录]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 例如 docker build -t my_image:latest .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更好的方案是使用 <code>docker buildx</code> 来构建镜像, <code>docker buildx</code> 是 docker 较新版本中引入的增强构建命令，基于 BuildKit，是 Docker 提供的下一代构建引擎。</p><blockquote><p><a href="https://github.com/docker/buildx" target="_blank" rel="noopener noreferrer">buildx Github Repo URL</a></p></blockquote><p>相比于 <code>docker build</code> 构建 image, <code>docker buildx</code> 支持多平台构建, 以及更好的缓存机制</p><table><thead><tr><th style="text-align:center;"><strong>功能</strong></th><th style="text-align:center;">docker build</th><th style="text-align:center;">docker buildx</th></tr></thead><tbody><tr><td style="text-align:center;">多平台构建（multi-arch）</td><td style="text-align:center;">❌ 不支持</td><td style="text-align:center;">✅ 支持</td></tr><tr><td style="text-align:center;">使用 BuildKit 引擎</td><td style="text-align:center;">可选（需设置 DOCKER_BUILDKIT=1）</td><td style="text-align:center;">默认使用</td></tr><tr><td style="text-align:center;">并行构建阶段</td><td style="text-align:center;">❌</td><td style="text-align:center;">✅ 支持并行多阶段构建</td></tr><tr><td style="text-align:center;">构建缓存导入/导出</td><td style="text-align:center;">❌</td><td style="text-align:center;">✅ （支持 --cache-from / --cache-to）</td></tr><tr><td style="text-align:center;">镜像直接推送至 Registry</td><td style="text-align:center;">❌ 需先 build 再 push</td><td style="text-align:center;">✅ 可一并执行 --push</td></tr><tr><td style="text-align:center;">输出为本地文件夹或 tar</td><td style="text-align:center;">❌</td><td style="text-align:center;">✅ 可通过 --output 实现</td></tr><tr><td style="text-align:center;">构建上下文来源多样化</td><td style="text-align:center;">⛔（仅本地目录）</td><td style="text-align:center;">✅ 支持本地、Git、HTTP 等上下文</td></tr><tr><td style="text-align:center;">构建前配置多个 builder 实例</td><td style="text-align:center;">❌</td><td style="text-align:center;">✅ 支持（如 docker buildx create）</td></tr></tbody></table><p>安装 Docker Buildx:</p>`,37)),h(k,{id:"806",data:[{id:"macOS"}],active:0},{title0:e(({value:l,isActive:t})=>a[17]||(a[17]=[s("macOS")])),tab0:e(({value:l,isActive:t})=>a[18]||(a[18]=[i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 创建插件目录（如果不存在）")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"mkdir"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -p"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," ~/.docker/cli-plugins")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 下载 buildx 插件(看一下 https://github.com/docker/buildx/releases 有哪些版本)(对于 Apple Silicon Mac, 需要下载 drawin-arm64 版本, 对于 Intel Mac, 需要下载 darwin-amd64 版本)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"curl"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -sSL"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," https://github.com/docker/buildx/releases/download/v0.24.0/buildx-v0.24.0.darwin-arm64"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -o"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," ~/.docker/cli-plugins/docker-buildx")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 添加执行权限")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"chmod"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," +x"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," ~/.docker/cli-plugins/docker-buildx")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 验证安装是否成功")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"docker"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," buildx"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," version")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202506130958041.png",alt:"image-20250613095814809"})],-1),i("p",null,"如果是 colima + docker-cli 的模式的话使用 docker buildx 还有如下问题需要解决:",-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202506131014152.png",alt:"image-20250613101434017"})],-1),i("p",null,"从输出可以看到：",-1),i("ol",null,[i("li",null,[s("当前已经有两个 buildx 构建器： "),i("ul",null,[i("li",null,[i("code",null,"colima-ext")]),i("li",null,[i("code",null,"default*"),s(" (当前活动构建器)")])])]),i("li",null,[s("但两者都使用的是 "),i("code",null,"docker"),s(" 驱动，而不是 "),i("code",null,"docker-container"),s(" 驱动")]),i("li",null,[s("错误信息明确指出："),i("strong",null,"多平台构建不支持 docker 驱动程序")])],-1),i("p",null,[s("这种情况在 Colima 环境中很常见，因为它默认配置了 "),i("code",null,"docker"),s(" 驱动的构建器，但没有为多平台构建配置正确的驱动程序。")],-1),i("ul",null,[i("li",null,[i("code",null,"docker"),s(" 驱动：直接使用本地 Docker 守护进程，不支持多平台构建")]),i("li",null,[i("code",null,"docker-container"),s(" 驱动：在容器内运行 BuildKit，支持跨架构编译")])],-1),i("p",null,[s("要解决这个问题需要创建一个使用 "),i("code",null,"docker-container"),s(" 驱动的构建器：")],-1),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 创建新的构建器")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"docker"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," buildx"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," create"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --name"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," multiplatform-builder"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --driver"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," docker-container"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --use")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 检查新构建器状态")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"docker"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," buildx"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," inspect"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --bootstrap")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 现在可以进行多平台构建")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"docker"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," buildx"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," build"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --platform"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," linux/amd64,linux/arm64"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," -t"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," my_image:latest"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --push"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," .")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),i("blockquote",null,[i("p",null,"对于推送目标为 HTTP 协议而非 HTTPS 协议的情况时可以通过创建带有配置文件的构建器来解决"),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202506131042322.png",alt:"image-20250613104224174"})]),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 1. 创建buildkit配置文件")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"cat"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," > "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"~/.docker/buildkitd.toml"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," << "),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"EOF")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'[registry."[ip]:5000"]')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"  http = true")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},"  insecure = true")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}},"EOF")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 2. 删除现有构建器")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"docker"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," buildx"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," rm"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," multiplatform-builder")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 3. 创建带配置的新构建器")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"docker"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," buildx"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," create"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --name"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," multiplatform-builder"),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}}," \\")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"  --driver"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," docker-container"),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}}," \\")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"  --config"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," ~/.docker/buildkitd.toml"),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}}," \\")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"  --use")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 4. 初始化构建器")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"docker"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," buildx"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," inspect"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --bootstrap")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])]),i("hr"),i("p",null,"或者使用临时解决的方案:"),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 直接指定 HTTP 协议")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"docker"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," buildx"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," build"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --platform"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," linux/amd64,linux/arm64"),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}}," \\")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"  -t"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," http://[ip]:5000/library/my_image:version"),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}}," \\")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"  --push"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," .")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])]),i("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"# 为新容器设置运行时选项")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"docker"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," buildx"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," build"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," --platform"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," linux/amd64,linux/arm64"),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}}," \\")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"  --allow-insecure-entitlement"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," security.insecure"),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}}," \\")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"  -t"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," [ip]:5000/library/my_image:version "),i("span",{style:{"--shiki-light":"#0184BC","--shiki-dark":"#56B6C2"}},"\\")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"  --push"),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," .")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])])],-1),i("p",null,"执行上述命令会有如下影响:",-1),i("ol",null,[i("li",null,[i("p",null,[i("strong",null,"新建构建器实例")]),i("ul",null,[i("li",null,[s("创建名为 "),i("code",null,"multiplatform-builder"),s(" 的新构建器")]),i("li",null,"这个构建器会作为一个容器运行在系统中, 占用少量系统资源（CPU、内存）")]),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202506131024113.png",alt:"image-20250613102450992"})])]),i("li",null,[i("p",null,[i("strong",null,"更改默认构建器")]),i("ul",null,[i("li",null,[i("code",null,"--use"),s(" 参数会将新构建器设置为默认构建器")]),i("li",null,[s("后续的 "),i("code",null,"docker buildx build"),s(" 命令默认会使用这个构建器")]),i("li",null,[s("可以通过 "),i("code",null,"docker buildx ls"),s(" 看到 "),i("code",null,"multiplatform-builder"),s(" 旁边有 "),i("code",null,"*"),s(" 标记")])])]),i("li",null,[i("p",null,[i("strong",null,"启动 BuildKit 容器")]),i("ul",null,[i("li",null,[i("code",null,"docker-container"),s(" 驱动会启动一个专用的 BuildKit 容器")]),i("li",null,"这个容器在构建过程中会一直运行")])])],-1),i("p",null,[i("img",{src:"http://cdn.ayusummer233.top/DailyNotes/202506131024434.png",alt:"image-20250613102414313"})],-1)])),_:1}),a[22]||(a[22]=n(`<hr><p>使用 buildx 构建多平台 image:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> buildx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --platform</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> linux/amd64,linux/arm64</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [镜像名称:标签] --push [dockerfile所在目录]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 例如: </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## docker buildx build --platform linux/amd64,linux/arm64 -t my_image:latest --push .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><code>--platform</code> 指定要构建的目标平台</p><ul><li><code>linux/amd64</code> 表示构建适用于 AMD64 架构的镜像</li><li><code>linux/arm64</code> 表示构建适用于 ARM64 架构的镜像</li></ul><p>一般情况下这两个平台已经能覆盖大部分常见的 CPU 架构了, 当然遇到特殊需求时也可以根据需要添加其他平台</p></li><li><p><code>-t</code> 指定镜像名称和标签</p></li><li><p><code>--push</code> 表示构建完成后将镜像推送到 Docker Registry（如 Docker Hub 或私有仓库）</p></li><li><p><code>[dockerfile所在目录]</code> 指定 Dockerfile 文件所在的目录</p></li></ul><blockquote><p>注意: <code>docker buildx</code> 构建的镜像会被推送到 Docker Registry, 如果不想推送可以使用 <code>--load</code> 选项将镜像加载到本地 Docker 中, 这样就可以在本地的 image 列表中看到构建的镜像了</p></blockquote><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> buildx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --platform</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> linux/amd64,linux/arm64</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [镜像名称:标签] --load [dockerfile所在目录]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 例如:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> buildx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --platform</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> linux/amd64,linux/arm64</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my_image:latest</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --load</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除了加载到本地 Docker 中外, 还可以将构建的镜像保存为 tar 文件:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> buildx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --platform</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> linux/amd64,linux/arm64</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [镜像名称:标签] --output </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">tar,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dest</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">[保存路径</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] [dockerfile所在目录]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 例如:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> buildx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --platform</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> linux/amd64,linux/arm64</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my_image:latest</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --output</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> type=tar,dest=my_image.tar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="删除镜像" tabindex="-1"><a class="header-anchor" href="#删除镜像"><span>删除镜像</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 根据 镜像名称 来删除镜像</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rmi</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> centos</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 根据 镜像:标签名称 来删除镜像</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rmi</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> centos:v2</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 根据 镜像ID 来删除镜像，</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rmi</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 7e6257c9f8d8</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="删除两个-id-相同的镜像" tabindex="-1"><a class="header-anchor" href="#删除两个-id-相同的镜像"><span>删除两个 id 相同的镜像</span></a></h4><blockquote><p><a href="https://blog.csdn.net/wx940627/article/details/106821002" target="_blank" rel="noopener noreferrer">Docker - 两个id相同的镜像怎么删除_Joker_Wangx的博客-CSDN博客_docker 镜像重复</a></p></blockquote><p>通过 <code>docker rmi [镜像:tag]</code> 来删除对应标签的镜像, 实际上</p><hr><h3 id="镜像导出与导入" tabindex="-1"><a class="header-anchor" href="#镜像导出与导入"><span>镜像导出与导入</span></a></h3><blockquote><p><a href="https://blog.csdn.net/hx_long/article/details/122705151" target="_blank" rel="noopener noreferrer">docker容器导出，并将导出镜像在另外一台设备上运行起来_hx_long的博客-CSDN博客_docker 容器导出</a></p></blockquote><hr><h3 id="将镜像跑为容器" tabindex="-1"><a class="header-anchor" href="#将镜像跑为容器"><span>将镜像跑为容器</span></a></h3><blockquote><p><a href="https://www.runoob.com/docker/docker-run-command.html" target="_blank" rel="noopener noreferrer">Docker run 命令 | 菜鸟教程 (runoob.com)</a></p><hr></blockquote><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [OPTIONS] IMAGE [COMMAND] [ARG...]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p><code>-a stdin</code>: 指定标准输入输出内容类型，可选 STDIN/STDOUT/STDERR 三项；</p></li><li><p><code>-d</code>: 后台运行容器，并返回容器ID；</p></li><li><p><code>-i</code>: 以交互模式运行容器，通常与 -t 同时使用；</p></li><li><p><code>-P</code>: 随机端口映射，容器内部端口<strong>随机</strong>映射到主机的端口</p></li><li><p><code>-p</code>: 指定端口映射，格式为：<strong>主机(宿主)端口:容器端口</strong></p></li><li><p><code>-t</code>: 为容器重新分配一个伪输入终端，通常与 -i 同时使用；</p></li><li><p><code>--name=&quot;nginx-lb&quot;</code>: 为容器指定一个名称；</p></li><li><p><code>--dns 8.8.8.8</code>: 指定容器使用的DNS服务器，默认和宿主一致；</p></li><li><p><code>--dns-search example.com</code>: 指定容器DNS搜索域名，默认和宿主一致；</p></li><li><p><code>-h &quot;mars&quot;</code>: 指定容器的hostname；</p></li><li><p><code>-e username=&quot;ritchie&quot;</code>: 设置环境变量；</p></li><li><p><code>--env-file=[]</code>: 从指定文件读入环境变量；</p></li><li><p><code>--cpuset=&quot;0-2&quot; or --cpuset=&quot;0,1,2&quot;</code>: 绑定容器到指定CPU运行；</p></li><li><p><code>-m</code>: 设置容器使用内存最大值；</p></li><li><p><code>--net=&quot;bridge&quot;</code>: 指定容器的网络连接类型，支持 bridge/host/none/container: 四种类型；</p></li><li><p><code>--link=[]</code>: 添加链接到另一个容器；</p></li><li><p><code>--expose=[]</code>: 开放一个端口或一组端口；</p></li><li><p><code>--volume , -v</code>: 绑定一个卷</p></li><li><p><code>--restart=always</code>: 容器设置自动启动</p><ul><li><code>no</code>: 不自动重启容器. (默认value)</li><li><code>on-failure</code>: 容器发生 error</li><li>而退出(容器退出状态不为0)重启容器</li><li><code>unless-stopped</code>: 在容器已经 stop 掉或 <code>Docker stoped/restarted</code> 的时候才重启容器</li><li><code>always</code>: 在容器已经 stop 掉或 <code>Docker stoped/restarted</code> 的时候才重启容器</li></ul><p>如果创建时未指定 <code>--restart=always</code> ,可通过update 命令</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>docker update --restart=always [container-id]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><hr><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>docker run -it -d --name dvwa -p 8008:80 vuldocker/lamp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>设置名字为dvwa，映射端口为8008</p><p>-i: 交互式操作。</p><p>-t: 终端(一般与i一起)</p><p>-d：后台运行。</p></blockquote><p>从图中可以看到在执行</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>docker run -it -d --name dvwa -p 8008:80 vuldocker/lamp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>指令时出现了问题，说已经有container使用了dvwa这个名字( <code>The container name &quot;/dvwa&quot; is already in use by container &quot;6e3fc590b41c9c6cf6c0d81de14730c127240edecb6a2a5e3debf1565eb3fe6b&quot;</code>) ，但是从图中也可以看到docker ps指令执行后没有正在运行的container,可以执行</p><hr><h3 id="推送到-habor" tabindex="-1"><a class="header-anchor" href="#推送到-habor"><span>推送到 Habor</span></a></h3><p>**因为是在只有http sql apach服务的镜像上跑的容器，在容器里配置了dvwa(并没有改变镜像) **</p><p><strong>此时将原来的镜像推送还是只有http sql apach服务的镜像，没有自己在容器里的所有配置 需要将容器保存为镜像再去推送才行</strong></p><p>在本地docker客户端--靶机进行如下配置：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">touch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/docker/daemon.json</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/docker/daemon.json</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>文件中如下配置</p><div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">{</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	&quot;insecure-registries&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;habor-hostip:端口&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> daemon-reload</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> restart</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 登录 Habor (登录成功会提示 Login Succeeded)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> login</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [HaborHostip:端口]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 将本地的image新建1个新的tag</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tag</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> SOURCE_IMAGE[:TAG]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [HaborHostip]:[端口]/[目标路径][:TAG]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 推送镜像</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [HaborHostip]:[端口]/[目标路径][:TAG]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>后续可以通过 <code>docker pull</code> 命令拉取镜像</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [HaborHostip]:[端口]/[目标路径][:TAG]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="将镜像保存为-tar-文件" tabindex="-1"><a class="header-anchor" href="#将镜像保存为-tar-文件"><span>将镜像保存为 tar 文件</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 将镜像保存为 tar 文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> save</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -o</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">文件</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">名&gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.tar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">镜像名称:标</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">签&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## 例如:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> save</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -o</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my_image.tar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my_image:latest</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## .tar 是打包格式，不做任何压缩，可以压缩一层缩小包体</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> save</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">镜像名称:标</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">签&gt; | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">gzip</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">xxx.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">### -si 从标准输入读取数据</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> save</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">镜像名称:标</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">签&gt; | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">7z</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -si</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> xxx.tar.7z</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202412161954167.png" alt="592de30eee153e34c0dab2caa0411766"></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 加载 tar 镜像:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> load</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [tar路径]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## 例如:</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> load</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my_image.tar</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## 加载 gzip 镜像</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> load</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> xxx.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">### 加载 7z 镜像(-so 将 .7z 解压后的内容直接输出到标准输出)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">7z</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> xxx.tar.7z</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -so</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> load</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202412162022592.png" alt="image-20241216202218520"></p><hr><h2 id="容器" tabindex="-1"><a class="header-anchor" href="#容器"><span>容器</span></a></h2><blockquote><p><a href="https://www.cnblogs.com/cqqfboy/p/15209635.html" target="_blank" rel="noopener noreferrer">容器Docker进入的四种方法 - 指尖上的代码go - 博客园 (cnblogs.com)</a></p></blockquote><hr><h3 id="常用指令-1" tabindex="-1"><a class="header-anchor" href="#常用指令-1"><span>常用指令</span></a></h3><p><a href="#%E5%B0%86%E9%95%9C%E5%83%8F%E8%B7%91%E4%B8%BA%E5%AE%B9%E5%99%A8">将镜像跑为容器</a></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 进入容器(使用 bash 或者 sh 均可)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> container</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [容器id] /bin/bash</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> container</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exec</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [容器id] /bin/sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 强制删除容器 docker rm -f [容器 id]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 删除所有容器</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> $(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -q</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)   </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 显示当前正在运行的容器</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看容器日志</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> logs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [容器ID]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="从容器中复制文件到本地-docker-cp" tabindex="-1"><a class="header-anchor" href="#从容器中复制文件到本地-docker-cp"><span>从容器中复制文件到本地(docker cp)</span></a></h3><p>例：从容器中复制一个<code>test.db</code>文件到本地<code>data</code>目录。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 假设存在一个镜像名为 kitty，标签为0.1，创建一个名为 koko的容器</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 1. create a container first</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker run </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">itd </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">--</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">name koko kitty:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> /</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">bin</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">bash</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 2. copy test.db from koko tmp directory to local data directory.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker cp koko:</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">tmp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">test.db .</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">test.db</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 3. rm container koko</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker rm </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">f koko</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p><code>docker cp</code>也可以从本地copy文件到容器中：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 以上面的代码为例，把容器路径和本地路径颠倒即可.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker cp .</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">test.db koko:</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">tmp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">test.db</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>在docker中，LAMP是指Linux(操作系统) 、Apache HTTP服务器、MySQL(MariaDB等数据库软件) 和PHP(Perl或Python) 的组合方案，一般用来建立Web服务器环境。</p><blockquote><p><a href="https://www.php.cn/docker/488591.html" target="_blank" rel="noopener noreferrer">docker中的lamp是什么-Docker-PHP中文网</a></p></blockquote><hr><h3 id="将容器重新打包成镜像" tabindex="-1"><a class="header-anchor" href="#将容器重新打包成镜像"><span>将容器重新打包成镜像</span></a></h3><blockquote><p><a href="https://blog.csdn.net/weixin_45505313/article/details/125020076" target="_blank" rel="noopener noreferrer">Docker 使用-将容器打成镜像_谈谈1974的博客-CSDN博客_容器打包成镜像</a></p><hr></blockquote><p>在使用 <code>docker-compose build</code> 命令时, 在有些镜像 build 完启动后发现其环境是并不完整的, 缺少了一些东西</p><blockquote><p>比如在复现 CVE-2015-3337 时需要安装一个 <code>elasticsearch-head</code> 的插件, 发现用 vulhub 仓库里的 dockerfile</p><p><code>docker-compose build</code> 构建进行时插件实际上并没有安装成功, 但是镜像成功 build 了</p></blockquote><p>进入启动的容器进行排错, 最终修复了问题后可以将目前用拥有完整环境的容器重新打包成镜像</p><p>Docker 提供了 <code>commit</code> 命令支持将容器重新打成镜像文件，其命令格式如下所示</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [OPTIONS] CONTAINER [REPOSITORY[:TAG]]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:center;">Option</th><th style="text-align:center;">功能</th></tr></thead><tbody><tr><td style="text-align:center;">-a</td><td style="text-align:center;">指定新镜像作者</td></tr><tr><td style="text-align:center;">-c</td><td style="text-align:center;">使用 Dockerfile 指令来创建镜像</td></tr><tr><td style="text-align:center;">-m</td><td style="text-align:center;">提交生成镜像的说明信息</td></tr><tr><td style="text-align:center;">-p</td><td style="text-align:center;">在 commit 时，将容器暂停</td></tr></tbody></table><p>可以先查看下当前运行容器的 id</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [容器相关标识, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">比如</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cve-2015-3337</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 之类]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 添加描述信息并将容器打包成新的镜像(给个新tag)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;add elasticsearch-head&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 10f2daf4ead5</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cve-2015-3337_es:v0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题"><span>常见问题</span></a></h2><h3 id="error-could-not-find-an-available-non-overlapping-ipv4-address-pool-among-the-defaults-to-assign-to-the-network" tabindex="-1"><a class="header-anchor" href="#error-could-not-find-an-available-non-overlapping-ipv4-address-pool-among-the-defaults-to-assign-to-the-network"><span>ERROR: could not find an available, non-overlapping IPv4 address pool among the defaults to assign to the network</span></a></h3><blockquote><p>[<a href="https://github.com/docker/for-linux/issues/418" target="_blank" rel="noopener noreferrer">openvpn] ERROR: could not find an available, non-overlapping IPv4 address pool among the defaults to assign to the network · Issue #418 · docker/for-linux (github.com)</a></p></blockquote><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> network</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prune</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="unable-to-connect-to-deb-debian-org-http" tabindex="-1"><a class="header-anchor" href="#unable-to-connect-to-deb-debian-org-http"><span>unable to connect to deb.debian.org:http</span></a></h3><p><img src="http://cdn.ayusummer233.top/img/202209192027036.png" alt="image-20220919202703896"></p><blockquote><p><a href="https://stackoverflow.com/questions/44080220/docker-failed-to-fetch-http-deb-debian-org-debian-dists-jessie-inrelease" target="_blank" rel="noopener noreferrer">Docker failed to fetch http://deb.debian.org/debian/dists/jessie/InRelease - Stack Overflow</a></p></blockquote><p><img src="http://cdn.ayusummer233.top/img/202209192029288.png" alt="image-20220919202953164"></p><p><img src="http://cdn.ayusummer233.top/img/202209192030522.png" alt="image-20220919203028392"></p><hr><h3 id="there-is-no-public-key" tabindex="-1"><a class="header-anchor" href="#there-is-no-public-key"><span>There is no public key</span></a></h3><blockquote><p><a href="https://developer.aliyun.com/article/533899" target="_blank" rel="noopener noreferrer">使用apt-get时出现 “no public key available” 的解决方法-阿里云开发者社区 (aliyun.com)</a></p></blockquote><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt-key</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> adv</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --recv-keys</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --keyserver</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> keyserver.ubuntu.com</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [报错缺失的public </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">key]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="debconf-delaying-package-configuration-since-apt-utils-is-not-installed" tabindex="-1"><a class="header-anchor" href="#debconf-delaying-package-configuration-since-apt-utils-is-not-installed"><span>debconf: delaying package configuration, since apt-utils is not installed</span></a></h3><blockquote><p>[<a href="https://github.com/phusion/baseimage-docker/issues/319" target="_blank" rel="noopener noreferrer">16.04] debconf: delaying package configuration, since apt-utils is not installed · Issue #319 · phusion/baseimage-docker (github.com)</a></p></blockquote><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apt-get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apt-get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --no-install-recommends</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt-utils</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="安装插件失败-failed-to-extract-plugin-usr-share-elasticsearch-plugins-head-zip-zipexception-zip-file-is-empty" tabindex="-1"><a class="header-anchor" href="#安装插件失败-failed-to-extract-plugin-usr-share-elasticsearch-plugins-head-zip-zipexception-zip-file-is-empty"><span>安装插件失败 - failed to extract plugin [/usr/share/elasticsearch/plugins/head.zip]: ZipException[zip file is empty]</span></a></h3><p>在使用 <code>docker-compose build</code> 时发现有些时候虽然 build 成功了但是实际上环境是不完整的, 比如在复现 <code>CVE-2015-3337</code> 时需要安装一个插件</p><p>发现 vulhub 该 cve 目录下 <code>docker-compose build</code> 拉取了一个空的插件安装包并且解压<mark>失败了</mark>, 但是却成功 <code>build</code> 了</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202212081036240.png" alt="image-20221208103255765"></p><p>观察上图中的输出信息可以看到在安装插件时向 <code> http://download.elasticsearch.org/mobz/elasticsearch-head/elasticsearch-head-1.x.zip.</code> 请求了 zip 资源, 尝试在本地电脑上访问此链接发现下载不下来, 那么可以假定是指向链接出了问题, 那么现在就需要找到一个可用的插件安装链接</p><p>在使用 <code>docker-compose up -d</code> 后进入该容器然后尝试为拉取插件配置一个不可用的代理</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">plugin</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -DproxyHost=192.168.1.33</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -DproxyPort=7890</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mobz/elasticsearch-head/1.x</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>此时会尝试从各个可能的地址拉取插件</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202212081041520.png" alt="image-20221208104125668"></p><p>在本地机器上尝试这些链接, 最终找到可用链接 <code>https://codeload.github.com/mobz/elasticsearch-head/zip/refs/heads/1.x</code></p><p>于是可以使用该链接安装插件</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bin/plugin</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mobz/elasticsearch-head/1.x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://codeload.github.com/mobz/elasticsearch-head/zip/refs/heads/1.x</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202212081038831.png" alt="image-20221208095040475"></p><p>验证插件是否安装成功:</p><p><img src="http://cdn.ayusummer233.top/DailyNotes/202212081046976.png" alt="image-20221208104020031"></p><p>可以看到已经成功安装上了</p><p>然后 <a href="#%E5%B0%86%E5%AE%B9%E5%99%A8%E9%87%8D%E6%96%B0%E6%89%93%E5%8C%85%E6%88%90%E9%95%9C%E5%83%8F">将容器重新打包成镜像</a> 以便后续使用</p><hr><h3 id="colima" tabindex="-1"><a class="header-anchor" href="#colima"><span>colima</span></a></h3><h4 id="error-failed-to-solve-rpc-error-code-unknown-desc-write-xxx-xxx-no-space-left-on-device" tabindex="-1"><a class="header-anchor" href="#error-failed-to-solve-rpc-error-code-unknown-desc-write-xxx-xxx-no-space-left-on-device"><span>ERROR: failed to solve: rpc error: code = Unknown desc = write /xxx/xxx: no space left on device</span></a></h4><p>这个错误是因为 Colima 虚拟机内部的磁盘空间已经耗尽，而非物理磁盘空间不足。</p><p>Colima 创建的虚拟机默认只分配了有限的磁盘空间</p><hr><ul><li>问题原因 <ul><li><strong>Colima 虚拟机空间限制</strong>：Colima 为 Docker 创建了一个独立的虚拟机，该虚拟机有自己的磁盘空间上限</li><li><strong>Docker 镜像和缓存积累</strong>：构建过程中产生的临时文件、缓存层和未完全清理的镜像占用了空间</li><li><strong>特别是 buildx 使用的构建缓存</strong>：多平台构建会占用更多空间</li></ul></li></ul><hr><p><strong>解决方案</strong>:</p><p>检查 Colima 状态和磁盘使用情况:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">colima</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> status</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">colima</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ssh</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">df</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -h</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 在 Colima VM 内查看磁盘使用情况</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202508141527840.png" alt="image-20250814152739535"></p><hr><p>清理 Docker 资源:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 清理未使用的 Docker 资源</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> system</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prune</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --volumes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看 Docker 磁盘使用情况</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> system</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> df</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="http://cdn.ayusummer233.top/DailyNotes/202508141529768.png" alt="image-20250814152950569"></p><hr><p><img src="http://cdn.ayusummer233.top/DailyNotes/202508141533674.png" alt="image-20250814153353517"></p><hr><p>一般来说到这里就可以解决问题了</p><p>如果想给 Colima 扩容的话可以如此操作:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 停止 Colima</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">colima</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stop</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 使用更大的磁盘空间重新启动</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">colima</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --disk</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --memory</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 8</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,133))])}const A=p(g,[["render",u],["__file","Docker.html.vue"]]),F=JSON.parse('{"path":"/%E9%80%9A%E8%AF%86/Docker/Docker.html","title":"Docker","lang":"zh-CN","frontmatter":{"category":"通识","tags":["Docker"],"excerpt":"Docker 是一个开源的应用容器引擎，允许开发者打包应用及其依赖到一个可移植的容器中，并且可以在任何流行的 Linux 机器上运行。","description":"Docker Docker 安装 换源 Docker-hub 换源 代理 Daemon configuration(守护进程配置) 镜像 常用指令 构建镜像 删除镜像 删除两个 id 相同的镜像 镜像导出与导入 将镜像跑为容器 推送到 Habor 将镜像保存为 tar 文件 容器 常用指令 从容器中复制文件到本地(docker cp) 将容器重新打包成...","head":[["meta",{"property":"og:url","content":"https://233official.github.io/dailynotes/%E9%80%9A%E8%AF%86/Docker/Docker.html"}],["meta",{"property":"og:site_name","content":"DailyNotes"}],["meta",{"property":"og:title","content":"Docker"}],["meta",{"property":"og:description","content":"Docker Docker 安装 换源 Docker-hub 换源 代理 Daemon configuration(守护进程配置) 镜像 常用指令 构建镜像 删除镜像 删除两个 id 相同的镜像 镜像导出与导入 将镜像跑为容器 推送到 Habor 将镜像保存为 tar 文件 容器 常用指令 从容器中复制文件到本地(docker cp) 将容器重新打包成..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"http://cdn.ayusummer233.top/DailyNotes/202410111404586.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-14T10:31:45.000Z"}],["meta",{"property":"article:tag","content":"Docker"}],["meta",{"property":"article:modified_time","content":"2025-08-14T10:31:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker\\",\\"image\\":[\\"http://cdn.ayusummer233.top/DailyNotes/202410111404586.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202410111441468.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202410111442939.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202410111446991.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202505191142688.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202505191406840.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202505191650977.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202505191651681.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202505191651985.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202505191702181.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202505191702898.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202505191801775.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202505200958579.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202505191827292.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202505191829894.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202505191942336.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202505192000645.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202505192001942.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202505192009904.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/image-20240418141046018.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/image-20240418141104580.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/image-20240418143331741.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/image-20240418143351329.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/image-20240418143748673.png\\",\\"http://cdn.ayusummer233.top/img/202211202356631.png\\",\\"http://cdn.ayusummer233.top/img/202211210007112.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202410111503086.png\\",\\"http://cdn.ayusummer233.top/img/202209231758602.png\\",\\"http://cdn.ayusummer233.top/img/202211091029761.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202506130958041.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202506131014152.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202506131042322.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202506131024113.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202506131024434.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202412161954167.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202412162022592.png\\",\\"http://cdn.ayusummer233.top/img/202209192027036.png\\",\\"http://cdn.ayusummer233.top/img/202209192029288.png\\",\\"http://cdn.ayusummer233.top/img/202209192030522.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202212081036240.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202212081041520.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202212081038831.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202212081046976.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202508141527840.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202508141529768.png\\",\\"http://cdn.ayusummer233.top/DailyNotes/202508141533674.png\\"],\\"dateModified\\":\\"2025-08-14T10:31:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"咸鱼型233\\",\\"url\\":\\"https://233official.github.io/dailynotes/\\"}]}"]],"date":"2022-11-09T02:29:39.000Z"},"headers":[{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"换源","slug":"换源","link":"#换源","children":[{"level":3,"title":"Docker-hub 换源","slug":"docker-hub-换源","link":"#docker-hub-换源","children":[]}]},{"level":2,"title":"代理","slug":"代理","link":"#代理","children":[{"level":3,"title":"Daemon configuration(守护进程配置)","slug":"daemon-configuration-守护进程配置","link":"#daemon-configuration-守护进程配置","children":[]}]},{"level":2,"title":"镜像","slug":"镜像","link":"#镜像","children":[{"level":3,"title":"常用指令","slug":"常用指令","link":"#常用指令","children":[]},{"level":3,"title":"构建镜像","slug":"构建镜像","link":"#构建镜像","children":[]},{"level":3,"title":"删除镜像","slug":"删除镜像","link":"#删除镜像","children":[]},{"level":3,"title":"镜像导出与导入","slug":"镜像导出与导入","link":"#镜像导出与导入","children":[]},{"level":3,"title":"将镜像跑为容器","slug":"将镜像跑为容器","link":"#将镜像跑为容器","children":[]},{"level":3,"title":"推送到 Habor","slug":"推送到-habor","link":"#推送到-habor","children":[]},{"level":3,"title":"将镜像保存为 tar 文件","slug":"将镜像保存为-tar-文件","link":"#将镜像保存为-tar-文件","children":[]}]},{"level":2,"title":"容器","slug":"容器","link":"#容器","children":[{"level":3,"title":"常用指令","slug":"常用指令-1","link":"#常用指令-1","children":[]},{"level":3,"title":"从容器中复制文件到本地(docker cp)","slug":"从容器中复制文件到本地-docker-cp","link":"#从容器中复制文件到本地-docker-cp","children":[]},{"level":3,"title":"将容器重新打包成镜像","slug":"将容器重新打包成镜像","link":"#将容器重新打包成镜像","children":[]}]},{"level":2,"title":"常见问题","slug":"常见问题","link":"#常见问题","children":[{"level":3,"title":"ERROR: could not find an available, non-overlapping IPv4 address pool among the defaults to assign to the network","slug":"error-could-not-find-an-available-non-overlapping-ipv4-address-pool-among-the-defaults-to-assign-to-the-network","link":"#error-could-not-find-an-available-non-overlapping-ipv4-address-pool-among-the-defaults-to-assign-to-the-network","children":[]},{"level":3,"title":"unable to connect to deb.debian.org:http","slug":"unable-to-connect-to-deb-debian-org-http","link":"#unable-to-connect-to-deb-debian-org-http","children":[]},{"level":3,"title":"There is no public key","slug":"there-is-no-public-key","link":"#there-is-no-public-key","children":[]},{"level":3,"title":"debconf: delaying package configuration, since apt-utils is not installed","slug":"debconf-delaying-package-configuration-since-apt-utils-is-not-installed","link":"#debconf-delaying-package-configuration-since-apt-utils-is-not-installed","children":[]},{"level":3,"title":"安装插件失败 - failed to extract plugin [/usr/share/elasticsearch/plugins/head.zip]: ZipException[zip file is empty]","slug":"安装插件失败-failed-to-extract-plugin-usr-share-elasticsearch-plugins-head-zip-zipexception-zip-file-is-empty","link":"#安装插件失败-failed-to-extract-plugin-usr-share-elasticsearch-plugins-head-zip-zipexception-zip-file-is-empty","children":[]},{"level":3,"title":"colima","slug":"colima","link":"#colima","children":[]}]}],"git":{"createdTime":1667960979000,"updatedTime":1755167505000,"contributors":[{"name":"233Mac","username":"233Mac","email":"ayusummer233@vip.qq.com","commits":8,"url":"https://github.com/233Mac"},{"name":"233","username":"233","email":"ayusummer233@vip.qq.com","commits":5,"url":"https://github.com/233"},{"name":"233PC","username":"233PC","email":"ayusummer233@gmail.com","commits":2,"url":"https://github.com/233PC"},{"name":"233JG","username":"233JG","email":"ayusummer233@gmail.com","commits":2,"url":"https://github.com/233JG"},{"name":"Ayusummer","username":"Ayusummer","email":"ayusummer233@gmail.com","commits":1,"url":"https://github.com/Ayusummer"},{"name":"233Official","username":"233Official","email":"ayusummr233@gmail.com","commits":1,"url":"https://github.com/233Official"},{"name":"233Official","username":"233Official","email":"ayusummer233@qq.com","commits":3,"url":"https://github.com/233Official"},{"name":"咸鱼型233","username":"咸鱼型233","email":"ayusummer233@qq.com","commits":5,"url":"https://github.com/咸鱼型233"}]},"readingTime":{"minutes":23.11,"words":6933},"filePathRelative":"通识/Docker/Docker.md","localizedDate":"2022年11月9日","autoDesc":true}');export{A as comp,F as data};
